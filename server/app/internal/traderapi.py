# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _traderapi
else:
    import _traderapi

import builtins as __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref


def set_null(*args) -> "void":
    return _traderapi.set_null(*args)

def is_null(*args) -> "bool":
    return _traderapi.is_null(*args)
TORA_TERT_RESTART = _traderapi.TORA_TERT_RESTART
TORA_TERT_RESUME = _traderapi.TORA_TERT_RESUME
TORA_TERT_QUICK = _traderapi.TORA_TERT_QUICK



#########################################登录请求############################################
class CTORATstpReqUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqUserLoginField_UserRequestID_get, _traderapi.CTORATstpReqUserLoginField_UserRequestID_set)

	# 登录账户
    LogInAccount = property(_traderapi.CTORATstpReqUserLoginField_LogInAccount_get, _traderapi.CTORATstpReqUserLoginField_LogInAccount_set)

	# 登录账户类型
    LogInAccountType = property(_traderapi.CTORATstpReqUserLoginField_LogInAccountType_get, _traderapi.CTORATstpReqUserLoginField_LogInAccountType_set)

	# 经纪公司部门代码（以资金账号方式登录时必填）
    DepartmentID = property(_traderapi.CTORATstpReqUserLoginField_DepartmentID_get, _traderapi.CTORATstpReqUserLoginField_DepartmentID_set)

	# 认证方式(指纹或钥匙串认证时必填)
    AuthMode = property(_traderapi.CTORATstpReqUserLoginField_AuthMode_get, _traderapi.CTORATstpReqUserLoginField_AuthMode_set)

	# 密码(密码认证时必填)
    Password = property(_traderapi.CTORATstpReqUserLoginField_Password_get, _traderapi.CTORATstpReqUserLoginField_Password_set)

	# 用户端产品信息
    UserProductInfo = property(_traderapi.CTORATstpReqUserLoginField_UserProductInfo_get, _traderapi.CTORATstpReqUserLoginField_UserProductInfo_set)

	# 接口端产品信息
    InterfaceProductInfo = property(_traderapi.CTORATstpReqUserLoginField_InterfaceProductInfo_get, _traderapi.CTORATstpReqUserLoginField_InterfaceProductInfo_set)

	# 终端采集信息
    TerminalInfo = property(_traderapi.CTORATstpReqUserLoginField_TerminalInfo_get, _traderapi.CTORATstpReqUserLoginField_TerminalInfo_set)

	# 内网IP地址
    InnerIPAddress = property(_traderapi.CTORATstpReqUserLoginField_InnerIPAddress_get, _traderapi.CTORATstpReqUserLoginField_InnerIPAddress_set)

	# 外网IP地址
    OuterIPAddress = property(_traderapi.CTORATstpReqUserLoginField_OuterIPAddress_get, _traderapi.CTORATstpReqUserLoginField_OuterIPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpReqUserLoginField_MacAddress_get, _traderapi.CTORATstpReqUserLoginField_MacAddress_set)

	# 接口语言
    Lang = property(_traderapi.CTORATstpReqUserLoginField_Lang_get, _traderapi.CTORATstpReqUserLoginField_Lang_set)

	# 终端动态秘钥
    DynamicPassword = property(_traderapi.CTORATstpReqUserLoginField_DynamicPassword_get, _traderapi.CTORATstpReqUserLoginField_DynamicPassword_set)

	# 设备标识(指纹认证时必填)
    DeviceID = property(_traderapi.CTORATstpReqUserLoginField_DeviceID_get, _traderapi.CTORATstpReqUserLoginField_DeviceID_set)

	# 认证序列号(指纹或钥匙串认证时必填)
    CertSerial = property(_traderapi.CTORATstpReqUserLoginField_CertSerial_get, _traderapi.CTORATstpReqUserLoginField_CertSerial_set)

	# 设备类别(指纹或钥匙串认证时必填)
    DeviceType = property(_traderapi.CTORATstpReqUserLoginField_DeviceType_get, _traderapi.CTORATstpReqUserLoginField_DeviceType_set)

	# 关联节点编号(内部使用)
    NodeRef = property(_traderapi.CTORATstpReqUserLoginField_NodeRef_get, _traderapi.CTORATstpReqUserLoginField_NodeRef_set)

    def __init__(self):
        _traderapi.CTORATstpReqUserLoginField_swiginit(self, _traderapi.new_CTORATstpReqUserLoginField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqUserLoginField

# Register CTORATstpReqUserLoginField in _traderapi:
_traderapi.CTORATstpReqUserLoginField_swigregister(CTORATstpReqUserLoginField)
cvar = _traderapi.cvar
INT_NULL_VAL = cvar.INT_NULL_VAL
FLOAT_NULL_VAL = cvar.FLOAT_NULL_VAL
CHAR_NULL_VAL = cvar.CHAR_NULL_VAL
WORD_NULL_VAL = cvar.WORD_NULL_VAL
LONG_NULL_VAL = cvar.LONG_NULL_VAL
# 用户代码
TORA_TSTP_LACT_UserID = cvar.TORA_TSTP_LACT_UserID
# 资金账号
TORA_TSTP_LACT_AccountID = cvar.TORA_TSTP_LACT_AccountID
# 上海A股
TORA_TSTP_LACT_SHAStock = cvar.TORA_TSTP_LACT_SHAStock
# 深圳A股
TORA_TSTP_LACT_SZAStock = cvar.TORA_TSTP_LACT_SZAStock
# 上海B股
TORA_TSTP_LACT_SHBStock = cvar.TORA_TSTP_LACT_SHBStock
# 深圳B股
TORA_TSTP_LACT_SZBStock = cvar.TORA_TSTP_LACT_SZBStock
# 三板A
TORA_TSTP_LACT_ThreeNewBoardA = cvar.TORA_TSTP_LACT_ThreeNewBoardA
# 三板B
TORA_TSTP_LACT_ThreeNewBoardB = cvar.TORA_TSTP_LACT_ThreeNewBoardB
# 港股
TORA_TSTP_LACT_HKStock = cvar.TORA_TSTP_LACT_HKStock
# 统一用户代码
TORA_TSTP_LACT_UnifiedUserID = cvar.TORA_TSTP_LACT_UnifiedUserID
# 北京A股
TORA_TSTP_LACT_BJAStock = cvar.TORA_TSTP_LACT_BJAStock
# 密码
TORA_TSTP_AM_Password = cvar.TORA_TSTP_AM_Password
# 指纹
TORA_TSTP_AM_FingerPrint = cvar.TORA_TSTP_AM_FingerPrint
# 钥匙串
TORA_TSTP_AM_CertInfo = cvar.TORA_TSTP_AM_CertInfo
# 简体中文
TORA_TSTP_LGT_ZHCN = cvar.TORA_TSTP_LGT_ZHCN
# 中文香港
TORA_TSTP_LGT_ZHHK = cvar.TORA_TSTP_LGT_ZHHK
# 英文美国
TORA_TSTP_LGT_ENUS = cvar.TORA_TSTP_LGT_ENUS
# PC端
TORA_TSTP_DVT_PC = cvar.TORA_TSTP_DVT_PC
# 移动端
TORA_TSTP_DVT_Mobile = cvar.TORA_TSTP_DVT_Mobile
# 经纪公司用户
TORA_TSTP_UTYPE_BrokerUser = cvar.TORA_TSTP_UTYPE_BrokerUser
# 超级用户
TORA_TSTP_UTYPE_SuperUser = cvar.TORA_TSTP_UTYPE_SuperUser
# 投资者用户
TORA_TSTP_UTYPE_Investor = cvar.TORA_TSTP_UTYPE_Investor
# 通用(内部使用)
TORA_TSTP_EXD_COMM = cvar.TORA_TSTP_EXD_COMM
# 上海交易所
TORA_TSTP_EXD_SSE = cvar.TORA_TSTP_EXD_SSE
# 深圳交易所
TORA_TSTP_EXD_SZSE = cvar.TORA_TSTP_EXD_SZSE
# 香港交易所
TORA_TSTP_EXD_HK = cvar.TORA_TSTP_EXD_HK
# 北京证券交易所
TORA_TSTP_EXD_BSE = cvar.TORA_TSTP_EXD_BSE
# 买入
TORA_TSTP_D_Buy = cvar.TORA_TSTP_D_Buy
# 卖出
TORA_TSTP_D_Sell = cvar.TORA_TSTP_D_Sell
# ETF申购
TORA_TSTP_D_ETFPur = cvar.TORA_TSTP_D_ETFPur
# ETF赎回
TORA_TSTP_D_ETFRed = cvar.TORA_TSTP_D_ETFRed
# 新股申购
TORA_TSTP_D_IPO = cvar.TORA_TSTP_D_IPO
# 正回购
TORA_TSTP_D_Repurchase = cvar.TORA_TSTP_D_Repurchase
# 逆回购
TORA_TSTP_D_ReverseRepur = cvar.TORA_TSTP_D_ReverseRepur
# 开放式基金申购
TORA_TSTP_D_OeFundPur = cvar.TORA_TSTP_D_OeFundPur
# 开放式基金赎回
TORA_TSTP_D_OeFundRed = cvar.TORA_TSTP_D_OeFundRed
# 担保品划入
TORA_TSTP_D_CollateralIn = cvar.TORA_TSTP_D_CollateralIn
# 担保品划出
TORA_TSTP_D_CollateralOut = cvar.TORA_TSTP_D_CollateralOut
# 质押入库
TORA_TSTP_D_PledgeIn = cvar.TORA_TSTP_D_PledgeIn
# 质押出库
TORA_TSTP_D_PledgeOut = cvar.TORA_TSTP_D_PledgeOut
# 配股配债
TORA_TSTP_D_Rationed = cvar.TORA_TSTP_D_Rationed
# 基金拆分
TORA_TSTP_D_Split = cvar.TORA_TSTP_D_Split
# 基金合并
TORA_TSTP_D_Merge = cvar.TORA_TSTP_D_Merge
# 融资买入
TORA_TSTP_D_CreditBuy = cvar.TORA_TSTP_D_CreditBuy
# 融券卖出
TORA_TSTP_D_CreditSell = cvar.TORA_TSTP_D_CreditSell
# 卖券还款
TORA_TSTP_D_SellRepay = cvar.TORA_TSTP_D_SellRepay
# 买券还券
TORA_TSTP_D_BuyRepay = cvar.TORA_TSTP_D_BuyRepay
# 还券划转
TORA_TSTP_D_RepayTransfer = cvar.TORA_TSTP_D_RepayTransfer
# 余券划转
TORA_TSTP_D_SurplusTransfer = cvar.TORA_TSTP_D_SurplusTransfer
# 源券划转
TORA_TSTP_D_SourceTransfer = cvar.TORA_TSTP_D_SourceTransfer
# 债券转股
TORA_TSTP_D_BondConvertStock = cvar.TORA_TSTP_D_BondConvertStock
# 债券回售
TORA_TSTP_D_BondPutback = cvar.TORA_TSTP_D_BondPutback
# ETF实物申购
TORA_TSTP_D_ETFOtPur = cvar.TORA_TSTP_D_ETFOtPur
# ETF实物赎回
TORA_TSTP_D_ETFOtRed = cvar.TORA_TSTP_D_ETFOtRed
# 回售撤销
TORA_TSTP_D_PutbackRelieve = cvar.TORA_TSTP_D_PutbackRelieve
# 意向买入
TORA_TSTP_D_IOIBuy = cvar.TORA_TSTP_D_IOIBuy
# 意向卖出
TORA_TSTP_D_IOISell = cvar.TORA_TSTP_D_IOISell
# 成交确认买入
TORA_TSTP_D_TCRBuy = cvar.TORA_TSTP_D_TCRBuy
# 成交确认卖出
TORA_TSTP_D_TCRSell = cvar.TORA_TSTP_D_TCRSell
# 任意价
TORA_TSTP_OPT_AnyPrice = cvar.TORA_TSTP_OPT_AnyPrice
# 限价
TORA_TSTP_OPT_LimitPrice = cvar.TORA_TSTP_OPT_LimitPrice
# 最优价
TORA_TSTP_OPT_BestPrice = cvar.TORA_TSTP_OPT_BestPrice
# 盘后定价
TORA_TSTP_OPT_FixPrice = cvar.TORA_TSTP_OPT_FixPrice
# 五档价
TORA_TSTP_OPT_FiveLevelPrice = cvar.TORA_TSTP_OPT_FiveLevelPrice
# 本方最优
TORA_TSTP_OPT_HomeBestPrice = cvar.TORA_TSTP_OPT_HomeBestPrice
# 立即完成，否则撤销
TORA_TSTP_TC_IOC = cvar.TORA_TSTP_TC_IOC
# 本节有效
TORA_TSTP_TC_GFS = cvar.TORA_TSTP_TC_GFS
# 当日有效
TORA_TSTP_TC_GFD = cvar.TORA_TSTP_TC_GFD
# 指定日期前有效
TORA_TSTP_TC_GTD = cvar.TORA_TSTP_TC_GTD
# 撤销前有效
TORA_TSTP_TC_GTC = cvar.TORA_TSTP_TC_GTC
# 集合竞价有效
TORA_TSTP_TC_GFA = cvar.TORA_TSTP_TC_GFA
# 任何数量
TORA_TSTP_VC_AV = cvar.TORA_TSTP_VC_AV
# 最小数量
TORA_TSTP_VC_MV = cvar.TORA_TSTP_VC_MV
# 全部数量
TORA_TSTP_VC_CV = cvar.TORA_TSTP_VC_CV
# 空
TORA_TSTP_OPERW_Non = cvar.TORA_TSTP_OPERW_Non
# 电话委托
TORA_TSTP_OPERW_Telephone = cvar.TORA_TSTP_OPERW_Telephone
# 柜台委托
TORA_TSTP_OPERW_OTC = cvar.TORA_TSTP_OPERW_OTC
# 移动客户端委托
TORA_TSTP_OPERW_MobileClient = cvar.TORA_TSTP_OPERW_MobileClient
# PC客户端委托
TORA_TSTP_OPERW_PCClient = cvar.TORA_TSTP_OPERW_PCClient
# TY委托
TORA_TSTP_OPERW_TY = cvar.TORA_TSTP_OPERW_TY
# 通道委托
TORA_TSTP_OPERW_Channel = cvar.TORA_TSTP_OPERW_Channel
# 零股订单
TORA_TSTP_LT_OddLot = cvar.TORA_TSTP_LT_OddLot
# 整手订单
TORA_TSTP_LT_RoundLot = cvar.TORA_TSTP_LT_RoundLot
# 不做任何检查
TORA_TSTP_CCT_None = cvar.TORA_TSTP_CCT_None
# 自成交检查
TORA_TSTP_CCT_SelfDeal = cvar.TORA_TSTP_CCT_SelfDeal
# 非强平
TORA_TSTP_FCC_NotForceClose = cvar.TORA_TSTP_FCC_NotForceClose
# 资金不足
TORA_TSTP_FCC_MoneyNotEnough = cvar.TORA_TSTP_FCC_MoneyNotEnough
# 仓位超限
TORA_TSTP_FCC_PositionOverFull = cvar.TORA_TSTP_FCC_PositionOverFull
# 其它
TORA_TSTP_FCC_Other = cvar.TORA_TSTP_FCC_Other
# 普通
TORA_TSTP_CQT_Normal = cvar.TORA_TSTP_CQT_Normal
# 专项
TORA_TSTP_CQT_Special = cvar.TORA_TSTP_CQT_Special
# 预埋
TORA_TSTP_OST_Cached = cvar.TORA_TSTP_OST_Cached
# 未知
TORA_TSTP_OST_Unknown = cvar.TORA_TSTP_OST_Unknown
# 交易所已接收
TORA_TSTP_OST_Accepted = cvar.TORA_TSTP_OST_Accepted
# 部分成交
TORA_TSTP_OST_PartTraded = cvar.TORA_TSTP_OST_PartTraded
# 全部成交
TORA_TSTP_OST_AllTraded = cvar.TORA_TSTP_OST_AllTraded
# 部成部撤
TORA_TSTP_OST_PartTradeCanceled = cvar.TORA_TSTP_OST_PartTradeCanceled
# 全部撤单
TORA_TSTP_OST_AllCanceled = cvar.TORA_TSTP_OST_AllCanceled
# 交易所已拒绝
TORA_TSTP_OST_Rejected = cvar.TORA_TSTP_OST_Rejected
# 发往交易核心
TORA_TSTP_OST_SendTradeEngine = cvar.TORA_TSTP_OST_SendTradeEngine
# 未提交
TORA_TSTP_OSS_InsertUnSubmit = cvar.TORA_TSTP_OSS_InsertUnSubmit
# 已提交
TORA_TSTP_OSS_InsertSubmitted = cvar.TORA_TSTP_OSS_InsertSubmitted
# 撤单未提交
TORA_TSTP_OSS_CancelUnSubmit = cvar.TORA_TSTP_OSS_CancelUnSubmit
# 撤单已提交
TORA_TSTP_OSS_CancelSubmitted = cvar.TORA_TSTP_OSS_CancelSubmitted
# 撤单已被拒绝
TORA_TSTP_OSS_CancelRejected = cvar.TORA_TSTP_OSS_CancelRejected
# 撤单已删除
TORA_TSTP_OSS_CancelDeleted = cvar.TORA_TSTP_OSS_CancelDeleted
# 人民币
TORA_TSTP_CID_CNY = cvar.TORA_TSTP_CID_CNY
# 港币
TORA_TSTP_CID_HKD = cvar.TORA_TSTP_CID_HKD
# 美元
TORA_TSTP_CID_USD = cvar.TORA_TSTP_CID_USD
# 正常
TORA_TSTP_ORDT_Normal = cvar.TORA_TSTP_ORDT_Normal
# 报价衍生
TORA_TSTP_ORDT_DeriveFromQuote = cvar.TORA_TSTP_ORDT_DeriveFromQuote
# 组合衍生
TORA_TSTP_ORDT_DeriveFromCombination = cvar.TORA_TSTP_ORDT_DeriveFromCombination
# 组合报单
TORA_TSTP_ORDT_Combination = cvar.TORA_TSTP_ORDT_Combination
# 条件单
TORA_TSTP_ORDT_ConditionalOrder = cvar.TORA_TSTP_ORDT_ConditionalOrder
# 互换单
TORA_TSTP_ORDT_Swap = cvar.TORA_TSTP_ORDT_Swap
# 预埋单
TORA_TSTP_ORDT_Cache = cvar.TORA_TSTP_ORDT_Cache
# 夜市委托
TORA_TSTP_ORDT_Night = cvar.TORA_TSTP_ORDT_Night
# 通道委托
TORA_TSTP_ORDT_Board = cvar.TORA_TSTP_ORDT_Board
# 删除
TORA_TSTP_AF_Delete = cvar.TORA_TSTP_AF_Delete
# 修改
TORA_TSTP_AF_Modify = cvar.TORA_TSTP_AF_Modify
# 强制删除
TORA_TSTP_AF_ForceDelete = cvar.TORA_TSTP_AF_ForceDelete
# 自定义数量
TORA_TSTP_TOVT_CustomVol = cvar.TORA_TSTP_TOVT_CustomVol
# 相关数量
TORA_TSTP_TOVT_RelativeVol = cvar.TORA_TSTP_TOVT_RelativeVol
# 自定义价格
TORA_TSTP_TOPT_CustomPrice = cvar.TORA_TSTP_TOPT_CustomPrice
# 最新价
TORA_TSTP_TOPT_LastPrice = cvar.TORA_TSTP_TOPT_LastPrice
# 卖一价
TORA_TSTP_TOPT_AskPrice1 = cvar.TORA_TSTP_TOPT_AskPrice1
# 买一价
TORA_TSTP_TOPT_BidPrice1 = cvar.TORA_TSTP_TOPT_BidPrice1
# 相关价
TORA_TSTP_TOPT_Relative = cvar.TORA_TSTP_TOPT_Relative
# 成交触发
TORA_TSTP_CC_TradeTouch = cvar.TORA_TSTP_CC_TradeTouch
# 撤单触发
TORA_TSTP_CC_CancelTouch = cvar.TORA_TSTP_CC_CancelTouch
# 时间触发
TORA_TSTP_CC_TimeTouch = cvar.TORA_TSTP_CC_TimeTouch
# 交易时段触发
TORA_TSTP_CC_SegmentTouch = cvar.TORA_TSTP_CC_SegmentTouch
# 最新价大于等于条件价
TORA_TSTP_CC_LastPriceGreaterThanStopPrice = cvar.TORA_TSTP_CC_LastPriceGreaterThanStopPrice
# 最新价小于等于条件价
TORA_TSTP_CC_LastPriceLesserThanStopPrice = cvar.TORA_TSTP_CC_LastPriceLesserThanStopPrice
# 卖一价大于等于条件价
TORA_TSTP_CC_AskPriceGreaterEqualStopPrice = cvar.TORA_TSTP_CC_AskPriceGreaterEqualStopPrice
# 卖一价小于等于条件价
TORA_TSTP_CC_AskPriceLesserEqualStopPrice = cvar.TORA_TSTP_CC_AskPriceLesserEqualStopPrice
# 买一价大于等于条件价
TORA_TSTP_CC_BidPriceGreaterEqualStopPrice = cvar.TORA_TSTP_CC_BidPriceGreaterEqualStopPrice
# 买一价小于等于条件价
TORA_TSTP_CC_BidPriceLesserEqualStopPrice = cvar.TORA_TSTP_CC_BidPriceLesserEqualStopPrice
# 初始
TORA_TSTP_COST_Initial = cvar.TORA_TSTP_COST_Initial
# 未触发
TORA_TSTP_COST_NotTouched = cvar.TORA_TSTP_COST_NotTouched
# 已触发
TORA_TSTP_COST_Touched = cvar.TORA_TSTP_COST_Touched
# 已结束
TORA_TSTP_COST_Finished = cvar.TORA_TSTP_COST_Finished
# 已撤销
TORA_TSTP_COST_Cancel = cvar.TORA_TSTP_COST_Cancel
# 触发失败
TORA_TSTP_COST_Failed = cvar.TORA_TSTP_COST_Failed
# 通用(内部使用)
TORA_TSTP_MKD_COMMON = cvar.TORA_TSTP_MKD_COMMON
# 上海A股
TORA_TSTP_MKD_SHA = cvar.TORA_TSTP_MKD_SHA
# 深圳A股
TORA_TSTP_MKD_SZA = cvar.TORA_TSTP_MKD_SZA
# 上海B股
TORA_TSTP_MKD_SHB = cvar.TORA_TSTP_MKD_SHB
# 深圳B股
TORA_TSTP_MKD_SZB = cvar.TORA_TSTP_MKD_SZB
# 深圳三版A股
TORA_TSTP_MKD_SZThreeA = cvar.TORA_TSTP_MKD_SZThreeA
# 深圳三版B股
TORA_TSTP_MKD_SZThreeB = cvar.TORA_TSTP_MKD_SZThreeB
# 境外市场
TORA_TSTP_MKD_Foreign = cvar.TORA_TSTP_MKD_Foreign
# 深圳港股通市场
TORA_TSTP_MKD_SZHK = cvar.TORA_TSTP_MKD_SZHK
# 上海港股通市场
TORA_TSTP_MKD_SHHK = cvar.TORA_TSTP_MKD_SHHK
# 北京主板
TORA_TSTP_MKD_BJMain = cvar.TORA_TSTP_MKD_BJMain
# 未知
TORA_TSTP_MST_UnKnown = cvar.TORA_TSTP_MST_UnKnown
# 开盘前
TORA_TSTP_MST_BeforeTrading = cvar.TORA_TSTP_MST_BeforeTrading
# 连续交易
TORA_TSTP_MST_Continous = cvar.TORA_TSTP_MST_Continous
# 收盘
TORA_TSTP_MST_Closed = cvar.TORA_TSTP_MST_Closed
# 开盘集合竞价
TORA_TSTP_MST_OpenCallAuction = cvar.TORA_TSTP_MST_OpenCallAuction
# (港股通)未开市
TORA_TSTP_MST_SZSEHKUnopened = cvar.TORA_TSTP_MST_SZSEHKUnopened
# (港股通)开盘集合竞价输入买卖盘
TORA_TSTP_MST_SZSEHKOpenCallAuctionInput = cvar.TORA_TSTP_MST_SZSEHKOpenCallAuctionInput
# (港股通)开盘集合竞价对盘前
TORA_TSTP_MST_SZSEHKOpenCallAuctionBeforeMatch = cvar.TORA_TSTP_MST_SZSEHKOpenCallAuctionBeforeMatch
# (港股通)开盘集合竞价对盘
TORA_TSTP_MST_SZSEHKOpenCallAuctionMatch = cvar.TORA_TSTP_MST_SZSEHKOpenCallAuctionMatch
# (港股通)暂停
TORA_TSTP_MST_SZSEHKHalt = cvar.TORA_TSTP_MST_SZSEHKHalt
# (港股通)持续交易
TORA_TSTP_MST_SZSEHKContinous = cvar.TORA_TSTP_MST_SZSEHKContinous
# (港股通)Exchange Intervention
TORA_TSTP_MST_SZSEHKExchangeIntervention = cvar.TORA_TSTP_MST_SZSEHKExchangeIntervention
# (港股通)收盘集合竞价参考价定价
TORA_TSTP_MST_SZSEHKCloseCallAuctionReferencePrice = cvar.TORA_TSTP_MST_SZSEHKCloseCallAuctionReferencePrice
# (港股通)收盘集合竞价输入买卖盘
TORA_TSTP_MST_SZSEHKCloseCallAuctionInput = cvar.TORA_TSTP_MST_SZSEHKCloseCallAuctionInput
# (港股通)收盘集合竞价不可取消
TORA_TSTP_MST_SZSEHKCloseCallAuctionCannotCancel = cvar.TORA_TSTP_MST_SZSEHKCloseCallAuctionCannotCancel
# (港股通)收盘集合竞价对盘
TORA_TSTP_MST_SZSEHKCloseCallAuctionMatch = cvar.TORA_TSTP_MST_SZSEHKCloseCallAuctionMatch
# (港股通)收盘集合竞价随机收市
TORA_TSTP_MST_SZSEHKCloseCallAuctionRandomClosed = cvar.TORA_TSTP_MST_SZSEHKCloseCallAuctionRandomClosed
# (港股通)取消买卖盘
TORA_TSTP_MST_SZSEHKCancel = cvar.TORA_TSTP_MST_SZSEHKCancel
# (港股通)收市
TORA_TSTP_MST_SZSEHKClosed = cvar.TORA_TSTP_MST_SZSEHKClosed
# (港股通)全日收市
TORA_TSTP_MST_SZSEHKWholeClosed = cvar.TORA_TSTP_MST_SZSEHKWholeClosed
# 蓝补
TORA_TSTP_TRNSD_In = cvar.TORA_TSTP_TRNSD_In
# 红冲
TORA_TSTP_TRNSD_Out = cvar.TORA_TSTP_TRNSD_Out
# 集中交易调入
TORA_TSTP_TRNSD_MoveIn = cvar.TORA_TSTP_TRNSD_MoveIn
# 集中交易调出
TORA_TSTP_TRNSD_MoveOut = cvar.TORA_TSTP_TRNSD_MoveOut
# 冻结
TORA_TSTP_TRNSD_Freeze = cvar.TORA_TSTP_TRNSD_Freeze
# 解冻
TORA_TSTP_TRNSD_UnFreeze = cvar.TORA_TSTP_TRNSD_UnFreeze
# 证券转银行
TORA_TSTP_TRNSD_StockToBank = cvar.TORA_TSTP_TRNSD_StockToBank
# 银行转证券
TORA_TSTP_TRNSD_BankToStock = cvar.TORA_TSTP_TRNSD_BankToStock
# 外部节点转入
TORA_TSTP_TRNSD_NodeMoveIn = cvar.TORA_TSTP_TRNSD_NodeMoveIn
# 外部节点转出
TORA_TSTP_TRNSD_NodeMoveOut = cvar.TORA_TSTP_TRNSD_NodeMoveOut
# 直接还款
TORA_TSTP_TRNSD_CashRepay = cvar.TORA_TSTP_TRNSD_CashRepay
# 直接还息(内部使用)
TORA_TSTP_TRNSD_CashRepayInterestFee = cvar.TORA_TSTP_TRNSD_CashRepayInterestFee
# 中国建设银行
TORA_TSTP_BKID_CCB = cvar.TORA_TSTP_BKID_CCB
# 中国农业银行
TORA_TSTP_BKID_ABC = cvar.TORA_TSTP_BKID_ABC
# 中国工商银行
TORA_TSTP_BKID_ICBC = cvar.TORA_TSTP_BKID_ICBC
# 中国银行
TORA_TSTP_BKID_BOC = cvar.TORA_TSTP_BKID_BOC
# 中国招商银行
TORA_TSTP_BKID_CMB = cvar.TORA_TSTP_BKID_CMB
# 中国交通银行
TORA_TSTP_BKID_BC = cvar.TORA_TSTP_BKID_BC
# 浦东发展银行
TORA_TSTP_BKID_SPDB = cvar.TORA_TSTP_BKID_SPDB
# 兴业银行
TORA_TSTP_BKID_CIB = cvar.TORA_TSTP_BKID_CIB
# 中国光大银行
TORA_TSTP_BKID_CEB = cvar.TORA_TSTP_BKID_CEB
# 广东发展银行
TORA_TSTP_BKID_GDB = cvar.TORA_TSTP_BKID_GDB
# 南京银行
TORA_TSTP_BKID_NJCB = cvar.TORA_TSTP_BKID_NJCB
# 上海银行
TORA_TSTP_BKID_SHCB = cvar.TORA_TSTP_BKID_SHCB
# 中信银行
TORA_TSTP_BKID_CITICB = cvar.TORA_TSTP_BKID_CITICB
# 华夏银行
TORA_TSTP_BKID_HXB = cvar.TORA_TSTP_BKID_HXB
# 民生银行
TORA_TSTP_BKID_CMBC = cvar.TORA_TSTP_BKID_CMBC
# 平安银行
TORA_TSTP_BKID_PACB = cvar.TORA_TSTP_BKID_PACB
# 宁波银行
TORA_TSTP_BKID_NBCB = cvar.TORA_TSTP_BKID_NBCB
# 北京银行
TORA_TSTP_BKID_BOB = cvar.TORA_TSTP_BKID_BOB
# 邮储银行
TORA_TSTP_BKID_PSBC = cvar.TORA_TSTP_BKID_PSBC
# 转移正在处理
TORA_TSTP_TRANST_TranferHandling = cvar.TORA_TSTP_TRANST_TranferHandling
# 转移成功
TORA_TSTP_TRANST_TransferSuccess = cvar.TORA_TSTP_TRANST_TransferSuccess
# 转移失败
TORA_TSTP_TRANST_TransferFail = cvar.TORA_TSTP_TRANST_TransferFail
# 冲正正在处理
TORA_TSTP_TRANST_RepealHandling = cvar.TORA_TSTP_TRANST_RepealHandling
# 冲正成功
TORA_TSTP_TRANST_RepealSuccess = cvar.TORA_TSTP_TRANST_RepealSuccess
# 冲正失败
TORA_TSTP_TRANST_RepealFail = cvar.TORA_TSTP_TRANST_RepealFail
# 外部系统已接收
TORA_TSTP_TRANST_ExternalAccepted = cvar.TORA_TSTP_TRANST_ExternalAccepted
# 发往交易核心
TORA_TSTP_TRANST_SendTradeEngine = cvar.TORA_TSTP_TRANST_SendTradeEngine
# 任意仓
TORA_TSTP_TPT_ALL = cvar.TORA_TSTP_TPT_ALL
# 昨仓
TORA_TSTP_TPT_History = cvar.TORA_TSTP_TPT_History
# 今买卖仓
TORA_TSTP_TPT_TodayBS = cvar.TORA_TSTP_TPT_TodayBS
# 今申赎仓
TORA_TSTP_TPT_TodayPR = cvar.TORA_TSTP_TPT_TodayPR
# 今拆分合并仓
TORA_TSTP_TPT_TodaySM = cvar.TORA_TSTP_TPT_TodaySM
# 未同步
TORA_TSTP_DS_Asynchronous = cvar.TORA_TSTP_DS_Asynchronous
# 同步中
TORA_TSTP_DS_Synchronizing = cvar.TORA_TSTP_DS_Synchronizing
# 已同步
TORA_TSTP_DS_Synchronized = cvar.TORA_TSTP_DS_Synchronized
# 全部同步完成
TORA_TSTP_DS_AllSynchronized = cvar.TORA_TSTP_DS_AllSynchronized
# 预同步完成
TORA_TSTP_DS_PreSync = cvar.TORA_TSTP_DS_PreSync
# 通用(内部使用)
TORA_TSTP_PID_COMMON = cvar.TORA_TSTP_PID_COMMON
# 上海股票
TORA_TSTP_PID_SHStock = cvar.TORA_TSTP_PID_SHStock
# 上海基金
TORA_TSTP_PID_SHFund = cvar.TORA_TSTP_PID_SHFund
# 上海债券
TORA_TSTP_PID_SHBond = cvar.TORA_TSTP_PID_SHBond
# 上海标准券
TORA_TSTP_PID_SHStandard = cvar.TORA_TSTP_PID_SHStandard
# 上海质押式回购
TORA_TSTP_PID_SHRepurchase = cvar.TORA_TSTP_PID_SHRepurchase
# 深圳股票
TORA_TSTP_PID_SZStock = cvar.TORA_TSTP_PID_SZStock
# 深圳基金
TORA_TSTP_PID_SZFund = cvar.TORA_TSTP_PID_SZFund
# 深圳债券
TORA_TSTP_PID_SZBond = cvar.TORA_TSTP_PID_SZBond
# 深圳标准券
TORA_TSTP_PID_SZStandard = cvar.TORA_TSTP_PID_SZStandard
# 深圳质押式回购
TORA_TSTP_PID_SZRepurchase = cvar.TORA_TSTP_PID_SZRepurchase
# 深港通港股主板
TORA_TSTP_PID_SZSEHKMain = cvar.TORA_TSTP_PID_SZSEHKMain
# 深港通港股创业板
TORA_TSTP_PID_SZSEHKGEM = cvar.TORA_TSTP_PID_SZSEHKGEM
# 深港通港股扩充交易证券
TORA_TSTP_PID_SZSEHKETS = cvar.TORA_TSTP_PID_SZSEHKETS
# 深港通港股NasdaqAMX市场
TORA_TSTP_PID_SZSEHKNasdaqAMX = cvar.TORA_TSTP_PID_SZSEHKNasdaqAMX
# 上海科创板
TORA_TSTP_PID_SHKC = cvar.TORA_TSTP_PID_SHKC
# 北京股票
TORA_TSTP_PID_BJStock = cvar.TORA_TSTP_PID_BJStock
# 通用(内部使用)
TORA_TSTP_STP_COMMON = cvar.TORA_TSTP_STP_COMMON
# 上海A股
TORA_TSTP_STP_SHAShares = cvar.TORA_TSTP_STP_SHAShares
# 上海单市场股票ETF
TORA_TSTP_STP_SHSingleMarketStockETF = cvar.TORA_TSTP_STP_SHSingleMarketStockETF
# 上海单市场实物债券ETF
TORA_TSTP_STP_SHSingleMarketBondETF = cvar.TORA_TSTP_STP_SHSingleMarketBondETF
# 上海黄金ETF
TORA_TSTP_STP_SHGoldETF = cvar.TORA_TSTP_STP_SHGoldETF
# 上海货币ETF
TORA_TSTP_STP_SHTradableMonetaryFund = cvar.TORA_TSTP_STP_SHTradableMonetaryFund
# 上海国债地方债
TORA_TSTP_STP_SHBondNation = cvar.TORA_TSTP_STP_SHBondNation
# 上海企业债
TORA_TSTP_STP_SHBondCorporation = cvar.TORA_TSTP_STP_SHBondCorporation
# 上海公司债
TORA_TSTP_STP_SHBondCompany = cvar.TORA_TSTP_STP_SHBondCompany
# 上海可转债
TORA_TSTP_STP_SHBondConversion = cvar.TORA_TSTP_STP_SHBondConversion
# 上海分离债
TORA_TSTP_STP_SHBondSeparation = cvar.TORA_TSTP_STP_SHBondSeparation
# 上海标准券
TORA_TSTP_STP_SHStandard = cvar.TORA_TSTP_STP_SHStandard
# 上海质押式回购
TORA_TSTP_STP_SHRepo = cvar.TORA_TSTP_STP_SHRepo
# 上海封闭式基金
TORA_TSTP_STP_SHCEFund = cvar.TORA_TSTP_STP_SHCEFund
# 上海开放式基金
TORA_TSTP_STP_SHOEFund = cvar.TORA_TSTP_STP_SHOEFund
# 上海跨市场ETF
TORA_TSTP_STP_SHCrossMarketStockETF = cvar.TORA_TSTP_STP_SHCrossMarketStockETF
# 上海跨境ETF
TORA_TSTP_STP_SHCrossBorderETF = cvar.TORA_TSTP_STP_SHCrossBorderETF
# 上海分级母基金
TORA_TSTP_STP_SHMontherStructFund = cvar.TORA_TSTP_STP_SHMontherStructFund
# 上海分级子基金
TORA_TSTP_STP_SHSubStructFund = cvar.TORA_TSTP_STP_SHSubStructFund
# 上海实时申赎货币基金
TORA_TSTP_STP_SHRealTimeMonetaryFund = cvar.TORA_TSTP_STP_SHRealTimeMonetaryFund
# 上海可交换债
TORA_TSTP_STP_SHExchangeableBond = cvar.TORA_TSTP_STP_SHExchangeableBond
# 上海标准LOF基金
TORA_TSTP_STP_SHLOF = cvar.TORA_TSTP_STP_SHLOF
# 深圳主板A股
TORA_TSTP_STP_SZMainAShares = cvar.TORA_TSTP_STP_SZMainAShares
# 深圳中小企业板
TORA_TSTP_STP_SZSME = cvar.TORA_TSTP_STP_SZSME
# 深圳国债、地方债
TORA_TSTP_STP_SZBondNation = cvar.TORA_TSTP_STP_SZBondNation
# 深圳企业债
TORA_TSTP_STP_SZBondCorporation = cvar.TORA_TSTP_STP_SZBondCorporation
# 深圳公司债
TORA_TSTP_STP_SZBondCompany = cvar.TORA_TSTP_STP_SZBondCompany
# 深圳可转债
TORA_TSTP_STP_SZBondConversion = cvar.TORA_TSTP_STP_SZBondConversion
# 深圳分离债
TORA_TSTP_STP_SZBondSeparation = cvar.TORA_TSTP_STP_SZBondSeparation
# 深圳创业板(注册制)
TORA_TSTP_STP_SZGEMReg = cvar.TORA_TSTP_STP_SZGEMReg
# 深圳创业板可转债(注册制)
TORA_TSTP_STP_SZGEMBondConversionReg = cvar.TORA_TSTP_STP_SZGEMBondConversionReg
# 深圳跨境ETF
TORA_TSTP_STP_SZCrossBorderETF = cvar.TORA_TSTP_STP_SZCrossBorderETF
# 深圳黄金ETF
TORA_TSTP_STP_SZGoldETF = cvar.TORA_TSTP_STP_SZGoldETF
# 深圳现金债券ETF
TORA_TSTP_STP_SZCashBondETF = cvar.TORA_TSTP_STP_SZCashBondETF
# 深圳单市场股票ETF
TORA_TSTP_STP_SZSingleMarketStockETF = cvar.TORA_TSTP_STP_SZSingleMarketStockETF
# 深圳单市场实物债券ETF
TORA_TSTP_STP_SZSingleMarketBondETF = cvar.TORA_TSTP_STP_SZSingleMarketBondETF
# 深圳货币ETF
TORA_TSTP_STP_SZMonetaryFundETF = cvar.TORA_TSTP_STP_SZMonetaryFundETF
# 深圳创业板
TORA_TSTP_STP_SZGEM = cvar.TORA_TSTP_STP_SZGEM
# 深圳创业板可交换债
TORA_TSTP_STP_SZGEMExchangeableBond = cvar.TORA_TSTP_STP_SZGEMExchangeableBond
# 深圳创业板可交换债(注册制)
TORA_TSTP_STP_SZGEMExchangeableBondReg = cvar.TORA_TSTP_STP_SZGEMExchangeableBondReg
# 深圳标准券
TORA_TSTP_STP_SZStandard = cvar.TORA_TSTP_STP_SZStandard
# 深圳质押式回购
TORA_TSTP_STP_SZRepo = cvar.TORA_TSTP_STP_SZRepo
# 深圳封闭式基金
TORA_TSTP_STP_SZCEFund = cvar.TORA_TSTP_STP_SZCEFund
# 深圳开放式基金
TORA_TSTP_STP_SZOEFund = cvar.TORA_TSTP_STP_SZOEFund
# 深圳跨境开放式基金
TORA_TSTP_STP_SZCrossBorderOEFund = cvar.TORA_TSTP_STP_SZCrossBorderOEFund
# 深圳跨市场股票ETF
TORA_TSTP_STP_SZCrossMarketStockETF = cvar.TORA_TSTP_STP_SZCrossMarketStockETF
# 深圳标准LOF基金
TORA_TSTP_STP_SZLOF = cvar.TORA_TSTP_STP_SZLOF
# 深圳跨境LOF基金
TORA_TSTP_STP_SZCrossBorderLOF = cvar.TORA_TSTP_STP_SZCrossBorderLOF
# 深圳传统分级母基金
TORA_TSTP_STP_SZMontherStructFund = cvar.TORA_TSTP_STP_SZMontherStructFund
# 深圳传统分级子基金
TORA_TSTP_STP_SZSubStructFund = cvar.TORA_TSTP_STP_SZSubStructFund
# 深圳跨境分级母基金
TORA_TSTP_STP_SZMontherCrossBorderStructFund = cvar.TORA_TSTP_STP_SZMontherCrossBorderStructFund
# 深圳跨境分级子基金
TORA_TSTP_STP_SZSubCrossBorderStructFund = cvar.TORA_TSTP_STP_SZSubCrossBorderStructFund
# 深圳可交换债
TORA_TSTP_STP_SZExchangeableBond = cvar.TORA_TSTP_STP_SZExchangeableBond
# 深圳创业板可转债
TORA_TSTP_STP_SZGEMBondConversion = cvar.TORA_TSTP_STP_SZGEMBondConversion
# 深港通港股债券
TORA_TSTP_STP_SZSEHKBond = cvar.TORA_TSTP_STP_SZSEHKBond
# 深港通港股一篮子权证
TORA_TSTP_STP_SZSEHKBasketWarrant = cvar.TORA_TSTP_STP_SZSEHKBasketWarrant
# 深港通港股股本
TORA_TSTP_STP_SZSEHKEquity = cvar.TORA_TSTP_STP_SZSEHKEquity
# 深港通港股信托
TORA_TSTP_STP_SZSEHKTrust = cvar.TORA_TSTP_STP_SZSEHKTrust
# 深港通港股权证
TORA_TSTP_STP_SZSEHKWarrant = cvar.TORA_TSTP_STP_SZSEHKWarrant
# 上海存托凭证
TORA_TSTP_STP_SHCDR = cvar.TORA_TSTP_STP_SHCDR
# 上海科创板股票
TORA_TSTP_STP_SHKC = cvar.TORA_TSTP_STP_SHKC
# 科创板产品（上市后前5个交易日）
TORA_TSTP_STP_SHKC1 = cvar.TORA_TSTP_STP_SHKC1
# 上海科创板存托凭证
TORA_TSTP_STP_SHKCCDR = cvar.TORA_TSTP_STP_SHKCCDR
# 深圳主板、中小板创新企业股票或存托凭证
TORA_TSTP_STP_SZCDR = cvar.TORA_TSTP_STP_SZCDR
# 深圳创业板创新企业股票或存托凭证
TORA_TSTP_STP_SZGEMCDR = cvar.TORA_TSTP_STP_SZGEMCDR
# 深圳创业板创新企业股票或存托凭证(注册制)
TORA_TSTP_STP_SZGEMCDRReg = cvar.TORA_TSTP_STP_SZGEMCDRReg
# 深圳商品期货ETF
TORA_TSTP_STP_SZCommFuturesETF = cvar.TORA_TSTP_STP_SZCommFuturesETF
# 深圳基础设施基金
TORA_TSTP_STP_SZInfrastructureFund = cvar.TORA_TSTP_STP_SZInfrastructureFund
# 上海科创板ETF
TORA_TSTP_STP_SHKCETF = cvar.TORA_TSTP_STP_SHKCETF
# 上海科创板LOF
TORA_TSTP_STP_SHKCLOF = cvar.TORA_TSTP_STP_SHKCLOF
# 上海科创板可转债
TORA_TSTP_STP_SHKCBondConversion = cvar.TORA_TSTP_STP_SHKCBondConversion
# 上海定向可转债
TORA_TSTP_STP_SHOrientedConversionBond = cvar.TORA_TSTP_STP_SHOrientedConversionBond
# 深圳定向可转债
TORA_TSTP_STP_SZOrientedConversionBond = cvar.TORA_TSTP_STP_SZOrientedConversionBond
# 上海基础设施基金
TORA_TSTP_STP_SHInfrastructureFund = cvar.TORA_TSTP_STP_SHInfrastructureFund
# 北京股票
TORA_TSTP_STP_BJStock = cvar.TORA_TSTP_STP_BJStock
# 手
TORA_TSTP_OUT_Shou = cvar.TORA_TSTP_OUT_Shou
# 股
TORA_TSTP_OUT_Gu = cvar.TORA_TSTP_OUT_Gu
# 份
TORA_TSTP_OUT_Fen = cvar.TORA_TSTP_OUT_Fen
# 张
TORA_TSTP_OUT_Zhang = cvar.TORA_TSTP_OUT_Zhang
# 市值配售方式
TORA_TSTP_IMO_ValueLimit = cvar.TORA_TSTP_IMO_ValueLimit
# 增发定价方式
TORA_TSTP_IMO_AddIssue = cvar.TORA_TSTP_IMO_AddIssue
# 信用申购方式
TORA_TSTP_IMO_Credit = cvar.TORA_TSTP_IMO_Credit
# 定价发行(北交所)
TORA_TSTP_IMO_Fixed = cvar.TORA_TSTP_IMO_Fixed
# 竞价发行(北交所)
TORA_TSTP_IMO_Auction = cvar.TORA_TSTP_IMO_Auction
# 启用
TORA_TSTP_USTS_Enabled = cvar.TORA_TSTP_USTS_Enabled
# 禁用
TORA_TSTP_USTS_Disabled = cvar.TORA_TSTP_USTS_Disabled
# 锁定
TORA_TSTP_USTS_Locked = cvar.TORA_TSTP_USTS_Locked
# 个人
TORA_TSTP_CT_Person = cvar.TORA_TSTP_CT_Person
# 机构
TORA_TSTP_CT_Company = cvar.TORA_TSTP_CT_Company
# 自营
TORA_TSTP_CT_SelfOperate = cvar.TORA_TSTP_CT_SelfOperate
# 测试
TORA_TSTP_CT_Test = cvar.TORA_TSTP_CT_Test
# 组织机构代码
TORA_TSTP_ICT_EID = cvar.TORA_TSTP_ICT_EID
# 中国公民身份证
TORA_TSTP_ICT_IDCard = cvar.TORA_TSTP_ICT_IDCard
# 军官证
TORA_TSTP_ICT_OfficerIDCard = cvar.TORA_TSTP_ICT_OfficerIDCard
# 警官证
TORA_TSTP_ICT_PoliceIDCard = cvar.TORA_TSTP_ICT_PoliceIDCard
# 士兵证
TORA_TSTP_ICT_SoldierIDCard = cvar.TORA_TSTP_ICT_SoldierIDCard
# 户口簿
TORA_TSTP_ICT_HouseholdRegister = cvar.TORA_TSTP_ICT_HouseholdRegister
# 护照
TORA_TSTP_ICT_Passport = cvar.TORA_TSTP_ICT_Passport
# 台胞证
TORA_TSTP_ICT_TaiwanCompatriotIDCard = cvar.TORA_TSTP_ICT_TaiwanCompatriotIDCard
# 回乡证
TORA_TSTP_ICT_HomeComingCard = cvar.TORA_TSTP_ICT_HomeComingCard
# 营业执照号
TORA_TSTP_ICT_LicenseNo = cvar.TORA_TSTP_ICT_LicenseNo
# 税务登记号/当地纳税ID
TORA_TSTP_ICT_TaxNo = cvar.TORA_TSTP_ICT_TaxNo
# 港澳居民来往内地通行证
TORA_TSTP_ICT_HMMainlandTravelPermit = cvar.TORA_TSTP_ICT_HMMainlandTravelPermit
# 台湾居民来往大陆通行证
TORA_TSTP_ICT_TwMainlandTravelPermit = cvar.TORA_TSTP_ICT_TwMainlandTravelPermit
# 驾照
TORA_TSTP_ICT_DrivingLicense = cvar.TORA_TSTP_ICT_DrivingLicense
# 当地社保ID
TORA_TSTP_ICT_SocialID = cvar.TORA_TSTP_ICT_SocialID
# 当地身份证
TORA_TSTP_ICT_LocalID = cvar.TORA_TSTP_ICT_LocalID
# 商业登记证
TORA_TSTP_ICT_BusinessRegistration = cvar.TORA_TSTP_ICT_BusinessRegistration
# 港澳永久性居民身份证
TORA_TSTP_ICT_HKMCIDCard = cvar.TORA_TSTP_ICT_HKMCIDCard
# 人行开户许可证
TORA_TSTP_ICT_AccountsPermits = cvar.TORA_TSTP_ICT_AccountsPermits
# 其他证件
TORA_TSTP_ICT_OtherCard = cvar.TORA_TSTP_ICT_OtherCard
# 正常
TORA_TSTP_TS_Normal = cvar.TORA_TSTP_TS_Normal
# 正在强平
TORA_TSTP_TS_ForceClosing = cvar.TORA_TSTP_TS_ForceClosing
# 异常
TORA_TSTP_TS_Exception = cvar.TORA_TSTP_TS_Exception
# 非专业投资者
TORA_TSTP_PIT_Normal = cvar.TORA_TSTP_PIT_Normal
# 专业投资者
TORA_TSTP_PIT_Professional = cvar.TORA_TSTP_PIT_Professional
# 标准套餐
TORA_TSTP_PLTP_Standard = cvar.TORA_TSTP_PLTP_Standard
# 智能套餐
TORA_TSTP_PLTP_Smart = cvar.TORA_TSTP_PLTP_Smart
# 预留1
TORA_TSTP_PLTP_Reserve1 = cvar.TORA_TSTP_PLTP_Reserve1
# 预留2
TORA_TSTP_PLTP_Reserve2 = cvar.TORA_TSTP_PLTP_Reserve2
# 未定义类型（内部使用）
TORA_TSTP_PLTP_Undefined = cvar.TORA_TSTP_PLTP_Undefined
# 投机
TORA_TSTP_SIDT_Speculation = cvar.TORA_TSTP_SIDT_Speculation
# 套利
TORA_TSTP_SIDT_Arbitrage = cvar.TORA_TSTP_SIDT_Arbitrage
# 套保
TORA_TSTP_SIDT_Hedge = cvar.TORA_TSTP_SIDT_Hedge
# 普通
TORA_TSTP_SIDT_Normal = cvar.TORA_TSTP_SIDT_Normal
# 信用
TORA_TSTP_SIDT_Credit = cvar.TORA_TSTP_SIDT_Credit
# 衍生品
TORA_TSTP_SIDT_Derivatives = cvar.TORA_TSTP_SIDT_Derivatives
# 预埋
TORA_TSTP_CORDS_Cached = cvar.TORA_TSTP_CORDS_Cached
# 已提交
TORA_TSTP_CORDS_Submitted = cvar.TORA_TSTP_CORDS_Submitted
# 成功
TORA_TSTP_CORDS_Success = cvar.TORA_TSTP_CORDS_Success
# 拒绝
TORA_TSTP_CORDS_Rejected = cvar.TORA_TSTP_CORDS_Rejected
# 普通撤单
TORA_TSTP_CORDT_Normal = cvar.TORA_TSTP_CORDT_Normal
# 强制撤单
TORA_TSTP_CORDT_Force = cvar.TORA_TSTP_CORDT_Force
# 预埋撤单
TORA_TSTP_CORDT_Cache = cvar.TORA_TSTP_CORDT_Cache
# 通道撤单
TORA_TSTP_CORDT_Board = cvar.TORA_TSTP_CORDT_Board
# 普通
TORA_TSTP_FAT_Normal = cvar.TORA_TSTP_FAT_Normal
# 信用
TORA_TSTP_FAT_Credit = cvar.TORA_TSTP_FAT_Credit
# 衍生品
TORA_TSTP_FAT_Derivatives = cvar.TORA_TSTP_FAT_Derivatives
# 买入
TORA_TSTP_BC_Buy = cvar.TORA_TSTP_BC_Buy
# 卖出
TORA_TSTP_BC_Sell = cvar.TORA_TSTP_BC_Sell
# ETF申购
TORA_TSTP_BC_ETFPur = cvar.TORA_TSTP_BC_ETFPur
# ETF赎回
TORA_TSTP_BC_ETFRed = cvar.TORA_TSTP_BC_ETFRed
# 新股申购
TORA_TSTP_BC_SubscribingShares = cvar.TORA_TSTP_BC_SubscribingShares
# 正回购
TORA_TSTP_BC_Repurchase = cvar.TORA_TSTP_BC_Repurchase
# 逆回购
TORA_TSTP_BC_ReverseRepur = cvar.TORA_TSTP_BC_ReverseRepur
# 开放式基金申购
TORA_TSTP_BC_OeFundPur = cvar.TORA_TSTP_BC_OeFundPur
# 开放式基金赎回
TORA_TSTP_BC_OeFundRed = cvar.TORA_TSTP_BC_OeFundRed
# 担保品划入
TORA_TSTP_BC_CollateralIn = cvar.TORA_TSTP_BC_CollateralIn
# 担保品划出
TORA_TSTP_BC_CollateralOut = cvar.TORA_TSTP_BC_CollateralOut
# 质押入库
TORA_TSTP_BC_PledgeIn = cvar.TORA_TSTP_BC_PledgeIn
# 质押出库
TORA_TSTP_BC_PledgeOut = cvar.TORA_TSTP_BC_PledgeOut
# 配股配债
TORA_TSTP_BC_Rationed = cvar.TORA_TSTP_BC_Rationed
# 开放式基金拆分
TORA_TSTP_BC_Split = cvar.TORA_TSTP_BC_Split
# 开放式基金合并
TORA_TSTP_BC_Merge = cvar.TORA_TSTP_BC_Merge
# 融资买入
TORA_TSTP_BC_CreditBuy = cvar.TORA_TSTP_BC_CreditBuy
# 融券卖出
TORA_TSTP_BC_CreditSell = cvar.TORA_TSTP_BC_CreditSell
# 卖券还款
TORA_TSTP_BC_SellRepay = cvar.TORA_TSTP_BC_SellRepay
# 买券还券
TORA_TSTP_BC_BuyRepay = cvar.TORA_TSTP_BC_BuyRepay
# 还券划转
TORA_TSTP_BC_RepayTransfer = cvar.TORA_TSTP_BC_RepayTransfer
# 余券划转
TORA_TSTP_BC_SurplusTransfer = cvar.TORA_TSTP_BC_SurplusTransfer
# 源券划转
TORA_TSTP_BC_SourceTransfer = cvar.TORA_TSTP_BC_SourceTransfer
# 卖券强平还款(内部使用)
TORA_TSTP_BC_ForceSellRepay = cvar.TORA_TSTP_BC_ForceSellRepay
# 买券强平还券(内部使用)
TORA_TSTP_BC_ForceBuyRepay = cvar.TORA_TSTP_BC_ForceBuyRepay
# 负债展期(内部使用)
TORA_TSTP_BC_DebtExtend = cvar.TORA_TSTP_BC_DebtExtend
# 转托管
TORA_TSTP_BC_CustodyTransfer = cvar.TORA_TSTP_BC_CustodyTransfer
# 债券转股
TORA_TSTP_BC_BondConvertStock = cvar.TORA_TSTP_BC_BondConvertStock
# 债券回售
TORA_TSTP_BC_BondPutback = cvar.TORA_TSTP_BC_BondPutback
# ETF实物申购
TORA_TSTP_BC_ETFOtPur = cvar.TORA_TSTP_BC_ETFOtPur
# ETF实物赎回
TORA_TSTP_BC_ETFOtRed = cvar.TORA_TSTP_BC_ETFOtRed
# 回售撤销
TORA_TSTP_BC_PutbackRelieve = cvar.TORA_TSTP_BC_PutbackRelieve
# 毛佣金
TORA_TSTP_BT_Gross = cvar.TORA_TSTP_BT_Gross
# 净佣金
TORA_TSTP_BT_Net = cvar.TORA_TSTP_BT_Net
# 实时上场
TORA_TSTP_OPRTSRC_DBCommand = cvar.TORA_TSTP_OPRTSRC_DBCommand
# API调用
TORA_TSTP_OPRTSRC_SyncAPI = cvar.TORA_TSTP_OPRTSRC_SyncAPI
# 自动触发
TORA_TSTP_OPRTSRC_AutoTrigger = cvar.TORA_TSTP_OPRTSRC_AutoTrigger
# API紧急上场
TORA_TSTP_OPRTSRC_EmergencyAPI = cvar.TORA_TSTP_OPRTSRC_EmergencyAPI
# 创业板
TORA_TSTP_SPLT_GEM = cvar.TORA_TSTP_SPLT_GEM
# 风险警示板
TORA_TSTP_SPLT_RiskWarning = cvar.TORA_TSTP_SPLT_RiskWarning
# 退市整理板
TORA_TSTP_SPLT_Delisting = cvar.TORA_TSTP_SPLT_Delisting
# 港股通
TORA_TSTP_SPLT_SZSEHK = cvar.TORA_TSTP_SPLT_SZSEHK
# 科创板
TORA_TSTP_SPLT_SHKC = cvar.TORA_TSTP_SPLT_SHKC
# 创业板注册制
TORA_TSTP_SPLT_GEMRegistration = cvar.TORA_TSTP_SPLT_GEMRegistration
# 分级基金
TORA_TSTP_SPLT_StructFund = cvar.TORA_TSTP_SPLT_StructFund
# 可转债
TORA_TSTP_SPLT_ConvertBond = cvar.TORA_TSTP_SPLT_ConvertBond
# 基础设施基金
TORA_TSTP_SPLT_InfrastructureFund = cvar.TORA_TSTP_SPLT_InfrastructureFund
# 定向可转债
TORA_TSTP_SPLT_OrientedConvertBond = cvar.TORA_TSTP_SPLT_OrientedConvertBond
# 北交所股票
TORA_TSTP_SPLT_BJStock = cvar.TORA_TSTP_SPLT_BJStock
# 普通申赎
TORA_TSTP_CRT_IS = cvar.TORA_TSTP_CRT_IS
# 实物申赎
TORA_TSTP_CRT_OS = cvar.TORA_TSTP_CRT_OS
# 禁止现金替代
TORA_TSTP_ETFCTSTAT_Forbidden = cvar.TORA_TSTP_ETFCTSTAT_Forbidden
# 可以现金替代
TORA_TSTP_ETFCTSTAT_Allow = cvar.TORA_TSTP_ETFCTSTAT_Allow
# 必须现金替代
TORA_TSTP_ETFCTSTAT_Force = cvar.TORA_TSTP_ETFCTSTAT_Force
# 跨市退补现金替代
TORA_TSTP_ETFCTSTAT_CBAllow = cvar.TORA_TSTP_ETFCTSTAT_CBAllow
# 跨市必须现金替代
TORA_TSTP_ETFCTSTAT_CBForce = cvar.TORA_TSTP_ETFCTSTAT_CBForce
# 股本证券
TORA_TSTP_PTID_Stock = cvar.TORA_TSTP_PTID_Stock
# 债务证券
TORA_TSTP_PTID_Bond = cvar.TORA_TSTP_PTID_Bond
# 股票期权
TORA_TSTP_PTID_Option = cvar.TORA_TSTP_PTID_Option
# 买卖基金
TORA_TSTP_PTID_Fund = cvar.TORA_TSTP_PTID_Fund
# 价格上下限
TORA_TSTP_PPT_LimitPrice = cvar.TORA_TSTP_PPT_LimitPrice
# 价差组
TORA_TSTP_PPT_PriceTick = cvar.TORA_TSTP_PPT_PriceTick
# 标准LOF
TORA_TSTP_FUT_Normal = cvar.TORA_TSTP_FUT_Normal
# 分级母基金
TORA_TSTP_FUT_Mother = cvar.TORA_TSTP_FUT_Mother
# 分级子基金
TORA_TSTP_FUT_Sub = cvar.TORA_TSTP_FUT_Sub
# TCP模式
TORA_TSTP_TCM_TCP = cvar.TORA_TSTP_TCM_TCP
# UDP模式
TORA_TSTP_TCM_UDP = cvar.TORA_TSTP_TCM_UDP
# PROXY模式
TORA_TSTP_TCM_PROXY = cvar.TORA_TSTP_TCM_PROXY




#########################################登录响应############################################
class CTORATstpRspUserLoginField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspUserLoginField_UserRequestID_get, _traderapi.CTORATstpRspUserLoginField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpRspUserLoginField_DepartmentID_get, _traderapi.CTORATstpRspUserLoginField_DepartmentID_set)

	# 登录账户
    LogInAccount = property(_traderapi.CTORATstpRspUserLoginField_LogInAccount_get, _traderapi.CTORATstpRspUserLoginField_LogInAccount_set)

	# 登录账户类型
    LogInAccountType = property(_traderapi.CTORATstpRspUserLoginField_LogInAccountType_get, _traderapi.CTORATstpRspUserLoginField_LogInAccountType_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpRspUserLoginField_FrontID_get, _traderapi.CTORATstpRspUserLoginField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpRspUserLoginField_SessionID_get, _traderapi.CTORATstpRspUserLoginField_SessionID_set)

	# 最大报单引用
    MaxOrderRef = property(_traderapi.CTORATstpRspUserLoginField_MaxOrderRef_get, _traderapi.CTORATstpRspUserLoginField_MaxOrderRef_set)

	# 私有流长度
    PrivateFlowCount = property(_traderapi.CTORATstpRspUserLoginField_PrivateFlowCount_get, _traderapi.CTORATstpRspUserLoginField_PrivateFlowCount_set)

	# 公有流长度
    PublicFlowCount = property(_traderapi.CTORATstpRspUserLoginField_PublicFlowCount_get, _traderapi.CTORATstpRspUserLoginField_PublicFlowCount_set)

	# 登录时间
    LoginTime = property(_traderapi.CTORATstpRspUserLoginField_LoginTime_get, _traderapi.CTORATstpRspUserLoginField_LoginTime_set)

	# 交易系统名称
    SystemName = property(_traderapi.CTORATstpRspUserLoginField_SystemName_get, _traderapi.CTORATstpRspUserLoginField_SystemName_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpRspUserLoginField_TradingDay_get, _traderapi.CTORATstpRspUserLoginField_TradingDay_set)

	# 用户代码
    UserID = property(_traderapi.CTORATstpRspUserLoginField_UserID_get, _traderapi.CTORATstpRspUserLoginField_UserID_set)

	# 用户名称
    UserName = property(_traderapi.CTORATstpRspUserLoginField_UserName_get, _traderapi.CTORATstpRspUserLoginField_UserName_set)

	# 用户类型
    UserType = property(_traderapi.CTORATstpRspUserLoginField_UserType_get, _traderapi.CTORATstpRspUserLoginField_UserType_set)

	# 报单流控
    OrderInsertCommFlux = property(_traderapi.CTORATstpRspUserLoginField_OrderInsertCommFlux_get, _traderapi.CTORATstpRspUserLoginField_OrderInsertCommFlux_set)

	# 撤单流控
    OrderActionCommFlux = property(_traderapi.CTORATstpRspUserLoginField_OrderActionCommFlux_get, _traderapi.CTORATstpRspUserLoginField_OrderActionCommFlux_set)

	# 密码到期日期
    PasswordExpiryDate = property(_traderapi.CTORATstpRspUserLoginField_PasswordExpiryDate_get, _traderapi.CTORATstpRspUserLoginField_PasswordExpiryDate_set)

	# 是否需要改密
    NeedUpdatePassword = property(_traderapi.CTORATstpRspUserLoginField_NeedUpdatePassword_get, _traderapi.CTORATstpRspUserLoginField_NeedUpdatePassword_set)

	# 认证序列号
    CertSerial = property(_traderapi.CTORATstpRspUserLoginField_CertSerial_get, _traderapi.CTORATstpRspUserLoginField_CertSerial_set)

	# 内网IP地址
    InnerIPAddress = property(_traderapi.CTORATstpRspUserLoginField_InnerIPAddress_get, _traderapi.CTORATstpRspUserLoginField_InnerIPAddress_set)

	# 外网IP地址
    OuterIPAddress = property(_traderapi.CTORATstpRspUserLoginField_OuterIPAddress_get, _traderapi.CTORATstpRspUserLoginField_OuterIPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpRspUserLoginField_MacAddress_get, _traderapi.CTORATstpRspUserLoginField_MacAddress_set)

	# 关联节点编号(内部使用)
    NodeRef = property(_traderapi.CTORATstpRspUserLoginField_NodeRef_get, _traderapi.CTORATstpRspUserLoginField_NodeRef_set)

    def __init__(self):
        _traderapi.CTORATstpRspUserLoginField_swiginit(self, _traderapi.new_CTORATstpRspUserLoginField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspUserLoginField

# Register CTORATstpRspUserLoginField in _traderapi:
_traderapi.CTORATstpRspUserLoginField_swigregister(CTORATstpRspUserLoginField)




#########################################响应信息############################################
class CTORATstpRspInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 错误代码
    ErrorID = property(_traderapi.CTORATstpRspInfoField_ErrorID_get, _traderapi.CTORATstpRspInfoField_ErrorID_set)

	# 错误信息
    ErrorMsg = property(_traderapi.CTORATstpRspInfoField_ErrorMsg_get, _traderapi.CTORATstpRspInfoField_ErrorMsg_set)

    def __init__(self):
        _traderapi.CTORATstpRspInfoField_swiginit(self, _traderapi.new_CTORATstpRspInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInfoField

# Register CTORATstpRspInfoField in _traderapi:
_traderapi.CTORATstpRspInfoField_swigregister(CTORATstpRspInfoField)




#########################################用户登出############################################
class CTORATstpUserLogoutField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpUserLogoutField_UserRequestID_get, _traderapi.CTORATstpUserLogoutField_UserRequestID_set)

	# 用户代码
    UserID = property(_traderapi.CTORATstpUserLogoutField_UserID_get, _traderapi.CTORATstpUserLogoutField_UserID_set)

    def __init__(self):
        _traderapi.CTORATstpUserLogoutField_swiginit(self, _traderapi.new_CTORATstpUserLogoutField())
    __swig_destroy__ = _traderapi.delete_CTORATstpUserLogoutField

# Register CTORATstpUserLogoutField in _traderapi:
_traderapi.CTORATstpUserLogoutField_swigregister(CTORATstpUserLogoutField)




#########################################修改用户密码############################################
class CTORATstpUserPasswordUpdateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户代码
    UserID = property(_traderapi.CTORATstpUserPasswordUpdateField_UserID_get, _traderapi.CTORATstpUserPasswordUpdateField_UserID_set)

	# 旧密码
    OldPassword = property(_traderapi.CTORATstpUserPasswordUpdateField_OldPassword_get, _traderapi.CTORATstpUserPasswordUpdateField_OldPassword_set)

	# 新密码
    NewPassword = property(_traderapi.CTORATstpUserPasswordUpdateField_NewPassword_get, _traderapi.CTORATstpUserPasswordUpdateField_NewPassword_set)

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpUserPasswordUpdateField_UserRequestID_get, _traderapi.CTORATstpUserPasswordUpdateField_UserRequestID_set)

    def __init__(self):
        _traderapi.CTORATstpUserPasswordUpdateField_swiginit(self, _traderapi.new_CTORATstpUserPasswordUpdateField())
    __swig_destroy__ = _traderapi.delete_CTORATstpUserPasswordUpdateField

# Register CTORATstpUserPasswordUpdateField in _traderapi:
_traderapi.CTORATstpUserPasswordUpdateField_swigregister(CTORATstpUserPasswordUpdateField)




#########################################请求录入设备序列############################################
class CTORATstpReqInputDeviceSerialField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqInputDeviceSerialField_UserRequestID_get, _traderapi.CTORATstpReqInputDeviceSerialField_UserRequestID_set)

	# 用户代码
    UserID = property(_traderapi.CTORATstpReqInputDeviceSerialField_UserID_get, _traderapi.CTORATstpReqInputDeviceSerialField_UserID_set)

	# 设备标识
    DeviceID = property(_traderapi.CTORATstpReqInputDeviceSerialField_DeviceID_get, _traderapi.CTORATstpReqInputDeviceSerialField_DeviceID_set)

	# 设备序列号
    CertSerial = property(_traderapi.CTORATstpReqInputDeviceSerialField_CertSerial_get, _traderapi.CTORATstpReqInputDeviceSerialField_CertSerial_set)

	# 设备类别
    DeviceType = property(_traderapi.CTORATstpReqInputDeviceSerialField_DeviceType_get, _traderapi.CTORATstpReqInputDeviceSerialField_DeviceType_set)

    def __init__(self):
        _traderapi.CTORATstpReqInputDeviceSerialField_swiginit(self, _traderapi.new_CTORATstpReqInputDeviceSerialField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqInputDeviceSerialField

# Register CTORATstpReqInputDeviceSerialField in _traderapi:
_traderapi.CTORATstpReqInputDeviceSerialField_swigregister(CTORATstpReqInputDeviceSerialField)




#########################################录入设备序列响应############################################
class CTORATstpRspInputDeviceSerialField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspInputDeviceSerialField_UserRequestID_get, _traderapi.CTORATstpRspInputDeviceSerialField_UserRequestID_set)

	# 用户代码
    UserID = property(_traderapi.CTORATstpRspInputDeviceSerialField_UserID_get, _traderapi.CTORATstpRspInputDeviceSerialField_UserID_set)

    def __init__(self):
        _traderapi.CTORATstpRspInputDeviceSerialField_swiginit(self, _traderapi.new_CTORATstpRspInputDeviceSerialField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInputDeviceSerialField

# Register CTORATstpRspInputDeviceSerialField in _traderapi:
_traderapi.CTORATstpRspInputDeviceSerialField_swigregister(CTORATstpRspInputDeviceSerialField)




#########################################输入报单############################################
class CTORATstpInputOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputOrderField_UserRequestID_get, _traderapi.CTORATstpInputOrderField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputOrderField_ExchangeID_get, _traderapi.CTORATstpInputOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputOrderField_InvestorID_get, _traderapi.CTORATstpInputOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInputOrderField_BusinessUnitID_get, _traderapi.CTORATstpInputOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInputOrderField_ShareholderID_get, _traderapi.CTORATstpInputOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputOrderField_SecurityID_get, _traderapi.CTORATstpInputOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpInputOrderField_Direction_get, _traderapi.CTORATstpInputOrderField_Direction_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpInputOrderField_LimitPrice_get, _traderapi.CTORATstpInputOrderField_LimitPrice_set)

	# 数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpInputOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpInputOrderField_VolumeTotalOriginal_set)

	# 报单价格条件
    OrderPriceType = property(_traderapi.CTORATstpInputOrderField_OrderPriceType_get, _traderapi.CTORATstpInputOrderField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpInputOrderField_TimeCondition_get, _traderapi.CTORATstpInputOrderField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpInputOrderField_VolumeCondition_get, _traderapi.CTORATstpInputOrderField_VolumeCondition_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputOrderField_Operway_get, _traderapi.CTORATstpInputOrderField_Operway_set)

	# 报单引用
    OrderRef = property(_traderapi.CTORATstpInputOrderField_OrderRef_get, _traderapi.CTORATstpInputOrderField_OrderRef_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpInputOrderField_LotType_get, _traderapi.CTORATstpInputOrderField_LotType_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpInputOrderField_OrderSysID_get, _traderapi.CTORATstpInputOrderField_OrderSysID_set)

	# 条件检查
    CondCheck = property(_traderapi.CTORATstpInputOrderField_CondCheck_get, _traderapi.CTORATstpInputOrderField_CondCheck_set)

	# 有效日期
    GTDate = property(_traderapi.CTORATstpInputOrderField_GTDate_get, _traderapi.CTORATstpInputOrderField_GTDate_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpInputOrderField_ForceCloseReason_get, _traderapi.CTORATstpInputOrderField_ForceCloseReason_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpInputOrderField_CreditDebtID_get, _traderapi.CTORATstpInputOrderField_CreditDebtID_set)

	# 头寸类型(两融专用)
    CreditQuotaType = property(_traderapi.CTORATstpInputOrderField_CreditQuotaType_get, _traderapi.CTORATstpInputOrderField_CreditQuotaType_set)

	# 费息折扣券编号（0表示不使用折扣券）(两融专用)
    DiscountCouponID = property(_traderapi.CTORATstpInputOrderField_DiscountCouponID_get, _traderapi.CTORATstpInputOrderField_DiscountCouponID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputOrderField_SInfo_get, _traderapi.CTORATstpInputOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputOrderField_IInfo_get, _traderapi.CTORATstpInputOrderField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpInputOrderField_swiginit(self, _traderapi.new_CTORATstpInputOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputOrderField

# Register CTORATstpInputOrderField in _traderapi:
_traderapi.CTORATstpInputOrderField_swigregister(CTORATstpInputOrderField)




#########################################报单############################################
class CTORATstpOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpOrderField_ExchangeID_get, _traderapi.CTORATstpOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpOrderField_InvestorID_get, _traderapi.CTORATstpOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpOrderField_BusinessUnitID_get, _traderapi.CTORATstpOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpOrderField_ShareholderID_get, _traderapi.CTORATstpOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpOrderField_SecurityID_get, _traderapi.CTORATstpOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpOrderField_Direction_get, _traderapi.CTORATstpOrderField_Direction_set)

	# 报单价格条件
    OrderPriceType = property(_traderapi.CTORATstpOrderField_OrderPriceType_get, _traderapi.CTORATstpOrderField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpOrderField_TimeCondition_get, _traderapi.CTORATstpOrderField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpOrderField_VolumeCondition_get, _traderapi.CTORATstpOrderField_VolumeCondition_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpOrderField_LimitPrice_get, _traderapi.CTORATstpOrderField_LimitPrice_set)

	# 数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpOrderField_VolumeTotalOriginal_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpOrderField_LotType_get, _traderapi.CTORATstpOrderField_LotType_set)

	# 有效日期
    GTDate = property(_traderapi.CTORATstpOrderField_GTDate_get, _traderapi.CTORATstpOrderField_GTDate_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpOrderField_Operway_get, _traderapi.CTORATstpOrderField_Operway_set)

	# 条件检查
    CondCheck = property(_traderapi.CTORATstpOrderField_CondCheck_get, _traderapi.CTORATstpOrderField_CondCheck_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpOrderField_SInfo_get, _traderapi.CTORATstpOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpOrderField_IInfo_get, _traderapi.CTORATstpOrderField_IInfo_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpOrderField_RequestID_get, _traderapi.CTORATstpOrderField_RequestID_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpOrderField_FrontID_get, _traderapi.CTORATstpOrderField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpOrderField_SessionID_get, _traderapi.CTORATstpOrderField_SessionID_set)

	# 报单引用
    OrderRef = property(_traderapi.CTORATstpOrderField_OrderRef_get, _traderapi.CTORATstpOrderField_OrderRef_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpOrderField_OrderLocalID_get, _traderapi.CTORATstpOrderField_OrderLocalID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpOrderField_OrderSysID_get, _traderapi.CTORATstpOrderField_OrderSysID_set)

	# 报单状态
    OrderStatus = property(_traderapi.CTORATstpOrderField_OrderStatus_get, _traderapi.CTORATstpOrderField_OrderStatus_set)

	# 报单提交状态
    OrderSubmitStatus = property(_traderapi.CTORATstpOrderField_OrderSubmitStatus_get, _traderapi.CTORATstpOrderField_OrderSubmitStatus_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpOrderField_StatusMsg_get, _traderapi.CTORATstpOrderField_StatusMsg_set)

	# 已成交数量
    VolumeTraded = property(_traderapi.CTORATstpOrderField_VolumeTraded_get, _traderapi.CTORATstpOrderField_VolumeTraded_set)

	# 已撤销数量
    VolumeCanceled = property(_traderapi.CTORATstpOrderField_VolumeCanceled_get, _traderapi.CTORATstpOrderField_VolumeCanceled_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpOrderField_TradingDay_get, _traderapi.CTORATstpOrderField_TradingDay_set)

	# 申报用户
    InsertUser = property(_traderapi.CTORATstpOrderField_InsertUser_get, _traderapi.CTORATstpOrderField_InsertUser_set)

	# 申报日期
    InsertDate = property(_traderapi.CTORATstpOrderField_InsertDate_get, _traderapi.CTORATstpOrderField_InsertDate_set)

	# 申报时间
    InsertTime = property(_traderapi.CTORATstpOrderField_InsertTime_get, _traderapi.CTORATstpOrderField_InsertTime_set)

	# 交易所接收时间
    AcceptTime = property(_traderapi.CTORATstpOrderField_AcceptTime_get, _traderapi.CTORATstpOrderField_AcceptTime_set)

	# 撤销用户
    CancelUser = property(_traderapi.CTORATstpOrderField_CancelUser_get, _traderapi.CTORATstpOrderField_CancelUser_set)

	# 撤销时间
    CancelTime = property(_traderapi.CTORATstpOrderField_CancelTime_get, _traderapi.CTORATstpOrderField_CancelTime_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpOrderField_DepartmentID_get, _traderapi.CTORATstpOrderField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpOrderField_AccountID_get, _traderapi.CTORATstpOrderField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpOrderField_CurrencyID_get, _traderapi.CTORATstpOrderField_CurrencyID_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpOrderField_PbuID_get, _traderapi.CTORATstpOrderField_PbuID_set)

	# 成交金额
    Turnover = property(_traderapi.CTORATstpOrderField_Turnover_get, _traderapi.CTORATstpOrderField_Turnover_set)

	# 报单类型
    OrderType = property(_traderapi.CTORATstpOrderField_OrderType_get, _traderapi.CTORATstpOrderField_OrderType_set)

	# 用户端产品信息
    UserProductInfo = property(_traderapi.CTORATstpOrderField_UserProductInfo_get, _traderapi.CTORATstpOrderField_UserProductInfo_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpOrderField_ForceCloseReason_get, _traderapi.CTORATstpOrderField_ForceCloseReason_set)

	# 信用头寸编号(两融专用)
    CreditQuotaID = property(_traderapi.CTORATstpOrderField_CreditQuotaID_get, _traderapi.CTORATstpOrderField_CreditQuotaID_set)

	# 头寸类型(两融专用)
    CreditQuotaType = property(_traderapi.CTORATstpOrderField_CreditQuotaType_get, _traderapi.CTORATstpOrderField_CreditQuotaType_set)

	# 信用负债编号(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpOrderField_CreditDebtID_get, _traderapi.CTORATstpOrderField_CreditDebtID_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpOrderField_IPAddress_get, _traderapi.CTORATstpOrderField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpOrderField_MacAddress_get, _traderapi.CTORATstpOrderField_MacAddress_set)

	# 回报附加浮点型数据信息
    RtnFloatInfo = property(_traderapi.CTORATstpOrderField_RtnFloatInfo_get, _traderapi.CTORATstpOrderField_RtnFloatInfo_set)

	# 回报附加整型数据
    RtnIntInfo = property(_traderapi.CTORATstpOrderField_RtnIntInfo_get, _traderapi.CTORATstpOrderField_RtnIntInfo_set)

	# 回报附加浮点型数据1
    RtnFloatInfo1 = property(_traderapi.CTORATstpOrderField_RtnFloatInfo1_get, _traderapi.CTORATstpOrderField_RtnFloatInfo1_set)

	# 回报附加浮点型数据2
    RtnFloatInfo2 = property(_traderapi.CTORATstpOrderField_RtnFloatInfo2_get, _traderapi.CTORATstpOrderField_RtnFloatInfo2_set)

	# 回报附加浮点型数据3
    RtnFloatInfo3 = property(_traderapi.CTORATstpOrderField_RtnFloatInfo3_get, _traderapi.CTORATstpOrderField_RtnFloatInfo3_set)

    def __init__(self):
        _traderapi.CTORATstpOrderField_swiginit(self, _traderapi.new_CTORATstpOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpOrderField

# Register CTORATstpOrderField in _traderapi:
_traderapi.CTORATstpOrderField_swigregister(CTORATstpOrderField)




#########################################用户标识############################################
class CTORATstpUserRefField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户代码
    UserID = property(_traderapi.CTORATstpUserRefField_UserID_get, _traderapi.CTORATstpUserRefField_UserID_set)

    def __init__(self):
        _traderapi.CTORATstpUserRefField_swiginit(self, _traderapi.new_CTORATstpUserRefField())
    __swig_destroy__ = _traderapi.delete_CTORATstpUserRefField

# Register CTORATstpUserRefField in _traderapi:
_traderapi.CTORATstpUserRefField_swigregister(CTORATstpUserRefField)




#########################################成交############################################
class CTORATstpTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpTradeField_ExchangeID_get, _traderapi.CTORATstpTradeField_ExchangeID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpTradeField_DepartmentID_get, _traderapi.CTORATstpTradeField_DepartmentID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpTradeField_InvestorID_get, _traderapi.CTORATstpTradeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpTradeField_BusinessUnitID_get, _traderapi.CTORATstpTradeField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpTradeField_ShareholderID_get, _traderapi.CTORATstpTradeField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpTradeField_SecurityID_get, _traderapi.CTORATstpTradeField_SecurityID_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpTradeField_TradeID_get, _traderapi.CTORATstpTradeField_TradeID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpTradeField_Direction_get, _traderapi.CTORATstpTradeField_Direction_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpTradeField_OrderSysID_get, _traderapi.CTORATstpTradeField_OrderSysID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpTradeField_OrderLocalID_get, _traderapi.CTORATstpTradeField_OrderLocalID_set)

	# 成交价格
    Price = property(_traderapi.CTORATstpTradeField_Price_get, _traderapi.CTORATstpTradeField_Price_set)

	# 成交数量
    Volume = property(_traderapi.CTORATstpTradeField_Volume_get, _traderapi.CTORATstpTradeField_Volume_set)

	# 成交日期
    TradeDate = property(_traderapi.CTORATstpTradeField_TradeDate_get, _traderapi.CTORATstpTradeField_TradeDate_set)

	# 成交时间
    TradeTime = property(_traderapi.CTORATstpTradeField_TradeTime_get, _traderapi.CTORATstpTradeField_TradeTime_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpTradeField_TradingDay_get, _traderapi.CTORATstpTradeField_TradingDay_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpTradeField_PbuID_get, _traderapi.CTORATstpTradeField_PbuID_set)

	# 报单引用
    OrderRef = property(_traderapi.CTORATstpTradeField_OrderRef_get, _traderapi.CTORATstpTradeField_OrderRef_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpTradeField_AccountID_get, _traderapi.CTORATstpTradeField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpTradeField_CurrencyID_get, _traderapi.CTORATstpTradeField_CurrencyID_set)

    def __init__(self):
        _traderapi.CTORATstpTradeField_swiginit(self, _traderapi.new_CTORATstpTradeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTradeField

# Register CTORATstpTradeField in _traderapi:
_traderapi.CTORATstpTradeField_swigregister(CTORATstpTradeField)




#########################################输入撤单操作############################################
class CTORATstpInputOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputOrderActionField_UserRequestID_get, _traderapi.CTORATstpInputOrderActionField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputOrderActionField_ExchangeID_get, _traderapi.CTORATstpInputOrderActionField_ExchangeID_set)

	# 被撤报单前置编号
    FrontID = property(_traderapi.CTORATstpInputOrderActionField_FrontID_get, _traderapi.CTORATstpInputOrderActionField_FrontID_set)

	# 被撤报单会话编号
    SessionID = property(_traderapi.CTORATstpInputOrderActionField_SessionID_get, _traderapi.CTORATstpInputOrderActionField_SessionID_set)

	# 被撤报单引用
    OrderRef = property(_traderapi.CTORATstpInputOrderActionField_OrderRef_get, _traderapi.CTORATstpInputOrderActionField_OrderRef_set)

	# 被撤报单系统编号
    OrderSysID = property(_traderapi.CTORATstpInputOrderActionField_OrderSysID_get, _traderapi.CTORATstpInputOrderActionField_OrderSysID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpInputOrderActionField_ActionFlag_get, _traderapi.CTORATstpInputOrderActionField_ActionFlag_set)

	# 报单操作引用
    OrderActionRef = property(_traderapi.CTORATstpInputOrderActionField_OrderActionRef_get, _traderapi.CTORATstpInputOrderActionField_OrderActionRef_set)

	# 系统撤单编号
    CancelOrderSysID = property(_traderapi.CTORATstpInputOrderActionField_CancelOrderSysID_get, _traderapi.CTORATstpInputOrderActionField_CancelOrderSysID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputOrderActionField_Operway_get, _traderapi.CTORATstpInputOrderActionField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputOrderActionField_SInfo_get, _traderapi.CTORATstpInputOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputOrderActionField_IInfo_get, _traderapi.CTORATstpInputOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpInputOrderActionField_swiginit(self, _traderapi.new_CTORATstpInputOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputOrderActionField

# Register CTORATstpInputOrderActionField in _traderapi:
_traderapi.CTORATstpInputOrderActionField_swigregister(CTORATstpInputOrderActionField)




#########################################条件单录入域############################################
class CTORATstpInputCondOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputCondOrderField_UserRequestID_get, _traderapi.CTORATstpInputCondOrderField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputCondOrderField_ExchangeID_get, _traderapi.CTORATstpInputCondOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputCondOrderField_InvestorID_get, _traderapi.CTORATstpInputCondOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInputCondOrderField_BusinessUnitID_get, _traderapi.CTORATstpInputCondOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInputCondOrderField_ShareholderID_get, _traderapi.CTORATstpInputCondOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputCondOrderField_SecurityID_get, _traderapi.CTORATstpInputCondOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpInputCondOrderField_Direction_get, _traderapi.CTORATstpInputCondOrderField_Direction_set)

	# 价格类型
    OrderPriceType = property(_traderapi.CTORATstpInputCondOrderField_OrderPriceType_get, _traderapi.CTORATstpInputCondOrderField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpInputCondOrderField_TimeCondition_get, _traderapi.CTORATstpInputCondOrderField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpInputCondOrderField_VolumeCondition_get, _traderapi.CTORATstpInputCondOrderField_VolumeCondition_set)

	# 报单价格
    LimitPrice = property(_traderapi.CTORATstpInputCondOrderField_LimitPrice_get, _traderapi.CTORATstpInputCondOrderField_LimitPrice_set)

	# 报单数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpInputCondOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpInputCondOrderField_VolumeTotalOriginal_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputCondOrderField_Operway_get, _traderapi.CTORATstpInputCondOrderField_Operway_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpInputCondOrderField_LotType_get, _traderapi.CTORATstpInputCondOrderField_LotType_set)

	# 条件检查
    CondCheck = property(_traderapi.CTORATstpInputCondOrderField_CondCheck_get, _traderapi.CTORATstpInputCondOrderField_CondCheck_set)

	# 有效日期
    GTDate = property(_traderapi.CTORATstpInputCondOrderField_GTDate_get, _traderapi.CTORATstpInputCondOrderField_GTDate_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpInputCondOrderField_ForceCloseReason_get, _traderapi.CTORATstpInputCondOrderField_ForceCloseReason_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpInputCondOrderField_CreditDebtID_get, _traderapi.CTORATstpInputCondOrderField_CreditDebtID_set)

	# 头寸类型(两融专用)
    CreditQuotaType = property(_traderapi.CTORATstpInputCondOrderField_CreditQuotaType_get, _traderapi.CTORATstpInputCondOrderField_CreditQuotaType_set)

	# 费息折扣券编号（0表示不使用折扣券）(两融专用)
    DiscountCouponID = property(_traderapi.CTORATstpInputCondOrderField_DiscountCouponID_get, _traderapi.CTORATstpInputCondOrderField_DiscountCouponID_set)

	# 条件报单引用
    CondOrderRef = property(_traderapi.CTORATstpInputCondOrderField_CondOrderRef_get, _traderapi.CTORATstpInputCondOrderField_CondOrderRef_set)

	# 条件报单编号
    CondOrderID = property(_traderapi.CTORATstpInputCondOrderField_CondOrderID_get, _traderapi.CTORATstpInputCondOrderField_CondOrderID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputCondOrderField_SInfo_get, _traderapi.CTORATstpInputCondOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputCondOrderField_IInfo_get, _traderapi.CTORATstpInputCondOrderField_IInfo_set)

	# 触发基准数量类型
    TriggerOrderVolumeType = property(_traderapi.CTORATstpInputCondOrderField_TriggerOrderVolumeType_get, _traderapi.CTORATstpInputCondOrderField_TriggerOrderVolumeType_set)

	# 触发基准价类型
    TriggerOrderPriceType = property(_traderapi.CTORATstpInputCondOrderField_TriggerOrderPriceType_get, _traderapi.CTORATstpInputCondOrderField_TriggerOrderPriceType_set)

	# 条件单触发条件
    ContingentCondition = property(_traderapi.CTORATstpInputCondOrderField_ContingentCondition_get, _traderapi.CTORATstpInputCondOrderField_ContingentCondition_set)

	# 条件价
    ConditionPrice = property(_traderapi.CTORATstpInputCondOrderField_ConditionPrice_get, _traderapi.CTORATstpInputCondOrderField_ConditionPrice_set)

	# 价格浮动tick数
    PriceTicks = property(_traderapi.CTORATstpInputCondOrderField_PriceTicks_get, _traderapi.CTORATstpInputCondOrderField_PriceTicks_set)

	# 数量浮动倍数
    VolumeMultiple = property(_traderapi.CTORATstpInputCondOrderField_VolumeMultiple_get, _traderapi.CTORATstpInputCondOrderField_VolumeMultiple_set)

	# 相关前置编号
    RelativeFrontID = property(_traderapi.CTORATstpInputCondOrderField_RelativeFrontID_get, _traderapi.CTORATstpInputCondOrderField_RelativeFrontID_set)

	# 相关会话编号
    RelativeSessionID = property(_traderapi.CTORATstpInputCondOrderField_RelativeSessionID_get, _traderapi.CTORATstpInputCondOrderField_RelativeSessionID_set)

	# 相关条件参数
    RelativeParam = property(_traderapi.CTORATstpInputCondOrderField_RelativeParam_get, _traderapi.CTORATstpInputCondOrderField_RelativeParam_set)

	# 附加条件单触发条件
    AppendContingentCondition = property(_traderapi.CTORATstpInputCondOrderField_AppendContingentCondition_get, _traderapi.CTORATstpInputCondOrderField_AppendContingentCondition_set)

	# 附加条件价
    AppendConditionPrice = property(_traderapi.CTORATstpInputCondOrderField_AppendConditionPrice_get, _traderapi.CTORATstpInputCondOrderField_AppendConditionPrice_set)

	# 附加相关前置编号
    AppendRelativeFrontID = property(_traderapi.CTORATstpInputCondOrderField_AppendRelativeFrontID_get, _traderapi.CTORATstpInputCondOrderField_AppendRelativeFrontID_set)

	# 附加相关会话编号
    AppendRelativeSessionID = property(_traderapi.CTORATstpInputCondOrderField_AppendRelativeSessionID_get, _traderapi.CTORATstpInputCondOrderField_AppendRelativeSessionID_set)

	# 附加相关条件参数
    AppendRelativeParam = property(_traderapi.CTORATstpInputCondOrderField_AppendRelativeParam_get, _traderapi.CTORATstpInputCondOrderField_AppendRelativeParam_set)

    def __init__(self):
        _traderapi.CTORATstpInputCondOrderField_swiginit(self, _traderapi.new_CTORATstpInputCondOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputCondOrderField

# Register CTORATstpInputCondOrderField in _traderapi:
_traderapi.CTORATstpInputCondOrderField_swigregister(CTORATstpInputCondOrderField)




#########################################条件单域############################################
class CTORATstpConditionOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpConditionOrderField_ExchangeID_get, _traderapi.CTORATstpConditionOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpConditionOrderField_InvestorID_get, _traderapi.CTORATstpConditionOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpConditionOrderField_BusinessUnitID_get, _traderapi.CTORATstpConditionOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpConditionOrderField_ShareholderID_get, _traderapi.CTORATstpConditionOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpConditionOrderField_SecurityID_get, _traderapi.CTORATstpConditionOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpConditionOrderField_Direction_get, _traderapi.CTORATstpConditionOrderField_Direction_set)

	# 价格类型
    OrderPriceType = property(_traderapi.CTORATstpConditionOrderField_OrderPriceType_get, _traderapi.CTORATstpConditionOrderField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpConditionOrderField_TimeCondition_get, _traderapi.CTORATstpConditionOrderField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpConditionOrderField_VolumeCondition_get, _traderapi.CTORATstpConditionOrderField_VolumeCondition_set)

	# 报单价格
    LimitPrice = property(_traderapi.CTORATstpConditionOrderField_LimitPrice_get, _traderapi.CTORATstpConditionOrderField_LimitPrice_set)

	# 报单数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpConditionOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpConditionOrderField_VolumeTotalOriginal_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpConditionOrderField_Operway_get, _traderapi.CTORATstpConditionOrderField_Operway_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpConditionOrderField_LotType_get, _traderapi.CTORATstpConditionOrderField_LotType_set)

	# 条件检查
    CondCheck = property(_traderapi.CTORATstpConditionOrderField_CondCheck_get, _traderapi.CTORATstpConditionOrderField_CondCheck_set)

	# 有效日期
    GTDate = property(_traderapi.CTORATstpConditionOrderField_GTDate_get, _traderapi.CTORATstpConditionOrderField_GTDate_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpConditionOrderField_ForceCloseReason_get, _traderapi.CTORATstpConditionOrderField_ForceCloseReason_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpConditionOrderField_CreditDebtID_get, _traderapi.CTORATstpConditionOrderField_CreditDebtID_set)

	# 头寸类型(两融专用)
    CreditQuotaType = property(_traderapi.CTORATstpConditionOrderField_CreditQuotaType_get, _traderapi.CTORATstpConditionOrderField_CreditQuotaType_set)

	# 费息折扣券编号（0表示不使用折扣券）(两融专用)
    DiscountCouponID = property(_traderapi.CTORATstpConditionOrderField_DiscountCouponID_get, _traderapi.CTORATstpConditionOrderField_DiscountCouponID_set)

	# 条件报单引用
    CondOrderRef = property(_traderapi.CTORATstpConditionOrderField_CondOrderRef_get, _traderapi.CTORATstpConditionOrderField_CondOrderRef_set)

	# 报单编号
    CondOrderID = property(_traderapi.CTORATstpConditionOrderField_CondOrderID_get, _traderapi.CTORATstpConditionOrderField_CondOrderID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpConditionOrderField_SInfo_get, _traderapi.CTORATstpConditionOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpConditionOrderField_IInfo_get, _traderapi.CTORATstpConditionOrderField_IInfo_set)

	# 触发基准数量类型
    TriggerOrderVolumeType = property(_traderapi.CTORATstpConditionOrderField_TriggerOrderVolumeType_get, _traderapi.CTORATstpConditionOrderField_TriggerOrderVolumeType_set)

	# 触发基准价类型
    TriggerOrderPriceType = property(_traderapi.CTORATstpConditionOrderField_TriggerOrderPriceType_get, _traderapi.CTORATstpConditionOrderField_TriggerOrderPriceType_set)

	# 条件单触发条件
    ContingentCondition = property(_traderapi.CTORATstpConditionOrderField_ContingentCondition_get, _traderapi.CTORATstpConditionOrderField_ContingentCondition_set)

	# 条件价
    ConditionPrice = property(_traderapi.CTORATstpConditionOrderField_ConditionPrice_get, _traderapi.CTORATstpConditionOrderField_ConditionPrice_set)

	# 价格浮动tick数
    PriceTicks = property(_traderapi.CTORATstpConditionOrderField_PriceTicks_get, _traderapi.CTORATstpConditionOrderField_PriceTicks_set)

	# 数量浮动倍数
    VolumeMultiple = property(_traderapi.CTORATstpConditionOrderField_VolumeMultiple_get, _traderapi.CTORATstpConditionOrderField_VolumeMultiple_set)

	# 相关前置编号
    RelativeFrontID = property(_traderapi.CTORATstpConditionOrderField_RelativeFrontID_get, _traderapi.CTORATstpConditionOrderField_RelativeFrontID_set)

	# 相关会话编号
    RelativeSessionID = property(_traderapi.CTORATstpConditionOrderField_RelativeSessionID_get, _traderapi.CTORATstpConditionOrderField_RelativeSessionID_set)

	# 相关条件参数
    RelativeParam = property(_traderapi.CTORATstpConditionOrderField_RelativeParam_get, _traderapi.CTORATstpConditionOrderField_RelativeParam_set)

	# 附加条件单触发条件
    AppendContingentCondition = property(_traderapi.CTORATstpConditionOrderField_AppendContingentCondition_get, _traderapi.CTORATstpConditionOrderField_AppendContingentCondition_set)

	# 附加条件价
    AppendConditionPrice = property(_traderapi.CTORATstpConditionOrderField_AppendConditionPrice_get, _traderapi.CTORATstpConditionOrderField_AppendConditionPrice_set)

	# 附加相关前置编号
    AppendRelativeFrontID = property(_traderapi.CTORATstpConditionOrderField_AppendRelativeFrontID_get, _traderapi.CTORATstpConditionOrderField_AppendRelativeFrontID_set)

	# 附加相关会话编号
    AppendRelativeSessionID = property(_traderapi.CTORATstpConditionOrderField_AppendRelativeSessionID_get, _traderapi.CTORATstpConditionOrderField_AppendRelativeSessionID_set)

	# 附加相关条件参数
    AppendRelativeParam = property(_traderapi.CTORATstpConditionOrderField_AppendRelativeParam_get, _traderapi.CTORATstpConditionOrderField_AppendRelativeParam_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpConditionOrderField_RequestID_get, _traderapi.CTORATstpConditionOrderField_RequestID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpConditionOrderField_TradingDay_get, _traderapi.CTORATstpConditionOrderField_TradingDay_set)

	# 条件单状态
    CondOrderStatus = property(_traderapi.CTORATstpConditionOrderField_CondOrderStatus_get, _traderapi.CTORATstpConditionOrderField_CondOrderStatus_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpConditionOrderField_StatusMsg_get, _traderapi.CTORATstpConditionOrderField_StatusMsg_set)

	# 申报用户
    InsertUser = property(_traderapi.CTORATstpConditionOrderField_InsertUser_get, _traderapi.CTORATstpConditionOrderField_InsertUser_set)

	# 申报日期
    InsertDate = property(_traderapi.CTORATstpConditionOrderField_InsertDate_get, _traderapi.CTORATstpConditionOrderField_InsertDate_set)

	# 申报时间
    InsertTime = property(_traderapi.CTORATstpConditionOrderField_InsertTime_get, _traderapi.CTORATstpConditionOrderField_InsertTime_set)

	# 触发日期
    ActiveDate = property(_traderapi.CTORATstpConditionOrderField_ActiveDate_get, _traderapi.CTORATstpConditionOrderField_ActiveDate_set)

	# 触发时间
    ActiveTime = property(_traderapi.CTORATstpConditionOrderField_ActiveTime_get, _traderapi.CTORATstpConditionOrderField_ActiveTime_set)

	# 撤销用户
    CancelUser = property(_traderapi.CTORATstpConditionOrderField_CancelUser_get, _traderapi.CTORATstpConditionOrderField_CancelUser_set)

	# 撤销时间
    CancelTime = property(_traderapi.CTORATstpConditionOrderField_CancelTime_get, _traderapi.CTORATstpConditionOrderField_CancelTime_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpConditionOrderField_FrontID_get, _traderapi.CTORATstpConditionOrderField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpConditionOrderField_SessionID_get, _traderapi.CTORATstpConditionOrderField_SessionID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpConditionOrderField_DepartmentID_get, _traderapi.CTORATstpConditionOrderField_DepartmentID_set)

	# 用户端产品信息
    UserProductInfo = property(_traderapi.CTORATstpConditionOrderField_UserProductInfo_get, _traderapi.CTORATstpConditionOrderField_UserProductInfo_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpConditionOrderField_IPAddress_get, _traderapi.CTORATstpConditionOrderField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpConditionOrderField_MacAddress_get, _traderapi.CTORATstpConditionOrderField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpConditionOrderField_swiginit(self, _traderapi.new_CTORATstpConditionOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpConditionOrderField

# Register CTORATstpConditionOrderField in _traderapi:
_traderapi.CTORATstpConditionOrderField_swigregister(CTORATstpConditionOrderField)




#########################################条件单操作录入############################################
class CTORATstpInputCondOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputCondOrderActionField_UserRequestID_get, _traderapi.CTORATstpInputCondOrderActionField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputCondOrderActionField_ExchangeID_get, _traderapi.CTORATstpInputCondOrderActionField_ExchangeID_set)

	# 被撤条件单前置编号
    FrontID = property(_traderapi.CTORATstpInputCondOrderActionField_FrontID_get, _traderapi.CTORATstpInputCondOrderActionField_FrontID_set)

	# 被撤条件单会话编号
    SessionID = property(_traderapi.CTORATstpInputCondOrderActionField_SessionID_get, _traderapi.CTORATstpInputCondOrderActionField_SessionID_set)

	# 被撤条件单引用
    CondOrderRef = property(_traderapi.CTORATstpInputCondOrderActionField_CondOrderRef_get, _traderapi.CTORATstpInputCondOrderActionField_CondOrderRef_set)

	# 被撤条件单编号
    CondOrderID = property(_traderapi.CTORATstpInputCondOrderActionField_CondOrderID_get, _traderapi.CTORATstpInputCondOrderActionField_CondOrderID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpInputCondOrderActionField_ActionFlag_get, _traderapi.CTORATstpInputCondOrderActionField_ActionFlag_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputCondOrderActionField_Operway_get, _traderapi.CTORATstpInputCondOrderActionField_Operway_set)

	# 条件单操作引用
    CondOrderActionRef = property(_traderapi.CTORATstpInputCondOrderActionField_CondOrderActionRef_get, _traderapi.CTORATstpInputCondOrderActionField_CondOrderActionRef_set)

	# 条件单撤单编号
    CancelCondOrderID = property(_traderapi.CTORATstpInputCondOrderActionField_CancelCondOrderID_get, _traderapi.CTORATstpInputCondOrderActionField_CancelCondOrderID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputCondOrderActionField_SInfo_get, _traderapi.CTORATstpInputCondOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputCondOrderActionField_IInfo_get, _traderapi.CTORATstpInputCondOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpInputCondOrderActionField_swiginit(self, _traderapi.new_CTORATstpInputCondOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputCondOrderActionField

# Register CTORATstpInputCondOrderActionField in _traderapi:
_traderapi.CTORATstpInputCondOrderActionField_swigregister(CTORATstpInputCondOrderActionField)




#########################################输入报单############################################
class CTORATstpInputNegoOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputNegoOrderField_UserRequestID_get, _traderapi.CTORATstpInputNegoOrderField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputNegoOrderField_ExchangeID_get, _traderapi.CTORATstpInputNegoOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputNegoOrderField_InvestorID_get, _traderapi.CTORATstpInputNegoOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInputNegoOrderField_BusinessUnitID_get, _traderapi.CTORATstpInputNegoOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInputNegoOrderField_ShareholderID_get, _traderapi.CTORATstpInputNegoOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputNegoOrderField_SecurityID_get, _traderapi.CTORATstpInputNegoOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpInputNegoOrderField_Direction_get, _traderapi.CTORATstpInputNegoOrderField_Direction_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpInputNegoOrderField_LimitPrice_get, _traderapi.CTORATstpInputNegoOrderField_LimitPrice_set)

	# 数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpInputNegoOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpInputNegoOrderField_VolumeTotalOriginal_set)

	# 联系人(意向申报时必填)
    Contractor = property(_traderapi.CTORATstpInputNegoOrderField_Contractor_get, _traderapi.CTORATstpInputNegoOrderField_Contractor_set)

	# 联系方式(意向申报时必填)
    ContractorInfo = property(_traderapi.CTORATstpInputNegoOrderField_ContractorInfo_get, _traderapi.CTORATstpInputNegoOrderField_ContractorInfo_set)

	# 约定号(成交申报时必填)
    ConfirmID = property(_traderapi.CTORATstpInputNegoOrderField_ConfirmID_get, _traderapi.CTORATstpInputNegoOrderField_ConfirmID_set)

	# 对手方席位号(成交申报时必填)
    CounterpartyPbuID = property(_traderapi.CTORATstpInputNegoOrderField_CounterpartyPbuID_get, _traderapi.CTORATstpInputNegoOrderField_CounterpartyPbuID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpInputNegoOrderField_OrderSysID_get, _traderapi.CTORATstpInputNegoOrderField_OrderSysID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputNegoOrderField_Operway_get, _traderapi.CTORATstpInputNegoOrderField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputNegoOrderField_SInfo_get, _traderapi.CTORATstpInputNegoOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputNegoOrderField_IInfo_get, _traderapi.CTORATstpInputNegoOrderField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpInputNegoOrderField_swiginit(self, _traderapi.new_CTORATstpInputNegoOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputNegoOrderField

# Register CTORATstpInputNegoOrderField in _traderapi:
_traderapi.CTORATstpInputNegoOrderField_swigregister(CTORATstpInputNegoOrderField)




#########################################协议交易报单############################################
class CTORATstpNegoOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpNegoOrderField_ExchangeID_get, _traderapi.CTORATstpNegoOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpNegoOrderField_InvestorID_get, _traderapi.CTORATstpNegoOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpNegoOrderField_BusinessUnitID_get, _traderapi.CTORATstpNegoOrderField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpNegoOrderField_ShareholderID_get, _traderapi.CTORATstpNegoOrderField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpNegoOrderField_SecurityID_get, _traderapi.CTORATstpNegoOrderField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpNegoOrderField_Direction_get, _traderapi.CTORATstpNegoOrderField_Direction_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpNegoOrderField_LimitPrice_get, _traderapi.CTORATstpNegoOrderField_LimitPrice_set)

	# 数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpNegoOrderField_VolumeTotalOriginal_get, _traderapi.CTORATstpNegoOrderField_VolumeTotalOriginal_set)

	# 联系人
    Contractor = property(_traderapi.CTORATstpNegoOrderField_Contractor_get, _traderapi.CTORATstpNegoOrderField_Contractor_set)

	# 联系方式
    ContractorInfo = property(_traderapi.CTORATstpNegoOrderField_ContractorInfo_get, _traderapi.CTORATstpNegoOrderField_ContractorInfo_set)

	# 约定号
    ConfirmID = property(_traderapi.CTORATstpNegoOrderField_ConfirmID_get, _traderapi.CTORATstpNegoOrderField_ConfirmID_set)

	# 对手方席位号
    CounterpartyPbuID = property(_traderapi.CTORATstpNegoOrderField_CounterpartyPbuID_get, _traderapi.CTORATstpNegoOrderField_CounterpartyPbuID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpNegoOrderField_Operway_get, _traderapi.CTORATstpNegoOrderField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpNegoOrderField_SInfo_get, _traderapi.CTORATstpNegoOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpNegoOrderField_IInfo_get, _traderapi.CTORATstpNegoOrderField_IInfo_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpNegoOrderField_RequestID_get, _traderapi.CTORATstpNegoOrderField_RequestID_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpNegoOrderField_FrontID_get, _traderapi.CTORATstpNegoOrderField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpNegoOrderField_SessionID_get, _traderapi.CTORATstpNegoOrderField_SessionID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpNegoOrderField_OrderLocalID_get, _traderapi.CTORATstpNegoOrderField_OrderLocalID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpNegoOrderField_OrderSysID_get, _traderapi.CTORATstpNegoOrderField_OrderSysID_set)

	# 报单状态
    OrderStatus = property(_traderapi.CTORATstpNegoOrderField_OrderStatus_get, _traderapi.CTORATstpNegoOrderField_OrderStatus_set)

	# 报单提交状态
    OrderSubmitStatus = property(_traderapi.CTORATstpNegoOrderField_OrderSubmitStatus_get, _traderapi.CTORATstpNegoOrderField_OrderSubmitStatus_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpNegoOrderField_StatusMsg_get, _traderapi.CTORATstpNegoOrderField_StatusMsg_set)

	# 已成交数量
    VolumeTraded = property(_traderapi.CTORATstpNegoOrderField_VolumeTraded_get, _traderapi.CTORATstpNegoOrderField_VolumeTraded_set)

	# 已撤销数量
    VolumeCanceled = property(_traderapi.CTORATstpNegoOrderField_VolumeCanceled_get, _traderapi.CTORATstpNegoOrderField_VolumeCanceled_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpNegoOrderField_TradingDay_get, _traderapi.CTORATstpNegoOrderField_TradingDay_set)

	# 申报用户
    InsertUser = property(_traderapi.CTORATstpNegoOrderField_InsertUser_get, _traderapi.CTORATstpNegoOrderField_InsertUser_set)

	# 申报日期
    InsertDate = property(_traderapi.CTORATstpNegoOrderField_InsertDate_get, _traderapi.CTORATstpNegoOrderField_InsertDate_set)

	# 申报时间
    InsertTime = property(_traderapi.CTORATstpNegoOrderField_InsertTime_get, _traderapi.CTORATstpNegoOrderField_InsertTime_set)

	# 交易所接收时间
    AcceptTime = property(_traderapi.CTORATstpNegoOrderField_AcceptTime_get, _traderapi.CTORATstpNegoOrderField_AcceptTime_set)

	# 撤销用户
    CancelUser = property(_traderapi.CTORATstpNegoOrderField_CancelUser_get, _traderapi.CTORATstpNegoOrderField_CancelUser_set)

	# 撤销时间
    CancelTime = property(_traderapi.CTORATstpNegoOrderField_CancelTime_get, _traderapi.CTORATstpNegoOrderField_CancelTime_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpNegoOrderField_DepartmentID_get, _traderapi.CTORATstpNegoOrderField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpNegoOrderField_AccountID_get, _traderapi.CTORATstpNegoOrderField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpNegoOrderField_CurrencyID_get, _traderapi.CTORATstpNegoOrderField_CurrencyID_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpNegoOrderField_PbuID_get, _traderapi.CTORATstpNegoOrderField_PbuID_set)

	# 用户端产品信息
    UserProductInfo = property(_traderapi.CTORATstpNegoOrderField_UserProductInfo_get, _traderapi.CTORATstpNegoOrderField_UserProductInfo_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpNegoOrderField_IPAddress_get, _traderapi.CTORATstpNegoOrderField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpNegoOrderField_MacAddress_get, _traderapi.CTORATstpNegoOrderField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpNegoOrderField_swiginit(self, _traderapi.new_CTORATstpNegoOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpNegoOrderField

# Register CTORATstpNegoOrderField in _traderapi:
_traderapi.CTORATstpNegoOrderField_swigregister(CTORATstpNegoOrderField)




#########################################协议交易成交############################################
class CTORATstpNegoTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpNegoTradeField_ExchangeID_get, _traderapi.CTORATstpNegoTradeField_ExchangeID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpNegoTradeField_DepartmentID_get, _traderapi.CTORATstpNegoTradeField_DepartmentID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpNegoTradeField_InvestorID_get, _traderapi.CTORATstpNegoTradeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpNegoTradeField_BusinessUnitID_get, _traderapi.CTORATstpNegoTradeField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpNegoTradeField_ShareholderID_get, _traderapi.CTORATstpNegoTradeField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpNegoTradeField_SecurityID_get, _traderapi.CTORATstpNegoTradeField_SecurityID_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpNegoTradeField_TradeID_get, _traderapi.CTORATstpNegoTradeField_TradeID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpNegoTradeField_Direction_get, _traderapi.CTORATstpNegoTradeField_Direction_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpNegoTradeField_OrderSysID_get, _traderapi.CTORATstpNegoTradeField_OrderSysID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpNegoTradeField_OrderLocalID_get, _traderapi.CTORATstpNegoTradeField_OrderLocalID_set)

	# 成交价格
    Price = property(_traderapi.CTORATstpNegoTradeField_Price_get, _traderapi.CTORATstpNegoTradeField_Price_set)

	# 成交数量
    Volume = property(_traderapi.CTORATstpNegoTradeField_Volume_get, _traderapi.CTORATstpNegoTradeField_Volume_set)

	# 成交日期
    TradeDate = property(_traderapi.CTORATstpNegoTradeField_TradeDate_get, _traderapi.CTORATstpNegoTradeField_TradeDate_set)

	# 成交时间
    TradeTime = property(_traderapi.CTORATstpNegoTradeField_TradeTime_get, _traderapi.CTORATstpNegoTradeField_TradeTime_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpNegoTradeField_TradingDay_get, _traderapi.CTORATstpNegoTradeField_TradingDay_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpNegoTradeField_PbuID_get, _traderapi.CTORATstpNegoTradeField_PbuID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpNegoTradeField_AccountID_get, _traderapi.CTORATstpNegoTradeField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpNegoTradeField_CurrencyID_get, _traderapi.CTORATstpNegoTradeField_CurrencyID_set)

	# 对手方交易单元代码
    CounterpartyPbuID = property(_traderapi.CTORATstpNegoTradeField_CounterpartyPbuID_get, _traderapi.CTORATstpNegoTradeField_CounterpartyPbuID_set)

	# 对手方股东账号
    CounterpartyShareholderID = property(_traderapi.CTORATstpNegoTradeField_CounterpartyShareholderID_get, _traderapi.CTORATstpNegoTradeField_CounterpartyShareholderID_set)

    def __init__(self):
        _traderapi.CTORATstpNegoTradeField_swiginit(self, _traderapi.new_CTORATstpNegoTradeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpNegoTradeField

# Register CTORATstpNegoTradeField in _traderapi:
_traderapi.CTORATstpNegoTradeField_swigregister(CTORATstpNegoTradeField)




#########################################输入协议交易撤单操作############################################
class CTORATstpInputNegoOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputNegoOrderActionField_UserRequestID_get, _traderapi.CTORATstpInputNegoOrderActionField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputNegoOrderActionField_ExchangeID_get, _traderapi.CTORATstpInputNegoOrderActionField_ExchangeID_set)

	# 被撤报单系统编号
    OrderSysID = property(_traderapi.CTORATstpInputNegoOrderActionField_OrderSysID_get, _traderapi.CTORATstpInputNegoOrderActionField_OrderSysID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpInputNegoOrderActionField_ActionFlag_get, _traderapi.CTORATstpInputNegoOrderActionField_ActionFlag_set)

	# 系统撤单编号
    CancelOrderSysID = property(_traderapi.CTORATstpInputNegoOrderActionField_CancelOrderSysID_get, _traderapi.CTORATstpInputNegoOrderActionField_CancelOrderSysID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputNegoOrderActionField_Operway_get, _traderapi.CTORATstpInputNegoOrderActionField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputNegoOrderActionField_SInfo_get, _traderapi.CTORATstpInputNegoOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputNegoOrderActionField_IInfo_get, _traderapi.CTORATstpInputNegoOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpInputNegoOrderActionField_swiginit(self, _traderapi.new_CTORATstpInputNegoOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputNegoOrderActionField

# Register CTORATstpInputNegoOrderActionField in _traderapi:
_traderapi.CTORATstpInputNegoOrderActionField_swigregister(CTORATstpInputNegoOrderActionField)




#########################################输入报单############################################
class CTORATstpInputOrderExField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputOrderExField_UserRequestID_get, _traderapi.CTORATstpInputOrderExField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputOrderExField_ExchangeID_get, _traderapi.CTORATstpInputOrderExField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputOrderExField_InvestorID_get, _traderapi.CTORATstpInputOrderExField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInputOrderExField_BusinessUnitID_get, _traderapi.CTORATstpInputOrderExField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInputOrderExField_ShareholderID_get, _traderapi.CTORATstpInputOrderExField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputOrderExField_SecurityID_get, _traderapi.CTORATstpInputOrderExField_SecurityID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpInputOrderExField_Direction_get, _traderapi.CTORATstpInputOrderExField_Direction_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpInputOrderExField_LimitPrice_get, _traderapi.CTORATstpInputOrderExField_LimitPrice_set)

	# 数量
    VolumeTotalOriginal = property(_traderapi.CTORATstpInputOrderExField_VolumeTotalOriginal_get, _traderapi.CTORATstpInputOrderExField_VolumeTotalOriginal_set)

	# 报单价格条件
    OrderPriceType = property(_traderapi.CTORATstpInputOrderExField_OrderPriceType_get, _traderapi.CTORATstpInputOrderExField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpInputOrderExField_TimeCondition_get, _traderapi.CTORATstpInputOrderExField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpInputOrderExField_VolumeCondition_get, _traderapi.CTORATstpInputOrderExField_VolumeCondition_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputOrderExField_Operway_get, _traderapi.CTORATstpInputOrderExField_Operway_set)

	# 报单引用
    OrderRef = property(_traderapi.CTORATstpInputOrderExField_OrderRef_get, _traderapi.CTORATstpInputOrderExField_OrderRef_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpInputOrderExField_LotType_get, _traderapi.CTORATstpInputOrderExField_LotType_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpInputOrderExField_OrderSysID_get, _traderapi.CTORATstpInputOrderExField_OrderSysID_set)

	# 条件检查
    CondCheck = property(_traderapi.CTORATstpInputOrderExField_CondCheck_get, _traderapi.CTORATstpInputOrderExField_CondCheck_set)

	# 有效日期
    GTDate = property(_traderapi.CTORATstpInputOrderExField_GTDate_get, _traderapi.CTORATstpInputOrderExField_GTDate_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpInputOrderExField_ForceCloseReason_get, _traderapi.CTORATstpInputOrderExField_ForceCloseReason_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpInputOrderExField_CreditDebtID_get, _traderapi.CTORATstpInputOrderExField_CreditDebtID_set)

	# 头寸类型(两融专用)
    CreditQuotaType = property(_traderapi.CTORATstpInputOrderExField_CreditQuotaType_get, _traderapi.CTORATstpInputOrderExField_CreditQuotaType_set)

	# 费息折扣券编号（0表示不使用折扣券）(两融专用)
    DiscountCouponID = property(_traderapi.CTORATstpInputOrderExField_DiscountCouponID_get, _traderapi.CTORATstpInputOrderExField_DiscountCouponID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputOrderExField_SInfo_get, _traderapi.CTORATstpInputOrderExField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputOrderExField_IInfo_get, _traderapi.CTORATstpInputOrderExField_IInfo_set)

	# 关联节点编号
    NodeRef = property(_traderapi.CTORATstpInputOrderExField_NodeRef_get, _traderapi.CTORATstpInputOrderExField_NodeRef_set)

    def __init__(self):
        _traderapi.CTORATstpInputOrderExField_swiginit(self, _traderapi.new_CTORATstpInputOrderExField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputOrderExField

# Register CTORATstpInputOrderExField in _traderapi:
_traderapi.CTORATstpInputOrderExField_swigregister(CTORATstpInputOrderExField)




#########################################输入撤单操作############################################
class CTORATstpInputOrderActionExField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputOrderActionExField_UserRequestID_get, _traderapi.CTORATstpInputOrderActionExField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputOrderActionExField_ExchangeID_get, _traderapi.CTORATstpInputOrderActionExField_ExchangeID_set)

	# 被撤报单前置编号
    FrontID = property(_traderapi.CTORATstpInputOrderActionExField_FrontID_get, _traderapi.CTORATstpInputOrderActionExField_FrontID_set)

	# 被撤报单会话编号
    SessionID = property(_traderapi.CTORATstpInputOrderActionExField_SessionID_get, _traderapi.CTORATstpInputOrderActionExField_SessionID_set)

	# 被撤报单引用
    OrderRef = property(_traderapi.CTORATstpInputOrderActionExField_OrderRef_get, _traderapi.CTORATstpInputOrderActionExField_OrderRef_set)

	# 被撤报单系统编号
    OrderSysID = property(_traderapi.CTORATstpInputOrderActionExField_OrderSysID_get, _traderapi.CTORATstpInputOrderActionExField_OrderSysID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpInputOrderActionExField_ActionFlag_get, _traderapi.CTORATstpInputOrderActionExField_ActionFlag_set)

	# 报单操作引用
    OrderActionRef = property(_traderapi.CTORATstpInputOrderActionExField_OrderActionRef_get, _traderapi.CTORATstpInputOrderActionExField_OrderActionRef_set)

	# 系统撤单编号
    CancelOrderSysID = property(_traderapi.CTORATstpInputOrderActionExField_CancelOrderSysID_get, _traderapi.CTORATstpInputOrderActionExField_CancelOrderSysID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpInputOrderActionExField_Operway_get, _traderapi.CTORATstpInputOrderActionExField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpInputOrderActionExField_SInfo_get, _traderapi.CTORATstpInputOrderActionExField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpInputOrderActionExField_IInfo_get, _traderapi.CTORATstpInputOrderActionExField_IInfo_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputOrderActionExField_SecurityID_get, _traderapi.CTORATstpInputOrderActionExField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpInputOrderActionExField_swiginit(self, _traderapi.new_CTORATstpInputOrderActionExField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputOrderActionExField

# Register CTORATstpInputOrderActionExField in _traderapi:
_traderapi.CTORATstpInputOrderActionExField_swigregister(CTORATstpInputOrderActionExField)




#########################################市场状态############################################
class CTORATstpMarketStatusField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 市场代码
    MarketID = property(_traderapi.CTORATstpMarketStatusField_MarketID_get, _traderapi.CTORATstpMarketStatusField_MarketID_set)

	# 市场状态
    MarketStatus = property(_traderapi.CTORATstpMarketStatusField_MarketStatus_get, _traderapi.CTORATstpMarketStatusField_MarketStatus_set)

    def __init__(self):
        _traderapi.CTORATstpMarketStatusField_swiginit(self, _traderapi.new_CTORATstpMarketStatusField())
    __swig_destroy__ = _traderapi.delete_CTORATstpMarketStatusField

# Register CTORATstpMarketStatusField in _traderapi:
_traderapi.CTORATstpMarketStatusField_swigregister(CTORATstpMarketStatusField)




#########################################资金转移############################################
class CTORATstpInputTransferFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputTransferFundField_UserRequestID_get, _traderapi.CTORATstpInputTransferFundField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpInputTransferFundField_DepartmentID_get, _traderapi.CTORATstpInputTransferFundField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpInputTransferFundField_AccountID_get, _traderapi.CTORATstpInputTransferFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpInputTransferFundField_CurrencyID_get, _traderapi.CTORATstpInputTransferFundField_CurrencyID_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpInputTransferFundField_ApplySerial_get, _traderapi.CTORATstpInputTransferFundField_ApplySerial_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpInputTransferFundField_TransferDirection_get, _traderapi.CTORATstpInputTransferFundField_TransferDirection_set)

	# 转移金额
    Amount = property(_traderapi.CTORATstpInputTransferFundField_Amount_get, _traderapi.CTORATstpInputTransferFundField_Amount_set)

	# 银行代码(银证转账时必填)
    BankID = property(_traderapi.CTORATstpInputTransferFundField_BankID_get, _traderapi.CTORATstpInputTransferFundField_BankID_set)

	# 资金密码(证券转银行时必填)
    AccountPassword = property(_traderapi.CTORATstpInputTransferFundField_AccountPassword_get, _traderapi.CTORATstpInputTransferFundField_AccountPassword_set)

	# 银行密码(银行转证券时必填)
    BankPassword = property(_traderapi.CTORATstpInputTransferFundField_BankPassword_get, _traderapi.CTORATstpInputTransferFundField_BankPassword_set)

	# 外部节点号(节点间资金调拨时必填)
    ExternalNodeID = property(_traderapi.CTORATstpInputTransferFundField_ExternalNodeID_get, _traderapi.CTORATstpInputTransferFundField_ExternalNodeID_set)

	# 指定偿还的信用负债编号(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpInputTransferFundField_CreditDebtID_get, _traderapi.CTORATstpInputTransferFundField_CreditDebtID_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpInputTransferFundField_ForceCloseReason_get, _traderapi.CTORATstpInputTransferFundField_ForceCloseReason_set)

	# 实际偿还金额(返回)(两融专用)
    RealAmount = property(_traderapi.CTORATstpInputTransferFundField_RealAmount_get, _traderapi.CTORATstpInputTransferFundField_RealAmount_set)

	# 强制标识(证券转银行时有效)
    ForceFlag = property(_traderapi.CTORATstpInputTransferFundField_ForceFlag_get, _traderapi.CTORATstpInputTransferFundField_ForceFlag_set)

    def __init__(self):
        _traderapi.CTORATstpInputTransferFundField_swiginit(self, _traderapi.new_CTORATstpInputTransferFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputTransferFundField

# Register CTORATstpInputTransferFundField in _traderapi:
_traderapi.CTORATstpInputTransferFundField_swigregister(CTORATstpInputTransferFundField)




#########################################资金转移回报############################################
class CTORATstpTransferFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 转移流水号
    FundSerial = property(_traderapi.CTORATstpTransferFundField_FundSerial_get, _traderapi.CTORATstpTransferFundField_FundSerial_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpTransferFundField_ApplySerial_get, _traderapi.CTORATstpTransferFundField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpTransferFundField_FrontID_get, _traderapi.CTORATstpTransferFundField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpTransferFundField_SessionID_get, _traderapi.CTORATstpTransferFundField_SessionID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpTransferFundField_DepartmentID_get, _traderapi.CTORATstpTransferFundField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpTransferFundField_AccountID_get, _traderapi.CTORATstpTransferFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpTransferFundField_CurrencyID_get, _traderapi.CTORATstpTransferFundField_CurrencyID_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpTransferFundField_TransferDirection_get, _traderapi.CTORATstpTransferFundField_TransferDirection_set)

	# 转移金额
    Amount = property(_traderapi.CTORATstpTransferFundField_Amount_get, _traderapi.CTORATstpTransferFundField_Amount_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpTransferFundField_TransferStatus_get, _traderapi.CTORATstpTransferFundField_TransferStatus_set)

	# 操作人员
    OperatorID = property(_traderapi.CTORATstpTransferFundField_OperatorID_get, _traderapi.CTORATstpTransferFundField_OperatorID_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpTransferFundField_OperateDate_get, _traderapi.CTORATstpTransferFundField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpTransferFundField_OperateTime_get, _traderapi.CTORATstpTransferFundField_OperateTime_set)

	# 签约银行账户
    BankAccountID = property(_traderapi.CTORATstpTransferFundField_BankAccountID_get, _traderapi.CTORATstpTransferFundField_BankAccountID_set)

	# 银行代码
    BankID = property(_traderapi.CTORATstpTransferFundField_BankID_get, _traderapi.CTORATstpTransferFundField_BankID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpTransferFundField_InvestorID_get, _traderapi.CTORATstpTransferFundField_InvestorID_set)

	# 外部节点号
    ExternalNodeID = property(_traderapi.CTORATstpTransferFundField_ExternalNodeID_get, _traderapi.CTORATstpTransferFundField_ExternalNodeID_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpTransferFundField_ForceCloseReason_get, _traderapi.CTORATstpTransferFundField_ForceCloseReason_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpTransferFundField_IPAddress_get, _traderapi.CTORATstpTransferFundField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpTransferFundField_MacAddress_get, _traderapi.CTORATstpTransferFundField_MacAddress_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpTransferFundField_BusinessUnitID_get, _traderapi.CTORATstpTransferFundField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpTransferFundField_swiginit(self, _traderapi.new_CTORATstpTransferFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTransferFundField

# Register CTORATstpTransferFundField in _traderapi:
_traderapi.CTORATstpTransferFundField_swigregister(CTORATstpTransferFundField)




#########################################仓位转移############################################
class CTORATstpInputTransferPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputTransferPositionField_InvestorID_get, _traderapi.CTORATstpInputTransferPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInputTransferPositionField_BusinessUnitID_get, _traderapi.CTORATstpInputTransferPositionField_BusinessUnitID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInputTransferPositionField_ExchangeID_get, _traderapi.CTORATstpInputTransferPositionField_ExchangeID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInputTransferPositionField_ShareholderID_get, _traderapi.CTORATstpInputTransferPositionField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInputTransferPositionField_SecurityID_get, _traderapi.CTORATstpInputTransferPositionField_SecurityID_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpInputTransferPositionField_ApplySerial_get, _traderapi.CTORATstpInputTransferPositionField_ApplySerial_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpInputTransferPositionField_TransferDirection_get, _traderapi.CTORATstpInputTransferPositionField_TransferDirection_set)

	# 数量
    Volume = property(_traderapi.CTORATstpInputTransferPositionField_Volume_get, _traderapi.CTORATstpInputTransferPositionField_Volume_set)

	# 转移持仓类型
    TransferPositionType = property(_traderapi.CTORATstpInputTransferPositionField_TransferPositionType_get, _traderapi.CTORATstpInputTransferPositionField_TransferPositionType_set)

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputTransferPositionField_UserRequestID_get, _traderapi.CTORATstpInputTransferPositionField_UserRequestID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpInputTransferPositionField_MarketID_get, _traderapi.CTORATstpInputTransferPositionField_MarketID_set)

	# 外部节点编号(外部系统转仓时必填)
    ExternalNodeID = property(_traderapi.CTORATstpInputTransferPositionField_ExternalNodeID_get, _traderapi.CTORATstpInputTransferPositionField_ExternalNodeID_set)

    def __init__(self):
        _traderapi.CTORATstpInputTransferPositionField_swiginit(self, _traderapi.new_CTORATstpInputTransferPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputTransferPositionField

# Register CTORATstpInputTransferPositionField in _traderapi:
_traderapi.CTORATstpInputTransferPositionField_swigregister(CTORATstpInputTransferPositionField)




#########################################仓位转移回报############################################
class CTORATstpTransferPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 仓位转移流水号
    PositionSerial = property(_traderapi.CTORATstpTransferPositionField_PositionSerial_get, _traderapi.CTORATstpTransferPositionField_PositionSerial_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpTransferPositionField_ApplySerial_get, _traderapi.CTORATstpTransferPositionField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpTransferPositionField_FrontID_get, _traderapi.CTORATstpTransferPositionField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpTransferPositionField_SessionID_get, _traderapi.CTORATstpTransferPositionField_SessionID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpTransferPositionField_InvestorID_get, _traderapi.CTORATstpTransferPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpTransferPositionField_BusinessUnitID_get, _traderapi.CTORATstpTransferPositionField_BusinessUnitID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpTransferPositionField_ExchangeID_get, _traderapi.CTORATstpTransferPositionField_ExchangeID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpTransferPositionField_ShareholderID_get, _traderapi.CTORATstpTransferPositionField_ShareholderID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpTransferPositionField_MarketID_get, _traderapi.CTORATstpTransferPositionField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpTransferPositionField_SecurityID_get, _traderapi.CTORATstpTransferPositionField_SecurityID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpTransferPositionField_TradingDay_get, _traderapi.CTORATstpTransferPositionField_TradingDay_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpTransferPositionField_TransferDirection_get, _traderapi.CTORATstpTransferPositionField_TransferDirection_set)

	# 转移持仓类型
    TransferPositionType = property(_traderapi.CTORATstpTransferPositionField_TransferPositionType_get, _traderapi.CTORATstpTransferPositionField_TransferPositionType_set)

	# 昨日持仓数量
    HistoryVolume = property(_traderapi.CTORATstpTransferPositionField_HistoryVolume_get, _traderapi.CTORATstpTransferPositionField_HistoryVolume_set)

	# 今日买卖持仓数量
    TodayBSVolume = property(_traderapi.CTORATstpTransferPositionField_TodayBSVolume_get, _traderapi.CTORATstpTransferPositionField_TodayBSVolume_set)

	# 今日申赎持仓数量
    TodayPRVolume = property(_traderapi.CTORATstpTransferPositionField_TodayPRVolume_get, _traderapi.CTORATstpTransferPositionField_TodayPRVolume_set)

	# 今日拆分合并持仓数量
    TodaySMVolume = property(_traderapi.CTORATstpTransferPositionField_TodaySMVolume_get, _traderapi.CTORATstpTransferPositionField_TodaySMVolume_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpTransferPositionField_TransferStatus_get, _traderapi.CTORATstpTransferPositionField_TransferStatus_set)

	# 操作人员
    OperatorID = property(_traderapi.CTORATstpTransferPositionField_OperatorID_get, _traderapi.CTORATstpTransferPositionField_OperatorID_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpTransferPositionField_OperateDate_get, _traderapi.CTORATstpTransferPositionField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpTransferPositionField_OperateTime_get, _traderapi.CTORATstpTransferPositionField_OperateTime_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpTransferPositionField_IPAddress_get, _traderapi.CTORATstpTransferPositionField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpTransferPositionField_MacAddress_get, _traderapi.CTORATstpTransferPositionField_MacAddress_set)

	# 外部节点编号
    ExternalNodeID = property(_traderapi.CTORATstpTransferPositionField_ExternalNodeID_get, _traderapi.CTORATstpTransferPositionField_ExternalNodeID_set)

    def __init__(self):
        _traderapi.CTORATstpTransferPositionField_swiginit(self, _traderapi.new_CTORATstpTransferPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTransferPositionField

# Register CTORATstpTransferPositionField in _traderapi:
_traderapi.CTORATstpTransferPositionField_swigregister(CTORATstpTransferPositionField)




#########################################外围系统仓位转移回报############################################
class CTORATstpPeripheryTransferPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 仓位调拨流水号
    PositionSerial = property(_traderapi.CTORATstpPeripheryTransferPositionField_PositionSerial_get, _traderapi.CTORATstpPeripheryTransferPositionField_PositionSerial_set)

	# 仓位调拨请求流水号
    ApplySerial = property(_traderapi.CTORATstpPeripheryTransferPositionField_ApplySerial_get, _traderapi.CTORATstpPeripheryTransferPositionField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpPeripheryTransferPositionField_FrontID_get, _traderapi.CTORATstpPeripheryTransferPositionField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpPeripheryTransferPositionField_SessionID_get, _traderapi.CTORATstpPeripheryTransferPositionField_SessionID_set)

	# 仓位调拨方向
    TransferDirection = property(_traderapi.CTORATstpPeripheryTransferPositionField_TransferDirection_get, _traderapi.CTORATstpPeripheryTransferPositionField_TransferDirection_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPeripheryTransferPositionField_ExchangeID_get, _traderapi.CTORATstpPeripheryTransferPositionField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPeripheryTransferPositionField_MarketID_get, _traderapi.CTORATstpPeripheryTransferPositionField_MarketID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPeripheryTransferPositionField_InvestorID_get, _traderapi.CTORATstpPeripheryTransferPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPeripheryTransferPositionField_BusinessUnitID_get, _traderapi.CTORATstpPeripheryTransferPositionField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpPeripheryTransferPositionField_ShareholderID_get, _traderapi.CTORATstpPeripheryTransferPositionField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPeripheryTransferPositionField_SecurityID_get, _traderapi.CTORATstpPeripheryTransferPositionField_SecurityID_set)

	# 今日买卖仓位转入转出数量
    TodayBSPos = property(_traderapi.CTORATstpPeripheryTransferPositionField_TodayBSPos_get, _traderapi.CTORATstpPeripheryTransferPositionField_TodayBSPos_set)

	# 今日申赎仓位转入数量
    TodayPRPos = property(_traderapi.CTORATstpPeripheryTransferPositionField_TodayPRPos_get, _traderapi.CTORATstpPeripheryTransferPositionField_TodayPRPos_set)

	# 昨日仓位转入数量
    HistoryPos = property(_traderapi.CTORATstpPeripheryTransferPositionField_HistoryPos_get, _traderapi.CTORATstpPeripheryTransferPositionField_HistoryPos_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpPeripheryTransferPositionField_TradingDay_get, _traderapi.CTORATstpPeripheryTransferPositionField_TradingDay_set)

	# 仓位调拨原因
    TransferReason = property(_traderapi.CTORATstpPeripheryTransferPositionField_TransferReason_get, _traderapi.CTORATstpPeripheryTransferPositionField_TransferReason_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpPeripheryTransferPositionField_TransferStatus_get, _traderapi.CTORATstpPeripheryTransferPositionField_TransferStatus_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpPeripheryTransferPositionField_OperateDate_get, _traderapi.CTORATstpPeripheryTransferPositionField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpPeripheryTransferPositionField_OperateTime_get, _traderapi.CTORATstpPeripheryTransferPositionField_OperateTime_set)

	# 冲正日期
    RepealDate = property(_traderapi.CTORATstpPeripheryTransferPositionField_RepealDate_get, _traderapi.CTORATstpPeripheryTransferPositionField_RepealDate_set)

	# 冲正时间
    RepealTime = property(_traderapi.CTORATstpPeripheryTransferPositionField_RepealTime_get, _traderapi.CTORATstpPeripheryTransferPositionField_RepealTime_set)

	# 冲正原因
    RepealReason = property(_traderapi.CTORATstpPeripheryTransferPositionField_RepealReason_get, _traderapi.CTORATstpPeripheryTransferPositionField_RepealReason_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpPeripheryTransferPositionField_StatusMsg_get, _traderapi.CTORATstpPeripheryTransferPositionField_StatusMsg_set)

	# 今日拆分合并仓位转入数量
    TodaySMPos = property(_traderapi.CTORATstpPeripheryTransferPositionField_TodaySMPos_get, _traderapi.CTORATstpPeripheryTransferPositionField_TodaySMPos_set)

    def __init__(self):
        _traderapi.CTORATstpPeripheryTransferPositionField_swiginit(self, _traderapi.new_CTORATstpPeripheryTransferPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPeripheryTransferPositionField

# Register CTORATstpPeripheryTransferPositionField in _traderapi:
_traderapi.CTORATstpPeripheryTransferPositionField_swigregister(CTORATstpPeripheryTransferPositionField)




#########################################外围系统资金转移回报############################################
class CTORATstpPeripheryTransferFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 资金调拨流水号
    FundSerial = property(_traderapi.CTORATstpPeripheryTransferFundField_FundSerial_get, _traderapi.CTORATstpPeripheryTransferFundField_FundSerial_set)

	# 资金调拨请求流水号
    ApplySerial = property(_traderapi.CTORATstpPeripheryTransferFundField_ApplySerial_get, _traderapi.CTORATstpPeripheryTransferFundField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpPeripheryTransferFundField_FrontID_get, _traderapi.CTORATstpPeripheryTransferFundField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpPeripheryTransferFundField_SessionID_get, _traderapi.CTORATstpPeripheryTransferFundField_SessionID_set)

	# 资金调拨方向
    TransferDirection = property(_traderapi.CTORATstpPeripheryTransferFundField_TransferDirection_get, _traderapi.CTORATstpPeripheryTransferFundField_TransferDirection_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpPeripheryTransferFundField_DepartmentID_get, _traderapi.CTORATstpPeripheryTransferFundField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpPeripheryTransferFundField_AccountID_get, _traderapi.CTORATstpPeripheryTransferFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpPeripheryTransferFundField_CurrencyID_get, _traderapi.CTORATstpPeripheryTransferFundField_CurrencyID_set)

	# 转移金额
    Amount = property(_traderapi.CTORATstpPeripheryTransferFundField_Amount_get, _traderapi.CTORATstpPeripheryTransferFundField_Amount_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPeripheryTransferFundField_InvestorID_get, _traderapi.CTORATstpPeripheryTransferFundField_InvestorID_set)

	# 资金调拨原因
    TransferReason = property(_traderapi.CTORATstpPeripheryTransferFundField_TransferReason_get, _traderapi.CTORATstpPeripheryTransferFundField_TransferReason_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpPeripheryTransferFundField_TransferStatus_get, _traderapi.CTORATstpPeripheryTransferFundField_TransferStatus_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpPeripheryTransferFundField_OperateDate_get, _traderapi.CTORATstpPeripheryTransferFundField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpPeripheryTransferFundField_OperateTime_get, _traderapi.CTORATstpPeripheryTransferFundField_OperateTime_set)

	# 冲正日期
    RepealDate = property(_traderapi.CTORATstpPeripheryTransferFundField_RepealDate_get, _traderapi.CTORATstpPeripheryTransferFundField_RepealDate_set)

	# 冲正时间
    RepealTime = property(_traderapi.CTORATstpPeripheryTransferFundField_RepealTime_get, _traderapi.CTORATstpPeripheryTransferFundField_RepealTime_set)

	# 冲正原因
    RepealReason = property(_traderapi.CTORATstpPeripheryTransferFundField_RepealReason_get, _traderapi.CTORATstpPeripheryTransferFundField_RepealReason_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpPeripheryTransferFundField_StatusMsg_get, _traderapi.CTORATstpPeripheryTransferFundField_StatusMsg_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPeripheryTransferFundField_BusinessUnitID_get, _traderapi.CTORATstpPeripheryTransferFundField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpPeripheryTransferFundField_swiginit(self, _traderapi.new_CTORATstpPeripheryTransferFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPeripheryTransferFundField

# Register CTORATstpPeripheryTransferFundField in _traderapi:
_traderapi.CTORATstpPeripheryTransferFundField_swigregister(CTORATstpPeripheryTransferFundField)




#########################################查询集中交易系统资金请求############################################
class CTORATstpReqInquiryJZFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpReqInquiryJZFundField_AccountID_get, _traderapi.CTORATstpReqInquiryJZFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpReqInquiryJZFundField_CurrencyID_get, _traderapi.CTORATstpReqInquiryJZFundField_CurrencyID_set)

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqInquiryJZFundField_UserRequestID_get, _traderapi.CTORATstpReqInquiryJZFundField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpReqInquiryJZFundField_DepartmentID_get, _traderapi.CTORATstpReqInquiryJZFundField_DepartmentID_set)

    def __init__(self):
        _traderapi.CTORATstpReqInquiryJZFundField_swiginit(self, _traderapi.new_CTORATstpReqInquiryJZFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqInquiryJZFundField

# Register CTORATstpReqInquiryJZFundField in _traderapi:
_traderapi.CTORATstpReqInquiryJZFundField_swigregister(CTORATstpReqInquiryJZFundField)




#########################################查询集中交易系统资金响应############################################
class CTORATstpRspInquiryJZFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpRspInquiryJZFundField_AccountID_get, _traderapi.CTORATstpRspInquiryJZFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpRspInquiryJZFundField_CurrencyID_get, _traderapi.CTORATstpRspInquiryJZFundField_CurrencyID_set)

	# 可用金额
    UsefulMoney = property(_traderapi.CTORATstpRspInquiryJZFundField_UsefulMoney_get, _traderapi.CTORATstpRspInquiryJZFundField_UsefulMoney_set)

	# 可取额度
    FetchLimit = property(_traderapi.CTORATstpRspInquiryJZFundField_FetchLimit_get, _traderapi.CTORATstpRspInquiryJZFundField_FetchLimit_set)

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspInquiryJZFundField_UserRequestID_get, _traderapi.CTORATstpRspInquiryJZFundField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpRspInquiryJZFundField_DepartmentID_get, _traderapi.CTORATstpRspInquiryJZFundField_DepartmentID_set)

    def __init__(self):
        _traderapi.CTORATstpRspInquiryJZFundField_swiginit(self, _traderapi.new_CTORATstpRspInquiryJZFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInquiryJZFundField

# Register CTORATstpRspInquiryJZFundField in _traderapi:
_traderapi.CTORATstpRspInquiryJZFundField_swigregister(CTORATstpRspInquiryJZFundField)




#########################################查询银行账户余额请求############################################
class CTORATstpReqInquiryBankAccountFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_UserRequestID_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_DepartmentID_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_AccountID_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_CurrencyID_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_CurrencyID_set)

	# 银行代码
    BankID = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_BankID_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_BankID_set)

	# 银行密码
    BankPassword = property(_traderapi.CTORATstpReqInquiryBankAccountFundField_BankPassword_get, _traderapi.CTORATstpReqInquiryBankAccountFundField_BankPassword_set)

    def __init__(self):
        _traderapi.CTORATstpReqInquiryBankAccountFundField_swiginit(self, _traderapi.new_CTORATstpReqInquiryBankAccountFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqInquiryBankAccountFundField

# Register CTORATstpReqInquiryBankAccountFundField in _traderapi:
_traderapi.CTORATstpReqInquiryBankAccountFundField_swigregister(CTORATstpReqInquiryBankAccountFundField)




#########################################查询银行账户余额响应############################################
class CTORATstpRspInquiryBankAccountFundField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_UserRequestID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_DepartmentID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_AccountID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_CurrencyID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_CurrencyID_set)

	# 银行代码
    BankID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_BankID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_BankID_set)

	# 签约银行账户
    BankAccountID = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_BankAccountID_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_BankAccountID_set)

	# 账户余额
    Balance = property(_traderapi.CTORATstpRspInquiryBankAccountFundField_Balance_get, _traderapi.CTORATstpRspInquiryBankAccountFundField_Balance_set)

    def __init__(self):
        _traderapi.CTORATstpRspInquiryBankAccountFundField_swiginit(self, _traderapi.new_CTORATstpRspInquiryBankAccountFundField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInquiryBankAccountFundField

# Register CTORATstpRspInquiryBankAccountFundField in _traderapi:
_traderapi.CTORATstpRspInquiryBankAccountFundField_swigregister(CTORATstpRspInquiryBankAccountFundField)




#########################################交易通知############################################
class CTORATstpTradingNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 通知流水号
    NoticeSerial = property(_traderapi.CTORATstpTradingNoticeField_NoticeSerial_get, _traderapi.CTORATstpTradingNoticeField_NoticeSerial_set)

	# 通知日期
    InsertDate = property(_traderapi.CTORATstpTradingNoticeField_InsertDate_get, _traderapi.CTORATstpTradingNoticeField_InsertDate_set)

	# 通知时间
    InsertTime = property(_traderapi.CTORATstpTradingNoticeField_InsertTime_get, _traderapi.CTORATstpTradingNoticeField_InsertTime_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpTradingNoticeField_InvestorID_get, _traderapi.CTORATstpTradingNoticeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpTradingNoticeField_BusinessUnitID_get, _traderapi.CTORATstpTradingNoticeField_BusinessUnitID_set)

	# 通知消息内容
    Content = property(_traderapi.CTORATstpTradingNoticeField_Content_get, _traderapi.CTORATstpTradingNoticeField_Content_set)

	# 操作员
    OperatorID = property(_traderapi.CTORATstpTradingNoticeField_OperatorID_get, _traderapi.CTORATstpTradingNoticeField_OperatorID_set)

    def __init__(self):
        _traderapi.CTORATstpTradingNoticeField_swiginit(self, _traderapi.new_CTORATstpTradingNoticeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTradingNoticeField

# Register CTORATstpTradingNoticeField in _traderapi:
_traderapi.CTORATstpTradingNoticeField_swigregister(CTORATstpTradingNoticeField)




#########################################查询最大报单量请求############################################
class CTORATstpReqInquiryMaxOrderVolumeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_UserRequestID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_ExchangeID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_SecurityID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_SecurityID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_InvestorID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_BusinessUnitID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_ShareholderID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_ShareholderID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_Direction_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_Direction_set)

	# 报单价格条件
    OrderPriceType = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_OrderPriceType_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_TimeCondition_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_VolumeCondition_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_VolumeCondition_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_LimitPrice_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_LimitPrice_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_LotType_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_LotType_set)

	# 最大委托手数
    MaxVolume = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_MaxVolume_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_MaxVolume_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）（两融专用）
    CreditDebtID = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_CreditDebtID_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_CreditDebtID_set)

	# 头寸类型（两融专用）
    CreditQuotaType = property(_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_CreditQuotaType_get, _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_CreditQuotaType_set)

    def __init__(self):
        _traderapi.CTORATstpReqInquiryMaxOrderVolumeField_swiginit(self, _traderapi.new_CTORATstpReqInquiryMaxOrderVolumeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqInquiryMaxOrderVolumeField

# Register CTORATstpReqInquiryMaxOrderVolumeField in _traderapi:
_traderapi.CTORATstpReqInquiryMaxOrderVolumeField_swigregister(CTORATstpReqInquiryMaxOrderVolumeField)




#########################################查询最大报单量响应############################################
class CTORATstpRspInquiryMaxOrderVolumeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_UserRequestID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_ExchangeID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_SecurityID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_SecurityID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_InvestorID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_BusinessUnitID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_ShareholderID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_ShareholderID_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_Direction_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_Direction_set)

	# 报单价格条件
    OrderPriceType = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_OrderPriceType_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_OrderPriceType_set)

	# 有效期类型
    TimeCondition = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_TimeCondition_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_TimeCondition_set)

	# 成交量类型
    VolumeCondition = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_VolumeCondition_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_VolumeCondition_set)

	# 价格
    LimitPrice = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_LimitPrice_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_LimitPrice_set)

	# 港股通订单数量类型
    LotType = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_LotType_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_LotType_set)

	# 最大委托手数
    MaxVolume = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_MaxVolume_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_MaxVolume_set)

	# 指定偿还的信用负债编号（该字段置空表示不指定偿还）（两融专用）
    CreditDebtID = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_CreditDebtID_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_CreditDebtID_set)

	# 头寸类型（两融专用）
    CreditQuotaType = property(_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_CreditQuotaType_get, _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_CreditQuotaType_set)

    def __init__(self):
        _traderapi.CTORATstpRspInquiryMaxOrderVolumeField_swiginit(self, _traderapi.new_CTORATstpRspInquiryMaxOrderVolumeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInquiryMaxOrderVolumeField

# Register CTORATstpRspInquiryMaxOrderVolumeField in _traderapi:
_traderapi.CTORATstpRspInquiryMaxOrderVolumeField_swigregister(CTORATstpRspInquiryMaxOrderVolumeField)




#########################################交易成交集中度############################################
class CTORATstpInquiryTradeConcentrationField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_UserRequestID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_ExchangeID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_MarketID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_SecurityID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_SecurityID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_InvestorID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_BusinessUnitID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_BusinessUnitID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_AccountID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_AccountID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpInquiryTradeConcentrationField_ShareholderID_get, _traderapi.CTORATstpInquiryTradeConcentrationField_ShareholderID_set)

	# 投资者成交量/成交总量
    ConcentrationRatio1 = property(_traderapi.CTORATstpInquiryTradeConcentrationField_ConcentrationRatio1_get, _traderapi.CTORATstpInquiryTradeConcentrationField_ConcentrationRatio1_set)

	# 投资者成交金额/成交总金额
    ConcentrationRatio2 = property(_traderapi.CTORATstpInquiryTradeConcentrationField_ConcentrationRatio2_get, _traderapi.CTORATstpInquiryTradeConcentrationField_ConcentrationRatio2_set)

    def __init__(self):
        _traderapi.CTORATstpInquiryTradeConcentrationField_swiginit(self, _traderapi.new_CTORATstpInquiryTradeConcentrationField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInquiryTradeConcentrationField

# Register CTORATstpInquiryTradeConcentrationField in _traderapi:
_traderapi.CTORATstpInquiryTradeConcentrationField_swigregister(CTORATstpInquiryTradeConcentrationField)




#########################################请求修改开仓成本############################################
class CTORATstpReqModifyOpenPosCostField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_UserRequestID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_UserRequestID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_ExchangeID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_InvestorID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_BusinessUnitID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_ShareholderID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpReqModifyOpenPosCostField_SecurityID_get, _traderapi.CTORATstpReqModifyOpenPosCostField_SecurityID_set)

	# 开仓成本
    OpenPosCost = property(_traderapi.CTORATstpReqModifyOpenPosCostField_OpenPosCost_get, _traderapi.CTORATstpReqModifyOpenPosCostField_OpenPosCost_set)

    def __init__(self):
        _traderapi.CTORATstpReqModifyOpenPosCostField_swiginit(self, _traderapi.new_CTORATstpReqModifyOpenPosCostField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqModifyOpenPosCostField

# Register CTORATstpReqModifyOpenPosCostField in _traderapi:
_traderapi.CTORATstpReqModifyOpenPosCostField_swigregister(CTORATstpReqModifyOpenPosCostField)




#########################################录入节点资金分配信息############################################
class CTORATstpInputNodeFundAssignmentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpInputNodeFundAssignmentField_UserRequestID_get, _traderapi.CTORATstpInputNodeFundAssignmentField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpInputNodeFundAssignmentField_DepartmentID_get, _traderapi.CTORATstpInputNodeFundAssignmentField_DepartmentID_set)

	# 资金账号
    AccountID = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AccountID_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpInputNodeFundAssignmentField_CurrencyID_get, _traderapi.CTORATstpInputNodeFundAssignmentField_CurrencyID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInputNodeFundAssignmentField_InvestorID_get, _traderapi.CTORATstpInputNodeFundAssignmentField_InvestorID_set)

	# 节点编号1
    NodeID1 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_NodeID1_get, _traderapi.CTORATstpInputNodeFundAssignmentField_NodeID1_set)

	# 资金比例1
    AmtRatio1 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio1_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio1_set)

	# 节点编号2
    NodeID2 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_NodeID2_get, _traderapi.CTORATstpInputNodeFundAssignmentField_NodeID2_set)

	# 资金比例2
    AmtRatio2 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio2_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio2_set)

	# 节点编号3
    NodeID3 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_NodeID3_get, _traderapi.CTORATstpInputNodeFundAssignmentField_NodeID3_set)

	# 资金比例3
    AmtRatio3 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio3_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio3_set)

	# 节点编号4
    NodeID4 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_NodeID4_get, _traderapi.CTORATstpInputNodeFundAssignmentField_NodeID4_set)

	# 资金比例4
    AmtRatio4 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio4_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio4_set)

	# 节点编号5
    NodeID5 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_NodeID5_get, _traderapi.CTORATstpInputNodeFundAssignmentField_NodeID5_set)

	# 资金比例5
    AmtRatio5 = property(_traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio5_get, _traderapi.CTORATstpInputNodeFundAssignmentField_AmtRatio5_set)

    def __init__(self):
        _traderapi.CTORATstpInputNodeFundAssignmentField_swiginit(self, _traderapi.new_CTORATstpInputNodeFundAssignmentField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInputNodeFundAssignmentField

# Register CTORATstpInputNodeFundAssignmentField in _traderapi:
_traderapi.CTORATstpInputNodeFundAssignmentField_swigregister(CTORATstpInputNodeFundAssignmentField)




#########################################查询节点资金分配比例请求############################################
class CTORATstpReqInquiryNodeFundAssignmentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_DepartmentID_get, _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_DepartmentID_set)

	# 资金账号
    AccountID = property(_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_AccountID_get, _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_CurrencyID_get, _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_CurrencyID_set)

	# 节点编号
    NodeID = property(_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_NodeID_get, _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_NodeID_set)

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_UserRequestID_get, _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_UserRequestID_set)

    def __init__(self):
        _traderapi.CTORATstpReqInquiryNodeFundAssignmentField_swiginit(self, _traderapi.new_CTORATstpReqInquiryNodeFundAssignmentField())
    __swig_destroy__ = _traderapi.delete_CTORATstpReqInquiryNodeFundAssignmentField

# Register CTORATstpReqInquiryNodeFundAssignmentField in _traderapi:
_traderapi.CTORATstpReqInquiryNodeFundAssignmentField_swigregister(CTORATstpReqInquiryNodeFundAssignmentField)




#########################################查询节点资金分配比例响应############################################
class CTORATstpRspInquiryNodeFundAssignmentField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_UserRequestID_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_UserRequestID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_DepartmentID_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_DepartmentID_set)

	# 资金账号
    AccountID = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AccountID_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_CurrencyID_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_CurrencyID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_InvestorID_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_InvestorID_set)

	# 节点编号1
    NodeID1 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID1_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID1_set)

	# 资金比例1
    AmtRatio1 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio1_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio1_set)

	# 节点编号2
    NodeID2 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID2_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID2_set)

	# 资金比例2
    AmtRatio2 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio2_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio2_set)

	# 节点编号3
    NodeID3 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID3_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID3_set)

	# 资金比例3
    AmtRatio3 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio3_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio3_set)

	# 节点编号4
    NodeID4 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID4_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID4_set)

	# 资金比例4
    AmtRatio4 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio4_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio4_set)

	# 节点编号5
    NodeID5 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID5_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_NodeID5_set)

	# 资金比例5
    AmtRatio5 = property(_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio5_get, _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_AmtRatio5_set)

    def __init__(self):
        _traderapi.CTORATstpRspInquiryNodeFundAssignmentField_swiginit(self, _traderapi.new_CTORATstpRspInquiryNodeFundAssignmentField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRspInquiryNodeFundAssignmentField

# Register CTORATstpRspInquiryNodeFundAssignmentField in _traderapi:
_traderapi.CTORATstpRspInquiryNodeFundAssignmentField_swigregister(CTORATstpRspInquiryNodeFundAssignmentField)




#########################################查询交易所############################################
class CTORATstpQryExchangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryExchangeField_ExchangeID_get, _traderapi.CTORATstpQryExchangeField_ExchangeID_set)

    def __init__(self):
        _traderapi.CTORATstpQryExchangeField_swiginit(self, _traderapi.new_CTORATstpQryExchangeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryExchangeField

# Register CTORATstpQryExchangeField in _traderapi:
_traderapi.CTORATstpQryExchangeField_swigregister(CTORATstpQryExchangeField)




#########################################交易所############################################
class CTORATstpExchangeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpExchangeField_ExchangeID_get, _traderapi.CTORATstpExchangeField_ExchangeID_set)

	# 交易所名称
    ExchangeName = property(_traderapi.CTORATstpExchangeField_ExchangeName_get, _traderapi.CTORATstpExchangeField_ExchangeName_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpExchangeField_TradingDay_get, _traderapi.CTORATstpExchangeField_TradingDay_set)

	# 数据同步状态
    DataSyncStatus = property(_traderapi.CTORATstpExchangeField_DataSyncStatus_get, _traderapi.CTORATstpExchangeField_DataSyncStatus_set)

    def __init__(self):
        _traderapi.CTORATstpExchangeField_swiginit(self, _traderapi.new_CTORATstpExchangeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpExchangeField

# Register CTORATstpExchangeField in _traderapi:
_traderapi.CTORATstpExchangeField_swigregister(CTORATstpExchangeField)




#########################################查询证券信息############################################
class CTORATstpQrySecurityField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQrySecurityField_ExchangeID_get, _traderapi.CTORATstpQrySecurityField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQrySecurityField_SecurityID_get, _traderapi.CTORATstpQrySecurityField_SecurityID_set)

	# 产品代码
    ProductID = property(_traderapi.CTORATstpQrySecurityField_ProductID_get, _traderapi.CTORATstpQrySecurityField_ProductID_set)

    def __init__(self):
        _traderapi.CTORATstpQrySecurityField_swiginit(self, _traderapi.new_CTORATstpQrySecurityField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQrySecurityField

# Register CTORATstpQrySecurityField in _traderapi:
_traderapi.CTORATstpQrySecurityField_swigregister(CTORATstpQrySecurityField)




#########################################证券信息############################################
class CTORATstpSecurityField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易日
    TradingDay = property(_traderapi.CTORATstpSecurityField_TradingDay_get, _traderapi.CTORATstpSecurityField_TradingDay_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpSecurityField_ExchangeID_get, _traderapi.CTORATstpSecurityField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpSecurityField_SecurityID_get, _traderapi.CTORATstpSecurityField_SecurityID_set)

	# 证券名称
    SecurityName = property(_traderapi.CTORATstpSecurityField_SecurityName_get, _traderapi.CTORATstpSecurityField_SecurityName_set)

	# 证券名称(短)
    ShortSecurityName = property(_traderapi.CTORATstpSecurityField_ShortSecurityName_get, _traderapi.CTORATstpSecurityField_ShortSecurityName_set)

	# 基础证券代码
    UnderlyingSecurityID = property(_traderapi.CTORATstpSecurityField_UnderlyingSecurityID_get, _traderapi.CTORATstpSecurityField_UnderlyingSecurityID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpSecurityField_MarketID_get, _traderapi.CTORATstpSecurityField_MarketID_set)

	# 产品代码
    ProductID = property(_traderapi.CTORATstpSecurityField_ProductID_get, _traderapi.CTORATstpSecurityField_ProductID_set)

	# 证券类别
    SecurityType = property(_traderapi.CTORATstpSecurityField_SecurityType_get, _traderapi.CTORATstpSecurityField_SecurityType_set)

	# 申报单位
    OrderUnit = property(_traderapi.CTORATstpSecurityField_OrderUnit_get, _traderapi.CTORATstpSecurityField_OrderUnit_set)

	# 限价买入交易单位
    LimitBuyTradingUnit = property(_traderapi.CTORATstpSecurityField_LimitBuyTradingUnit_get, _traderapi.CTORATstpSecurityField_LimitBuyTradingUnit_set)

	# 限价单买最大下单量
    MaxLimitOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MaxLimitOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MaxLimitOrderBuyVolume_set)

	# 限价单买最小下单量
    MinLimitOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MinLimitOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MinLimitOrderBuyVolume_set)

	# 限价卖出交易单位
    LimitSellTradingUnit = property(_traderapi.CTORATstpSecurityField_LimitSellTradingUnit_get, _traderapi.CTORATstpSecurityField_LimitSellTradingUnit_set)

	# 限价单卖最大下单量
    MaxLimitOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MaxLimitOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MaxLimitOrderSellVolume_set)

	# 限价单卖最小下单量
    MinLimitOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MinLimitOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MinLimitOrderSellVolume_set)

	# 市价买入交易单位
    MarketBuyTradingUnit = property(_traderapi.CTORATstpSecurityField_MarketBuyTradingUnit_get, _traderapi.CTORATstpSecurityField_MarketBuyTradingUnit_set)

	# 市价单买最大下单量
    MaxMarketOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MaxMarketOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MaxMarketOrderBuyVolume_set)

	# 市价单买最小下单量
    MinMarketOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MinMarketOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MinMarketOrderBuyVolume_set)

	# 市价卖出交易单位
    MarketSellTradingUnit = property(_traderapi.CTORATstpSecurityField_MarketSellTradingUnit_get, _traderapi.CTORATstpSecurityField_MarketSellTradingUnit_set)

	# 市价单卖最大下单量
    MaxMarketOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MaxMarketOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MaxMarketOrderSellVolume_set)

	# 市价单卖最小下单量
    MinMarketOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MinMarketOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MinMarketOrderSellVolume_set)

	# 盘后定价买入交易单位
    FixPriceBuyTradingUnit = property(_traderapi.CTORATstpSecurityField_FixPriceBuyTradingUnit_get, _traderapi.CTORATstpSecurityField_FixPriceBuyTradingUnit_set)

	# 盘后定价买最大下单量
    MaxFixPriceOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MaxFixPriceOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MaxFixPriceOrderBuyVolume_set)

	# 盘后定价买最小下单量
    MinFixPriceOrderBuyVolume = property(_traderapi.CTORATstpSecurityField_MinFixPriceOrderBuyVolume_get, _traderapi.CTORATstpSecurityField_MinFixPriceOrderBuyVolume_set)

	# 盘后定价卖出交易单位
    FixPriceSellTradingUnit = property(_traderapi.CTORATstpSecurityField_FixPriceSellTradingUnit_get, _traderapi.CTORATstpSecurityField_FixPriceSellTradingUnit_set)

	# 盘后定价卖最大下单量
    MaxFixPriceOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MaxFixPriceOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MaxFixPriceOrderSellVolume_set)

	# 盘后定价卖最小下单量
    MinFixPriceOrderSellVolume = property(_traderapi.CTORATstpSecurityField_MinFixPriceOrderSellVolume_get, _traderapi.CTORATstpSecurityField_MinFixPriceOrderSellVolume_set)

	# 数量乘数
    VolumeMultiple = property(_traderapi.CTORATstpSecurityField_VolumeMultiple_get, _traderapi.CTORATstpSecurityField_VolumeMultiple_set)

	# 最小变动价位
    PriceTick = property(_traderapi.CTORATstpSecurityField_PriceTick_get, _traderapi.CTORATstpSecurityField_PriceTick_set)

	# 上市日
    OpenDate = property(_traderapi.CTORATstpSecurityField_OpenDate_get, _traderapi.CTORATstpSecurityField_OpenDate_set)

	# 面值
    ParValue = property(_traderapi.CTORATstpSecurityField_ParValue_get, _traderapi.CTORATstpSecurityField_ParValue_set)

	# 证券状态
    SecurityStatus = property(_traderapi.CTORATstpSecurityField_SecurityStatus_get, _traderapi.CTORATstpSecurityField_SecurityStatus_set)

	# 债券应计利息
    BondInterest = property(_traderapi.CTORATstpSecurityField_BondInterest_get, _traderapi.CTORATstpSecurityField_BondInterest_set)

	# 折算率
    ConversionRate = property(_traderapi.CTORATstpSecurityField_ConversionRate_get, _traderapi.CTORATstpSecurityField_ConversionRate_set)

	# 总股本
    TotalEquity = property(_traderapi.CTORATstpSecurityField_TotalEquity_get, _traderapi.CTORATstpSecurityField_TotalEquity_set)

	# 流通股本
    CirculationEquity = property(_traderapi.CTORATstpSecurityField_CirculationEquity_get, _traderapi.CTORATstpSecurityField_CirculationEquity_set)

	# 是否限制涨跌停板价
    bPriceLimit = property(_traderapi.CTORATstpSecurityField_bPriceLimit_get, _traderapi.CTORATstpSecurityField_bPriceLimit_set)

	# 昨收盘价
    PreClosePrice = property(_traderapi.CTORATstpSecurityField_PreClosePrice_get, _traderapi.CTORATstpSecurityField_PreClosePrice_set)

	# 涨停板价
    UpperLimitPrice = property(_traderapi.CTORATstpSecurityField_UpperLimitPrice_get, _traderapi.CTORATstpSecurityField_UpperLimitPrice_set)

	# 跌停板价
    LowerLimitPrice = property(_traderapi.CTORATstpSecurityField_LowerLimitPrice_get, _traderapi.CTORATstpSecurityField_LowerLimitPrice_set)

    def __init__(self):
        _traderapi.CTORATstpSecurityField_swiginit(self, _traderapi.new_CTORATstpSecurityField())
    __swig_destroy__ = _traderapi.delete_CTORATstpSecurityField

# Register CTORATstpSecurityField in _traderapi:
_traderapi.CTORATstpSecurityField_swigregister(CTORATstpSecurityField)




#########################################查询新股信息############################################
class CTORATstpQryIPOInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryIPOInfoField_ExchangeID_get, _traderapi.CTORATstpQryIPOInfoField_ExchangeID_set)

	# 申购代码
    SecurityID = property(_traderapi.CTORATstpQryIPOInfoField_SecurityID_get, _traderapi.CTORATstpQryIPOInfoField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryIPOInfoField_swiginit(self, _traderapi.new_CTORATstpQryIPOInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryIPOInfoField

# Register CTORATstpQryIPOInfoField in _traderapi:
_traderapi.CTORATstpQryIPOInfoField_swigregister(CTORATstpQryIPOInfoField)




#########################################新股信息############################################
class CTORATstpIPOInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpIPOInfoField_ExchangeID_get, _traderapi.CTORATstpIPOInfoField_ExchangeID_set)

	# 申购代码
    SecurityID = property(_traderapi.CTORATstpIPOInfoField_SecurityID_get, _traderapi.CTORATstpIPOInfoField_SecurityID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpIPOInfoField_MarketID_get, _traderapi.CTORATstpIPOInfoField_MarketID_set)

	# 产品代码
    ProductID = property(_traderapi.CTORATstpIPOInfoField_ProductID_get, _traderapi.CTORATstpIPOInfoField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpIPOInfoField_SecurityType_get, _traderapi.CTORATstpIPOInfoField_SecurityType_set)

	# 最小申购价格
    MinPrice = property(_traderapi.CTORATstpIPOInfoField_MinPrice_get, _traderapi.CTORATstpIPOInfoField_MinPrice_set)

	# 币种代码
    CurrencyID = property(_traderapi.CTORATstpIPOInfoField_CurrencyID_get, _traderapi.CTORATstpIPOInfoField_CurrencyID_set)

	# 申购证券名称
    SecurityName = property(_traderapi.CTORATstpIPOInfoField_SecurityName_get, _traderapi.CTORATstpIPOInfoField_SecurityName_set)

	# 新股证券代码
    UnderlyingSecurityID = property(_traderapi.CTORATstpIPOInfoField_UnderlyingSecurityID_get, _traderapi.CTORATstpIPOInfoField_UnderlyingSecurityID_set)

	# 新股证券名称
    UnderlyingSecurityName = property(_traderapi.CTORATstpIPOInfoField_UnderlyingSecurityName_get, _traderapi.CTORATstpIPOInfoField_UnderlyingSecurityName_set)

	# 网上申购最小数量
    MinVolume = property(_traderapi.CTORATstpIPOInfoField_MinVolume_get, _traderapi.CTORATstpIPOInfoField_MinVolume_set)

	# 网上申购最大数量
    MaxVolume = property(_traderapi.CTORATstpIPOInfoField_MaxVolume_get, _traderapi.CTORATstpIPOInfoField_MaxVolume_set)

	# 网上申购单位数量
    VolumeUnit = property(_traderapi.CTORATstpIPOInfoField_VolumeUnit_get, _traderapi.CTORATstpIPOInfoField_VolumeUnit_set)

	# 发行方式
    IssueMode = property(_traderapi.CTORATstpIPOInfoField_IssueMode_get, _traderapi.CTORATstpIPOInfoField_IssueMode_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpIPOInfoField_TradingDay_get, _traderapi.CTORATstpIPOInfoField_TradingDay_set)

	# 最大申购价格
    MaxPrice = property(_traderapi.CTORATstpIPOInfoField_MaxPrice_get, _traderapi.CTORATstpIPOInfoField_MaxPrice_set)

    def __init__(self):
        _traderapi.CTORATstpIPOInfoField_swiginit(self, _traderapi.new_CTORATstpIPOInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpIPOInfoField

# Register CTORATstpIPOInfoField in _traderapi:
_traderapi.CTORATstpIPOInfoField_swigregister(CTORATstpIPOInfoField)




#########################################查询用户############################################
class CTORATstpQryUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户代码
    UserID = property(_traderapi.CTORATstpQryUserField_UserID_get, _traderapi.CTORATstpQryUserField_UserID_set)

	# 用户类型
    UserType = property(_traderapi.CTORATstpQryUserField_UserType_get, _traderapi.CTORATstpQryUserField_UserType_set)

    def __init__(self):
        _traderapi.CTORATstpQryUserField_swiginit(self, _traderapi.new_CTORATstpQryUserField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryUserField

# Register CTORATstpQryUserField in _traderapi:
_traderapi.CTORATstpQryUserField_swigregister(CTORATstpQryUserField)




#########################################用户############################################
class CTORATstpUserField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户代码
    UserID = property(_traderapi.CTORATstpUserField_UserID_get, _traderapi.CTORATstpUserField_UserID_set)

	# 用户名称
    UserName = property(_traderapi.CTORATstpUserField_UserName_get, _traderapi.CTORATstpUserField_UserName_set)

	# 用户类型
    UserType = property(_traderapi.CTORATstpUserField_UserType_get, _traderapi.CTORATstpUserField_UserType_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpUserField_DepartmentID_get, _traderapi.CTORATstpUserField_DepartmentID_set)

	# 登录限制数
    LoginLimit = property(_traderapi.CTORATstpUserField_LoginLimit_get, _traderapi.CTORATstpUserField_LoginLimit_set)

	# 登录状态
    LoginStatus = property(_traderapi.CTORATstpUserField_LoginStatus_get, _traderapi.CTORATstpUserField_LoginStatus_set)

	# 开户日期
    OpenDate = property(_traderapi.CTORATstpUserField_OpenDate_get, _traderapi.CTORATstpUserField_OpenDate_set)

	# 销户日期
    CloseDate = property(_traderapi.CTORATstpUserField_CloseDate_get, _traderapi.CTORATstpUserField_CloseDate_set)

	# 报单流控
    OrderInsertCommFlux = property(_traderapi.CTORATstpUserField_OrderInsertCommFlux_get, _traderapi.CTORATstpUserField_OrderInsertCommFlux_set)

	# 撤单流控
    OrderActionCommFlux = property(_traderapi.CTORATstpUserField_OrderActionCommFlux_get, _traderapi.CTORATstpUserField_OrderActionCommFlux_set)

    def __init__(self):
        _traderapi.CTORATstpUserField_swiginit(self, _traderapi.new_CTORATstpUserField())
    __swig_destroy__ = _traderapi.delete_CTORATstpUserField

# Register CTORATstpUserField in _traderapi:
_traderapi.CTORATstpUserField_swigregister(CTORATstpUserField)




#########################################查询投资者############################################
class CTORATstpQryInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryInvestorField_InvestorID_get, _traderapi.CTORATstpQryInvestorField_InvestorID_set)

    def __init__(self):
        _traderapi.CTORATstpQryInvestorField_swiginit(self, _traderapi.new_CTORATstpQryInvestorField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryInvestorField

# Register CTORATstpQryInvestorField in _traderapi:
_traderapi.CTORATstpQryInvestorField_swigregister(CTORATstpQryInvestorField)




#########################################投资者############################################
class CTORATstpInvestorField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInvestorField_InvestorID_get, _traderapi.CTORATstpInvestorField_InvestorID_set)

	# 投资者类型
    InvestorType = property(_traderapi.CTORATstpInvestorField_InvestorType_get, _traderapi.CTORATstpInvestorField_InvestorType_set)

	# 投资者名称
    InvestorName = property(_traderapi.CTORATstpInvestorField_InvestorName_get, _traderapi.CTORATstpInvestorField_InvestorName_set)

	# 证件类型
    IdCardType = property(_traderapi.CTORATstpInvestorField_IdCardType_get, _traderapi.CTORATstpInvestorField_IdCardType_set)

	# 证件号码
    IdCardNo = property(_traderapi.CTORATstpInvestorField_IdCardNo_get, _traderapi.CTORATstpInvestorField_IdCardNo_set)

	# 开户日期
    OpenDate = property(_traderapi.CTORATstpInvestorField_OpenDate_get, _traderapi.CTORATstpInvestorField_OpenDate_set)

	# 销户日期
    CloseDate = property(_traderapi.CTORATstpInvestorField_CloseDate_get, _traderapi.CTORATstpInvestorField_CloseDate_set)

	# 交易状态
    TradingStatus = property(_traderapi.CTORATstpInvestorField_TradingStatus_get, _traderapi.CTORATstpInvestorField_TradingStatus_set)

	# 委托方式
    Operways = property(_traderapi.CTORATstpInvestorField_Operways_get, _traderapi.CTORATstpInvestorField_Operways_set)

	# 手机
    Mobile = property(_traderapi.CTORATstpInvestorField_Mobile_get, _traderapi.CTORATstpInvestorField_Mobile_set)

	# 联系电话
    Telephone = property(_traderapi.CTORATstpInvestorField_Telephone_get, _traderapi.CTORATstpInvestorField_Telephone_set)

	# 电子邮件
    Email = property(_traderapi.CTORATstpInvestorField_Email_get, _traderapi.CTORATstpInvestorField_Email_set)

	# 传真
    Fax = property(_traderapi.CTORATstpInvestorField_Fax_get, _traderapi.CTORATstpInvestorField_Fax_set)

	# 通讯地址
    Address = property(_traderapi.CTORATstpInvestorField_Address_get, _traderapi.CTORATstpInvestorField_Address_set)

	# 邮政编码
    ZipCode = property(_traderapi.CTORATstpInvestorField_ZipCode_get, _traderapi.CTORATstpInvestorField_ZipCode_set)

	# 专业投资者类别
    ProfInvestorType = property(_traderapi.CTORATstpInvestorField_ProfInvestorType_get, _traderapi.CTORATstpInvestorField_ProfInvestorType_set)

	# 套餐类型(两融专用)
    PlanType = property(_traderapi.CTORATstpInvestorField_PlanType_get, _traderapi.CTORATstpInvestorField_PlanType_set)

	# 是否允许投资者自切套餐(两融专用)
    AllowSelfSwitchPlan = property(_traderapi.CTORATstpInvestorField_AllowSelfSwitchPlan_get, _traderapi.CTORATstpInvestorField_AllowSelfSwitchPlan_set)

	# 备注
    Remark = property(_traderapi.CTORATstpInvestorField_Remark_get, _traderapi.CTORATstpInvestorField_Remark_set)

    def __init__(self):
        _traderapi.CTORATstpInvestorField_swiginit(self, _traderapi.new_CTORATstpInvestorField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInvestorField

# Register CTORATstpInvestorField in _traderapi:
_traderapi.CTORATstpInvestorField_swigregister(CTORATstpInvestorField)




#########################################查询交易股东账户############################################
class CTORATstpQryShareholderAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryShareholderAccountField_InvestorID_get, _traderapi.CTORATstpQryShareholderAccountField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryShareholderAccountField_ExchangeID_get, _traderapi.CTORATstpQryShareholderAccountField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryShareholderAccountField_MarketID_get, _traderapi.CTORATstpQryShareholderAccountField_MarketID_set)

	# 股东账户账户代码
    ShareholderID = property(_traderapi.CTORATstpQryShareholderAccountField_ShareholderID_get, _traderapi.CTORATstpQryShareholderAccountField_ShareholderID_set)

	# 股东账户类型
    ShareholderIDType = property(_traderapi.CTORATstpQryShareholderAccountField_ShareholderIDType_get, _traderapi.CTORATstpQryShareholderAccountField_ShareholderIDType_set)

    def __init__(self):
        _traderapi.CTORATstpQryShareholderAccountField_swiginit(self, _traderapi.new_CTORATstpQryShareholderAccountField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryShareholderAccountField

# Register CTORATstpQryShareholderAccountField in _traderapi:
_traderapi.CTORATstpQryShareholderAccountField_swigregister(CTORATstpQryShareholderAccountField)




#########################################交易股东账户############################################
class CTORATstpShareholderAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpShareholderAccountField_InvestorID_get, _traderapi.CTORATstpShareholderAccountField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpShareholderAccountField_ExchangeID_get, _traderapi.CTORATstpShareholderAccountField_ExchangeID_set)

	# 客户代码
    ShareholderID = property(_traderapi.CTORATstpShareholderAccountField_ShareholderID_get, _traderapi.CTORATstpShareholderAccountField_ShareholderID_set)

	# 股东账户类型
    ShareholderIDType = property(_traderapi.CTORATstpShareholderAccountField_ShareholderIDType_get, _traderapi.CTORATstpShareholderAccountField_ShareholderIDType_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpShareholderAccountField_MarketID_get, _traderapi.CTORATstpShareholderAccountField_MarketID_set)

	# 普通买卖白名单控制标志(两融专用)
    BSWhiteListCtl = property(_traderapi.CTORATstpShareholderAccountField_BSWhiteListCtl_get, _traderapi.CTORATstpShareholderAccountField_BSWhiteListCtl_set)

	# 主账户标识
    MainFlag = property(_traderapi.CTORATstpShareholderAccountField_MainFlag_get, _traderapi.CTORATstpShareholderAccountField_MainFlag_set)

    def __init__(self):
        _traderapi.CTORATstpShareholderAccountField_swiginit(self, _traderapi.new_CTORATstpShareholderAccountField())
    __swig_destroy__ = _traderapi.delete_CTORATstpShareholderAccountField

# Register CTORATstpShareholderAccountField in _traderapi:
_traderapi.CTORATstpShareholderAccountField_swigregister(CTORATstpShareholderAccountField)




#########################################查询配股配债信息############################################
class CTORATstpQryRationalInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryRationalInfoField_ExchangeID_get, _traderapi.CTORATstpQryRationalInfoField_ExchangeID_set)

	# 配股配债代码
    SecurityID = property(_traderapi.CTORATstpQryRationalInfoField_SecurityID_get, _traderapi.CTORATstpQryRationalInfoField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryRationalInfoField_swiginit(self, _traderapi.new_CTORATstpQryRationalInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryRationalInfoField

# Register CTORATstpQryRationalInfoField in _traderapi:
_traderapi.CTORATstpQryRationalInfoField_swigregister(CTORATstpQryRationalInfoField)




#########################################配股配债信息############################################
class CTORATstpRationalInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易日
    TradingDay = property(_traderapi.CTORATstpRationalInfoField_TradingDay_get, _traderapi.CTORATstpRationalInfoField_TradingDay_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpRationalInfoField_ExchangeID_get, _traderapi.CTORATstpRationalInfoField_ExchangeID_set)

	# 申购代码
    SecurityID = property(_traderapi.CTORATstpRationalInfoField_SecurityID_get, _traderapi.CTORATstpRationalInfoField_SecurityID_set)

	# 配股配债价格
    Price = property(_traderapi.CTORATstpRationalInfoField_Price_get, _traderapi.CTORATstpRationalInfoField_Price_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpRationalInfoField_MarketID_get, _traderapi.CTORATstpRationalInfoField_MarketID_set)

	# 证券品种代码
    ProductID = property(_traderapi.CTORATstpRationalInfoField_ProductID_get, _traderapi.CTORATstpRationalInfoField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpRationalInfoField_SecurityType_get, _traderapi.CTORATstpRationalInfoField_SecurityType_set)

	# 配股名称
    SecurityName = property(_traderapi.CTORATstpRationalInfoField_SecurityName_get, _traderapi.CTORATstpRationalInfoField_SecurityName_set)

	# 基础证券代码
    UnderlyingSecurityID = property(_traderapi.CTORATstpRationalInfoField_UnderlyingSecurityID_get, _traderapi.CTORATstpRationalInfoField_UnderlyingSecurityID_set)

	# 基础证券名称
    UnderlyingSecurityName = property(_traderapi.CTORATstpRationalInfoField_UnderlyingSecurityName_get, _traderapi.CTORATstpRationalInfoField_UnderlyingSecurityName_set)

	# 配股配债最小数量
    MinVolume = property(_traderapi.CTORATstpRationalInfoField_MinVolume_get, _traderapi.CTORATstpRationalInfoField_MinVolume_set)

	# 配股配债最大数量
    MaxVolume = property(_traderapi.CTORATstpRationalInfoField_MaxVolume_get, _traderapi.CTORATstpRationalInfoField_MaxVolume_set)

	# 配股配债单位数量
    VolumeUnit = property(_traderapi.CTORATstpRationalInfoField_VolumeUnit_get, _traderapi.CTORATstpRationalInfoField_VolumeUnit_set)

    def __init__(self):
        _traderapi.CTORATstpRationalInfoField_swiginit(self, _traderapi.new_CTORATstpRationalInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpRationalInfoField

# Register CTORATstpRationalInfoField in _traderapi:
_traderapi.CTORATstpRationalInfoField_swigregister(CTORATstpRationalInfoField)




#########################################查询报单############################################
class CTORATstpQryOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryOrderField_ExchangeID_get, _traderapi.CTORATstpQryOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryOrderField_InvestorID_get, _traderapi.CTORATstpQryOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryOrderField_BusinessUnitID_get, _traderapi.CTORATstpQryOrderField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryOrderField_SecurityID_get, _traderapi.CTORATstpQryOrderField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryOrderField_ShareholderID_get, _traderapi.CTORATstpQryOrderField_ShareholderID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpQryOrderField_OrderSysID_get, _traderapi.CTORATstpQryOrderField_OrderSysID_set)

	# Insert Time
    InsertTimeStart = property(_traderapi.CTORATstpQryOrderField_InsertTimeStart_get, _traderapi.CTORATstpQryOrderField_InsertTimeStart_set)

	# Insert Time
    InsertTimeEnd = property(_traderapi.CTORATstpQryOrderField_InsertTimeEnd_get, _traderapi.CTORATstpQryOrderField_InsertTimeEnd_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryOrderField_SInfo_get, _traderapi.CTORATstpQryOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryOrderField_IInfo_get, _traderapi.CTORATstpQryOrderField_IInfo_set)

	# 是否可撤
    IsCancel = property(_traderapi.CTORATstpQryOrderField_IsCancel_get, _traderapi.CTORATstpQryOrderField_IsCancel_set)

    def __init__(self):
        _traderapi.CTORATstpQryOrderField_swiginit(self, _traderapi.new_CTORATstpQryOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryOrderField

# Register CTORATstpQryOrderField in _traderapi:
_traderapi.CTORATstpQryOrderField_swigregister(CTORATstpQryOrderField)




#########################################查询撤单############################################
class CTORATstpQryOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryOrderActionField_ExchangeID_get, _traderapi.CTORATstpQryOrderActionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryOrderActionField_InvestorID_get, _traderapi.CTORATstpQryOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpQryOrderActionField_BusinessUnitID_set)

	# 股东账户账户代码
    ShareholderID = property(_traderapi.CTORATstpQryOrderActionField_ShareholderID_get, _traderapi.CTORATstpQryOrderActionField_ShareholderID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpQryOrderActionField_OrderLocalID_get, _traderapi.CTORATstpQryOrderActionField_OrderLocalID_set)

	# 本地撤单编号
    CancelOrderLocalID = property(_traderapi.CTORATstpQryOrderActionField_CancelOrderLocalID_get, _traderapi.CTORATstpQryOrderActionField_CancelOrderLocalID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryOrderActionField_SInfo_get, _traderapi.CTORATstpQryOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryOrderActionField_IInfo_get, _traderapi.CTORATstpQryOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpQryOrderActionField_swiginit(self, _traderapi.new_CTORATstpQryOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryOrderActionField

# Register CTORATstpQryOrderActionField in _traderapi:
_traderapi.CTORATstpQryOrderActionField_swigregister(CTORATstpQryOrderActionField)




#########################################撤单############################################
class CTORATstpOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpOrderActionField_ExchangeID_get, _traderapi.CTORATstpOrderActionField_ExchangeID_set)

	# 被撤报单前置编号
    FrontID = property(_traderapi.CTORATstpOrderActionField_FrontID_get, _traderapi.CTORATstpOrderActionField_FrontID_set)

	# 被撤报单会话编号
    SessionID = property(_traderapi.CTORATstpOrderActionField_SessionID_get, _traderapi.CTORATstpOrderActionField_SessionID_set)

	# 被撤报单引用
    OrderRef = property(_traderapi.CTORATstpOrderActionField_OrderRef_get, _traderapi.CTORATstpOrderActionField_OrderRef_set)

	# 被撤报单系统编号
    OrderSysID = property(_traderapi.CTORATstpOrderActionField_OrderSysID_get, _traderapi.CTORATstpOrderActionField_OrderSysID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpOrderActionField_ActionFlag_get, _traderapi.CTORATstpOrderActionField_ActionFlag_set)

	# 本地撤单编号
    CancelOrderLocalID = property(_traderapi.CTORATstpOrderActionField_CancelOrderLocalID_get, _traderapi.CTORATstpOrderActionField_CancelOrderLocalID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpOrderActionField_Operway_get, _traderapi.CTORATstpOrderActionField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpOrderActionField_SInfo_get, _traderapi.CTORATstpOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpOrderActionField_IInfo_get, _traderapi.CTORATstpOrderActionField_IInfo_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpOrderActionField_DepartmentID_get, _traderapi.CTORATstpOrderActionField_DepartmentID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpOrderActionField_InvestorID_get, _traderapi.CTORATstpOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpOrderActionField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpOrderActionField_ShareholderID_get, _traderapi.CTORATstpOrderActionField_ShareholderID_set)

	# 被撤报单本地编号
    OrderLocalID = property(_traderapi.CTORATstpOrderActionField_OrderLocalID_get, _traderapi.CTORATstpOrderActionField_OrderLocalID_set)

	# 操作用户
    ActionUser = property(_traderapi.CTORATstpOrderActionField_ActionUser_get, _traderapi.CTORATstpOrderActionField_ActionUser_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpOrderActionField_TradingDay_get, _traderapi.CTORATstpOrderActionField_TradingDay_set)

	# 操作日期
    ActionDate = property(_traderapi.CTORATstpOrderActionField_ActionDate_get, _traderapi.CTORATstpOrderActionField_ActionDate_set)

	# 操作时间
    ActionTime = property(_traderapi.CTORATstpOrderActionField_ActionTime_get, _traderapi.CTORATstpOrderActionField_ActionTime_set)

	# 撤单状态
    CancelOrderStatus = property(_traderapi.CTORATstpOrderActionField_CancelOrderStatus_get, _traderapi.CTORATstpOrderActionField_CancelOrderStatus_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpOrderActionField_StatusMsg_get, _traderapi.CTORATstpOrderActionField_StatusMsg_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpOrderActionField_RequestID_get, _traderapi.CTORATstpOrderActionField_RequestID_set)

	# 撤单前置编号
    ActionFrontID = property(_traderapi.CTORATstpOrderActionField_ActionFrontID_get, _traderapi.CTORATstpOrderActionField_ActionFrontID_set)

	# 撤单会话编号
    ActionSessionID = property(_traderapi.CTORATstpOrderActionField_ActionSessionID_get, _traderapi.CTORATstpOrderActionField_ActionSessionID_set)

	# 撤单引用
    OrderActionRef = property(_traderapi.CTORATstpOrderActionField_OrderActionRef_get, _traderapi.CTORATstpOrderActionField_OrderActionRef_set)

	# 本地撤单系统编号
    CancelOrderSysID = property(_traderapi.CTORATstpOrderActionField_CancelOrderSysID_get, _traderapi.CTORATstpOrderActionField_CancelOrderSysID_set)

	# 撤单类型
    CancelOrderType = property(_traderapi.CTORATstpOrderActionField_CancelOrderType_get, _traderapi.CTORATstpOrderActionField_CancelOrderType_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpOrderActionField_PbuID_get, _traderapi.CTORATstpOrderActionField_PbuID_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpOrderActionField_IPAddress_get, _traderapi.CTORATstpOrderActionField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpOrderActionField_MacAddress_get, _traderapi.CTORATstpOrderActionField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpOrderActionField_swiginit(self, _traderapi.new_CTORATstpOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpOrderActionField

# Register CTORATstpOrderActionField in _traderapi:
_traderapi.CTORATstpOrderActionField_swigregister(CTORATstpOrderActionField)




#########################################查询成交############################################
class CTORATstpQryTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryTradeField_ExchangeID_get, _traderapi.CTORATstpQryTradeField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryTradeField_InvestorID_get, _traderapi.CTORATstpQryTradeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryTradeField_BusinessUnitID_get, _traderapi.CTORATstpQryTradeField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryTradeField_SecurityID_get, _traderapi.CTORATstpQryTradeField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryTradeField_ShareholderID_get, _traderapi.CTORATstpQryTradeField_ShareholderID_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpQryTradeField_TradeID_get, _traderapi.CTORATstpQryTradeField_TradeID_set)

	# Insert Time
    TradeTimeStart = property(_traderapi.CTORATstpQryTradeField_TradeTimeStart_get, _traderapi.CTORATstpQryTradeField_TradeTimeStart_set)

	# Insert Time
    TradeTimeEnd = property(_traderapi.CTORATstpQryTradeField_TradeTimeEnd_get, _traderapi.CTORATstpQryTradeField_TradeTimeEnd_set)

    def __init__(self):
        _traderapi.CTORATstpQryTradeField_swiginit(self, _traderapi.new_CTORATstpQryTradeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryTradeField

# Register CTORATstpQryTradeField in _traderapi:
_traderapi.CTORATstpQryTradeField_swigregister(CTORATstpQryTradeField)




#########################################查询资金账户############################################
class CTORATstpQryTradingAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryTradingAccountField_InvestorID_get, _traderapi.CTORATstpQryTradingAccountField_InvestorID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpQryTradingAccountField_CurrencyID_get, _traderapi.CTORATstpQryTradingAccountField_CurrencyID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpQryTradingAccountField_AccountID_get, _traderapi.CTORATstpQryTradingAccountField_AccountID_set)

	# 资金账户类型
    AccountType = property(_traderapi.CTORATstpQryTradingAccountField_AccountType_get, _traderapi.CTORATstpQryTradingAccountField_AccountType_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpQryTradingAccountField_DepartmentID_get, _traderapi.CTORATstpQryTradingAccountField_DepartmentID_set)

    def __init__(self):
        _traderapi.CTORATstpQryTradingAccountField_swiginit(self, _traderapi.new_CTORATstpQryTradingAccountField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryTradingAccountField

# Register CTORATstpQryTradingAccountField in _traderapi:
_traderapi.CTORATstpQryTradingAccountField_swigregister(CTORATstpQryTradingAccountField)




#########################################资金账户############################################
class CTORATstpTradingAccountField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpTradingAccountField_DepartmentID_get, _traderapi.CTORATstpTradingAccountField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpTradingAccountField_AccountID_get, _traderapi.CTORATstpTradingAccountField_AccountID_set)

	# 币种代码
    CurrencyID = property(_traderapi.CTORATstpTradingAccountField_CurrencyID_get, _traderapi.CTORATstpTradingAccountField_CurrencyID_set)

	# 上日结存
    PreDeposit = property(_traderapi.CTORATstpTradingAccountField_PreDeposit_get, _traderapi.CTORATstpTradingAccountField_PreDeposit_set)

	# 可用资金
    UsefulMoney = property(_traderapi.CTORATstpTradingAccountField_UsefulMoney_get, _traderapi.CTORATstpTradingAccountField_UsefulMoney_set)

	# 可取资金
    FetchLimit = property(_traderapi.CTORATstpTradingAccountField_FetchLimit_get, _traderapi.CTORATstpTradingAccountField_FetchLimit_set)

	# 上日未交收金额(港股通专用字段)
    PreUnDeliveredMoney = property(_traderapi.CTORATstpTradingAccountField_PreUnDeliveredMoney_get, _traderapi.CTORATstpTradingAccountField_PreUnDeliveredMoney_set)

	# 可用未交收金额(港股通专用字段)
    UnDeliveredMoney = property(_traderapi.CTORATstpTradingAccountField_UnDeliveredMoney_get, _traderapi.CTORATstpTradingAccountField_UnDeliveredMoney_set)

	# 当日入金金额
    Deposit = property(_traderapi.CTORATstpTradingAccountField_Deposit_get, _traderapi.CTORATstpTradingAccountField_Deposit_set)

	# 当日出金金额
    Withdraw = property(_traderapi.CTORATstpTradingAccountField_Withdraw_get, _traderapi.CTORATstpTradingAccountField_Withdraw_set)

	# 冻结的资金(港股通该字段不包括未交收部分冻结资金)
    FrozenCash = property(_traderapi.CTORATstpTradingAccountField_FrozenCash_get, _traderapi.CTORATstpTradingAccountField_FrozenCash_set)

	# 冻结未交收金额(港股通专用)
    UnDeliveredFrozenCash = property(_traderapi.CTORATstpTradingAccountField_UnDeliveredFrozenCash_get, _traderapi.CTORATstpTradingAccountField_UnDeliveredFrozenCash_set)

	# 冻结的手续费(港股通该字段不包括未交收部分冻结手续费)
    FrozenCommission = property(_traderapi.CTORATstpTradingAccountField_FrozenCommission_get, _traderapi.CTORATstpTradingAccountField_FrozenCommission_set)

	# 冻结未交收手续费(港股通专用)
    UnDeliveredFrozenCommission = property(_traderapi.CTORATstpTradingAccountField_UnDeliveredFrozenCommission_get, _traderapi.CTORATstpTradingAccountField_UnDeliveredFrozenCommission_set)

	# 手续费(港股通该字段不包括未交收部分手续费)
    Commission = property(_traderapi.CTORATstpTradingAccountField_Commission_get, _traderapi.CTORATstpTradingAccountField_Commission_set)

	# 占用未交收手续费(港股通专用)
    UnDeliveredCommission = property(_traderapi.CTORATstpTradingAccountField_UnDeliveredCommission_get, _traderapi.CTORATstpTradingAccountField_UnDeliveredCommission_set)

	# 资金账户类型
    AccountType = property(_traderapi.CTORATstpTradingAccountField_AccountType_get, _traderapi.CTORATstpTradingAccountField_AccountType_set)

	# 资金账户所属投资者代码
    InvestorID = property(_traderapi.CTORATstpTradingAccountField_InvestorID_get, _traderapi.CTORATstpTradingAccountField_InvestorID_set)

	# 银行代码
    BankID = property(_traderapi.CTORATstpTradingAccountField_BankID_get, _traderapi.CTORATstpTradingAccountField_BankID_set)

	# 银行账户
    BankAccountID = property(_traderapi.CTORATstpTradingAccountField_BankAccountID_get, _traderapi.CTORATstpTradingAccountField_BankAccountID_set)

	# 权利金收入(两融专用)
    RoyaltyIn = property(_traderapi.CTORATstpTradingAccountField_RoyaltyIn_get, _traderapi.CTORATstpTradingAccountField_RoyaltyIn_set)

	# 权利金支出(两融专用)
    RoyaltyOut = property(_traderapi.CTORATstpTradingAccountField_RoyaltyOut_get, _traderapi.CTORATstpTradingAccountField_RoyaltyOut_set)

	# 融券卖出金额(两融专用)
    CreditSellAmount = property(_traderapi.CTORATstpTradingAccountField_CreditSellAmount_get, _traderapi.CTORATstpTradingAccountField_CreditSellAmount_set)

	# 融券卖出使用金额(用于偿还融资负债或买特殊品种的金额)(两融专用)
    CreditSellUseAmount = property(_traderapi.CTORATstpTradingAccountField_CreditSellUseAmount_get, _traderapi.CTORATstpTradingAccountField_CreditSellUseAmount_set)

	# 虚拟资产(两融专用)
    VirtualAssets = property(_traderapi.CTORATstpTradingAccountField_VirtualAssets_get, _traderapi.CTORATstpTradingAccountField_VirtualAssets_set)

	# 融券卖出金额冻结(用于偿还融资负债或买特殊品种的未成交冻结金额)(两融专用)
    CreditSellFrozenAmount = property(_traderapi.CTORATstpTradingAccountField_CreditSellFrozenAmount_get, _traderapi.CTORATstpTradingAccountField_CreditSellFrozenAmount_set)

	# 属主单元
    OwnerUnit = property(_traderapi.CTORATstpTradingAccountField_OwnerUnit_get, _traderapi.CTORATstpTradingAccountField_OwnerUnit_set)

    def __init__(self):
        _traderapi.CTORATstpTradingAccountField_swiginit(self, _traderapi.new_CTORATstpTradingAccountField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTradingAccountField

# Register CTORATstpTradingAccountField in _traderapi:
_traderapi.CTORATstpTradingAccountField_swigregister(CTORATstpTradingAccountField)




#########################################查询投资者持仓############################################
class CTORATstpQryPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPositionField_ExchangeID_get, _traderapi.CTORATstpQryPositionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPositionField_InvestorID_get, _traderapi.CTORATstpQryPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryPositionField_BusinessUnitID_get, _traderapi.CTORATstpQryPositionField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPositionField_SecurityID_get, _traderapi.CTORATstpQryPositionField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryPositionField_ShareholderID_get, _traderapi.CTORATstpQryPositionField_ShareholderID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPositionField_swiginit(self, _traderapi.new_CTORATstpQryPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPositionField

# Register CTORATstpQryPositionField in _traderapi:
_traderapi.CTORATstpQryPositionField_swigregister(CTORATstpQryPositionField)




#########################################投资者持仓############################################
class CTORATstpPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPositionField_ExchangeID_get, _traderapi.CTORATstpPositionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPositionField_InvestorID_get, _traderapi.CTORATstpPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPositionField_BusinessUnitID_get, _traderapi.CTORATstpPositionField_BusinessUnitID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPositionField_MarketID_get, _traderapi.CTORATstpPositionField_MarketID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpPositionField_ShareholderID_get, _traderapi.CTORATstpPositionField_ShareholderID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpPositionField_TradingDay_get, _traderapi.CTORATstpPositionField_TradingDay_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPositionField_SecurityID_get, _traderapi.CTORATstpPositionField_SecurityID_set)

	# 证券名称
    SecurityName = property(_traderapi.CTORATstpPositionField_SecurityName_get, _traderapi.CTORATstpPositionField_SecurityName_set)

	# 昨仓
    HistoryPos = property(_traderapi.CTORATstpPositionField_HistoryPos_get, _traderapi.CTORATstpPositionField_HistoryPos_set)

	# 昨仓冻结
    HistoryPosFrozen = property(_traderapi.CTORATstpPositionField_HistoryPosFrozen_get, _traderapi.CTORATstpPositionField_HistoryPosFrozen_set)

	# 今买卖仓
    TodayBSPos = property(_traderapi.CTORATstpPositionField_TodayBSPos_get, _traderapi.CTORATstpPositionField_TodayBSPos_set)

	# 今买卖仓冻结
    TodayBSPosFrozen = property(_traderapi.CTORATstpPositionField_TodayBSPosFrozen_get, _traderapi.CTORATstpPositionField_TodayBSPosFrozen_set)

	# 今日申赎持仓
    TodayPRPos = property(_traderapi.CTORATstpPositionField_TodayPRPos_get, _traderapi.CTORATstpPositionField_TodayPRPos_set)

	# 今日申赎持仓冻结
    TodayPRPosFrozen = property(_traderapi.CTORATstpPositionField_TodayPRPosFrozen_get, _traderapi.CTORATstpPositionField_TodayPRPosFrozen_set)

	# 今拆分合并持仓
    TodaySMPos = property(_traderapi.CTORATstpPositionField_TodaySMPos_get, _traderapi.CTORATstpPositionField_TodaySMPos_set)

	# 今拆分合并持仓冻结
    TodaySMPosFrozen = property(_traderapi.CTORATstpPositionField_TodaySMPosFrozen_get, _traderapi.CTORATstpPositionField_TodaySMPosFrozen_set)

	# 昨仓成本价
    HistoryPosPrice = property(_traderapi.CTORATstpPositionField_HistoryPosPrice_get, _traderapi.CTORATstpPositionField_HistoryPosPrice_set)

	# 持仓成本
    TotalPosCost = property(_traderapi.CTORATstpPositionField_TotalPosCost_get, _traderapi.CTORATstpPositionField_TotalPosCost_set)

	# 上次余额(盘中不变)
    PrePosition = property(_traderapi.CTORATstpPositionField_PrePosition_get, _traderapi.CTORATstpPositionField_PrePosition_set)

	# 股份可用
    AvailablePosition = property(_traderapi.CTORATstpPositionField_AvailablePosition_get, _traderapi.CTORATstpPositionField_AvailablePosition_set)

	# 股份余额
    CurrentPosition = property(_traderapi.CTORATstpPositionField_CurrentPosition_get, _traderapi.CTORATstpPositionField_CurrentPosition_set)

	# 开仓成本
    OpenPosCost = property(_traderapi.CTORATstpPositionField_OpenPosCost_get, _traderapi.CTORATstpPositionField_OpenPosCost_set)

	# 融资仓位(两融专用)
    CreditBuyPos = property(_traderapi.CTORATstpPositionField_CreditBuyPos_get, _traderapi.CTORATstpPositionField_CreditBuyPos_set)

	# 融券仓位(两融专用)
    CreditSellPos = property(_traderapi.CTORATstpPositionField_CreditSellPos_get, _traderapi.CTORATstpPositionField_CreditSellPos_set)

	# 今日融券仓位(两融专用)
    TodayCreditSellPos = property(_traderapi.CTORATstpPositionField_TodayCreditSellPos_get, _traderapi.CTORATstpPositionField_TodayCreditSellPos_set)

	# 划出仓位(两融专用)
    CollateralOutPos = property(_traderapi.CTORATstpPositionField_CollateralOutPos_get, _traderapi.CTORATstpPositionField_CollateralOutPos_set)

	# 还券未成交数量(两融专用)
    RepayUntradeVolume = property(_traderapi.CTORATstpPositionField_RepayUntradeVolume_get, _traderapi.CTORATstpPositionField_RepayUntradeVolume_set)

	# 直接还券未成交数量(两融专用)
    RepayTransferUntradeVolume = property(_traderapi.CTORATstpPositionField_RepayTransferUntradeVolume_get, _traderapi.CTORATstpPositionField_RepayTransferUntradeVolume_set)

	# 担保品买入未成交金额(两融专用)
    CollateralBuyUntradeAmount = property(_traderapi.CTORATstpPositionField_CollateralBuyUntradeAmount_get, _traderapi.CTORATstpPositionField_CollateralBuyUntradeAmount_set)

	# 担保品买入未成交数量(两融专用)
    CollateralBuyUntradeVolume = property(_traderapi.CTORATstpPositionField_CollateralBuyUntradeVolume_get, _traderapi.CTORATstpPositionField_CollateralBuyUntradeVolume_set)

	# 融资买入金额(包含交易费用)(两融专用)
    CreditBuyAmount = property(_traderapi.CTORATstpPositionField_CreditBuyAmount_get, _traderapi.CTORATstpPositionField_CreditBuyAmount_set)

	# 融资买入未成交金额(包含交易费用)(两融专用)
    CreditBuyUntradeAmount = property(_traderapi.CTORATstpPositionField_CreditBuyUntradeAmount_get, _traderapi.CTORATstpPositionField_CreditBuyUntradeAmount_set)

	# 融资冻结保证金(两融专用)
    CreditBuyFrozenMargin = property(_traderapi.CTORATstpPositionField_CreditBuyFrozenMargin_get, _traderapi.CTORATstpPositionField_CreditBuyFrozenMargin_set)

	# 融资买入利息(两融专用)
    CreditBuyInterestFee = property(_traderapi.CTORATstpPositionField_CreditBuyInterestFee_get, _traderapi.CTORATstpPositionField_CreditBuyInterestFee_set)

	# 融资买入未成交数量(两融专用)
    CreditBuyUntradeVolume = property(_traderapi.CTORATstpPositionField_CreditBuyUntradeVolume_get, _traderapi.CTORATstpPositionField_CreditBuyUntradeVolume_set)

	# 融券卖出金额(以成交价计算)(两融专用)
    CreditSellAmount = property(_traderapi.CTORATstpPositionField_CreditSellAmount_get, _traderapi.CTORATstpPositionField_CreditSellAmount_set)

	# 融券卖出未成交金额(两融专用)
    CreditSellUntradeAmount = property(_traderapi.CTORATstpPositionField_CreditSellUntradeAmount_get, _traderapi.CTORATstpPositionField_CreditSellUntradeAmount_set)

	# 融券冻结保证金(两融专用)
    CreditSellFrozenMargin = property(_traderapi.CTORATstpPositionField_CreditSellFrozenMargin_get, _traderapi.CTORATstpPositionField_CreditSellFrozenMargin_set)

	# 融券卖出息费(两融专用)
    CreditSellInterestFee = property(_traderapi.CTORATstpPositionField_CreditSellInterestFee_get, _traderapi.CTORATstpPositionField_CreditSellInterestFee_set)

	# 融券卖出未成交数量(两融专用)
    CreditSellUntradeVolume = property(_traderapi.CTORATstpPositionField_CreditSellUntradeVolume_get, _traderapi.CTORATstpPositionField_CreditSellUntradeVolume_set)

	# 划入待收仓(两融专用)
    CollateralInPos = property(_traderapi.CTORATstpPositionField_CollateralInPos_get, _traderapi.CTORATstpPositionField_CollateralInPos_set)

	# 融资流动冻结保证金(两融专用)
    CreditBuyFrozenCirculateMargin = property(_traderapi.CTORATstpPositionField_CreditBuyFrozenCirculateMargin_get, _traderapi.CTORATstpPositionField_CreditBuyFrozenCirculateMargin_set)

	# 融券流动冻结保证金(两融专用)
    CreditSellFrozenCirculateMargin = property(_traderapi.CTORATstpPositionField_CreditSellFrozenCirculateMargin_get, _traderapi.CTORATstpPositionField_CreditSellFrozenCirculateMargin_set)

	# 累计平仓盈亏(两融专用)
    CloseProfit = property(_traderapi.CTORATstpPositionField_CloseProfit_get, _traderapi.CTORATstpPositionField_CloseProfit_set)

	# 当日累计开仓数量
    TodayTotalOpenVolume = property(_traderapi.CTORATstpPositionField_TodayTotalOpenVolume_get, _traderapi.CTORATstpPositionField_TodayTotalOpenVolume_set)

	# 今手续费
    TodayCommission = property(_traderapi.CTORATstpPositionField_TodayCommission_get, _traderapi.CTORATstpPositionField_TodayCommission_set)

	# 当日累计买入金额
    TodayTotalBuyAmount = property(_traderapi.CTORATstpPositionField_TodayTotalBuyAmount_get, _traderapi.CTORATstpPositionField_TodayTotalBuyAmount_set)

	# 当日累计卖出金额
    TodayTotalSellAmount = property(_traderapi.CTORATstpPositionField_TodayTotalSellAmount_get, _traderapi.CTORATstpPositionField_TodayTotalSellAmount_set)

	# 上日冻结(盘中不变)
    PreFrozen = property(_traderapi.CTORATstpPositionField_PreFrozen_get, _traderapi.CTORATstpPositionField_PreFrozen_set)

    def __init__(self):
        _traderapi.CTORATstpPositionField_swiginit(self, _traderapi.new_CTORATstpPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPositionField

# Register CTORATstpPositionField in _traderapi:
_traderapi.CTORATstpPositionField_swigregister(CTORATstpPositionField)




#########################################查询基础交易费率############################################
class CTORATstpQryTradingFeeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryTradingFeeField_ExchangeID_get, _traderapi.CTORATstpQryTradingFeeField_ExchangeID_set)

    def __init__(self):
        _traderapi.CTORATstpQryTradingFeeField_swiginit(self, _traderapi.new_CTORATstpQryTradingFeeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryTradingFeeField

# Register CTORATstpQryTradingFeeField in _traderapi:
_traderapi.CTORATstpQryTradingFeeField_swigregister(CTORATstpQryTradingFeeField)




#########################################基础交易费率############################################
class CTORATstpTradingFeeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpTradingFeeField_ExchangeID_get, _traderapi.CTORATstpTradingFeeField_ExchangeID_set)

	# 产品代码
    ProductID = property(_traderapi.CTORATstpTradingFeeField_ProductID_get, _traderapi.CTORATstpTradingFeeField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpTradingFeeField_SecurityType_get, _traderapi.CTORATstpTradingFeeField_SecurityType_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpTradingFeeField_SecurityID_get, _traderapi.CTORATstpTradingFeeField_SecurityID_set)

	# 业务类别
    BizClass = property(_traderapi.CTORATstpTradingFeeField_BizClass_get, _traderapi.CTORATstpTradingFeeField_BizClass_set)

	# 印花税(港股印花税)按金额收取比例
    StampTaxRatioByAmt = property(_traderapi.CTORATstpTradingFeeField_StampTaxRatioByAmt_get, _traderapi.CTORATstpTradingFeeField_StampTaxRatioByAmt_set)

	# 印花税(港股印花税)按面值收取比例
    StampTaxRatioByPar = property(_traderapi.CTORATstpTradingFeeField_StampTaxRatioByPar_get, _traderapi.CTORATstpTradingFeeField_StampTaxRatioByPar_set)

	# 印花税(港股印花税,单位港币)按笔收取金额
    StampTaxFeePerOrder = property(_traderapi.CTORATstpTradingFeeField_StampTaxFeePerOrder_get, _traderapi.CTORATstpTradingFeeField_StampTaxFeePerOrder_set)

	# 印花税(港股印花税,单位港币)按数量收取金额
    StampTaxFeeByVolume = property(_traderapi.CTORATstpTradingFeeField_StampTaxFeeByVolume_get, _traderapi.CTORATstpTradingFeeField_StampTaxFeeByVolume_set)

	# 印花税(港股印花税,单位港币)最低收取金额
    StampTaxFeeMin = property(_traderapi.CTORATstpTradingFeeField_StampTaxFeeMin_get, _traderapi.CTORATstpTradingFeeField_StampTaxFeeMin_set)

	# 印花税(港股印花税,单位港币)最高收取金额
    StampTaxFeeMax = property(_traderapi.CTORATstpTradingFeeField_StampTaxFeeMax_get, _traderapi.CTORATstpTradingFeeField_StampTaxFeeMax_set)

	# 过户费(港股证券组合费)按金额收取比例
    TransferRatioByAmt = property(_traderapi.CTORATstpTradingFeeField_TransferRatioByAmt_get, _traderapi.CTORATstpTradingFeeField_TransferRatioByAmt_set)

	# 过户费(港股证券组合费)按面值收取比例
    TransferRatioByPar = property(_traderapi.CTORATstpTradingFeeField_TransferRatioByPar_get, _traderapi.CTORATstpTradingFeeField_TransferRatioByPar_set)

	# 过户费(港股证券组合费,单位港币)按笔收取金额
    TransferFeePerOrder = property(_traderapi.CTORATstpTradingFeeField_TransferFeePerOrder_get, _traderapi.CTORATstpTradingFeeField_TransferFeePerOrder_set)

	# 过户费(港股证券组合费,单位港币)按数量收取金额
    TransferFeeByVolume = property(_traderapi.CTORATstpTradingFeeField_TransferFeeByVolume_get, _traderapi.CTORATstpTradingFeeField_TransferFeeByVolume_set)

	# 过户费(港股证券组合费,单位港币)最低收取金额
    TransferFeeMin = property(_traderapi.CTORATstpTradingFeeField_TransferFeeMin_get, _traderapi.CTORATstpTradingFeeField_TransferFeeMin_set)

	# 过户费(港股证券组合费,单位港币)最高收取金额
    TransferFeeMax = property(_traderapi.CTORATstpTradingFeeField_TransferFeeMax_get, _traderapi.CTORATstpTradingFeeField_TransferFeeMax_set)

	# 经手费(港股交易费)按金额收取比例
    HandlingRatioByAmt = property(_traderapi.CTORATstpTradingFeeField_HandlingRatioByAmt_get, _traderapi.CTORATstpTradingFeeField_HandlingRatioByAmt_set)

	# 经手费(港股交易费)按面值收取比例
    HandlingRatioByPar = property(_traderapi.CTORATstpTradingFeeField_HandlingRatioByPar_get, _traderapi.CTORATstpTradingFeeField_HandlingRatioByPar_set)

	# 经手费(港股交易费,单位港币)按笔收取金额
    HandlingFeePerOrder = property(_traderapi.CTORATstpTradingFeeField_HandlingFeePerOrder_get, _traderapi.CTORATstpTradingFeeField_HandlingFeePerOrder_set)

	# 经手费(港股交易费,单位港币)按数量收取金额
    HandlingFeeByVolume = property(_traderapi.CTORATstpTradingFeeField_HandlingFeeByVolume_get, _traderapi.CTORATstpTradingFeeField_HandlingFeeByVolume_set)

	# 经手费(港股交易费,单位港币)最低收取金额
    HandlingFeeMin = property(_traderapi.CTORATstpTradingFeeField_HandlingFeeMin_get, _traderapi.CTORATstpTradingFeeField_HandlingFeeMin_set)

	# 经手费(港股交易费,单位港币)最高收取金额
    HandlingFeeMax = property(_traderapi.CTORATstpTradingFeeField_HandlingFeeMax_get, _traderapi.CTORATstpTradingFeeField_HandlingFeeMax_set)

	# 证管费(港股交易征费)按金额收取比例
    RegulateRatioByAmt = property(_traderapi.CTORATstpTradingFeeField_RegulateRatioByAmt_get, _traderapi.CTORATstpTradingFeeField_RegulateRatioByAmt_set)

	# 证管费(港股交易征费)按面值收取比例
    RegulateRatioByPar = property(_traderapi.CTORATstpTradingFeeField_RegulateRatioByPar_get, _traderapi.CTORATstpTradingFeeField_RegulateRatioByPar_set)

	# 证管费(港股交易征费,单位港币)按笔收取金额
    RegulateFeePerOrder = property(_traderapi.CTORATstpTradingFeeField_RegulateFeePerOrder_get, _traderapi.CTORATstpTradingFeeField_RegulateFeePerOrder_set)

	# 证管费(港股交易征费,单位港币)按数量收取金额
    RegulateFeeByVolume = property(_traderapi.CTORATstpTradingFeeField_RegulateFeeByVolume_get, _traderapi.CTORATstpTradingFeeField_RegulateFeeByVolume_set)

	# 证管费(港股交易征费,单位港币)最低收取金额
    RegulateFeeMin = property(_traderapi.CTORATstpTradingFeeField_RegulateFeeMin_get, _traderapi.CTORATstpTradingFeeField_RegulateFeeMin_set)

	# 证管费(港股交易征费,单位港币)最高收取金额
    RegulateFeeMax = property(_traderapi.CTORATstpTradingFeeField_RegulateFeeMax_get, _traderapi.CTORATstpTradingFeeField_RegulateFeeMax_set)

	# 结算费(港股股份交收费)按金额收取比例
    SettlementRatioByAmt = property(_traderapi.CTORATstpTradingFeeField_SettlementRatioByAmt_get, _traderapi.CTORATstpTradingFeeField_SettlementRatioByAmt_set)

	# 结算费(港股股份交收费)按面值收取比例
    SettlementRatioByPar = property(_traderapi.CTORATstpTradingFeeField_SettlementRatioByPar_get, _traderapi.CTORATstpTradingFeeField_SettlementRatioByPar_set)

	# 结算费(港股股份交收费,单位港币)按笔收取金额
    SettlementFeePerOrder = property(_traderapi.CTORATstpTradingFeeField_SettlementFeePerOrder_get, _traderapi.CTORATstpTradingFeeField_SettlementFeePerOrder_set)

	# 结算费(港股股份交收费,单位港币)按数量收取金额
    SettlementFeeByVolume = property(_traderapi.CTORATstpTradingFeeField_SettlementFeeByVolume_get, _traderapi.CTORATstpTradingFeeField_SettlementFeeByVolume_set)

	# 结算费(港股股份交收费,单位港币)最低收取金额
    SettlementFeeMin = property(_traderapi.CTORATstpTradingFeeField_SettlementFeeMin_get, _traderapi.CTORATstpTradingFeeField_SettlementFeeMin_set)

	# 结算费(港股股份交收费,单位港币)最高收取金额
    SettlementFeeMax = property(_traderapi.CTORATstpTradingFeeField_SettlementFeeMax_get, _traderapi.CTORATstpTradingFeeField_SettlementFeeMax_set)

    def __init__(self):
        _traderapi.CTORATstpTradingFeeField_swiginit(self, _traderapi.new_CTORATstpTradingFeeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpTradingFeeField

# Register CTORATstpTradingFeeField in _traderapi:
_traderapi.CTORATstpTradingFeeField_swigregister(CTORATstpTradingFeeField)




#########################################查询佣金费率############################################
class CTORATstpQryInvestorTradingFeeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryInvestorTradingFeeField_InvestorID_get, _traderapi.CTORATstpQryInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryInvestorTradingFeeField_ExchangeID_get, _traderapi.CTORATstpQryInvestorTradingFeeField_ExchangeID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpQryInvestorTradingFeeField_DepartmentID_get, _traderapi.CTORATstpQryInvestorTradingFeeField_DepartmentID_set)

    def __init__(self):
        _traderapi.CTORATstpQryInvestorTradingFeeField_swiginit(self, _traderapi.new_CTORATstpQryInvestorTradingFeeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryInvestorTradingFeeField

# Register CTORATstpQryInvestorTradingFeeField in _traderapi:
_traderapi.CTORATstpQryInvestorTradingFeeField_swigregister(CTORATstpQryInvestorTradingFeeField)




#########################################佣金费率############################################
class CTORATstpInvestorTradingFeeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInvestorTradingFeeField_InvestorID_get, _traderapi.CTORATstpInvestorTradingFeeField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInvestorTradingFeeField_ExchangeID_get, _traderapi.CTORATstpInvestorTradingFeeField_ExchangeID_set)

	# 产品代码
    ProductID = property(_traderapi.CTORATstpInvestorTradingFeeField_ProductID_get, _traderapi.CTORATstpInvestorTradingFeeField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpInvestorTradingFeeField_SecurityType_get, _traderapi.CTORATstpInvestorTradingFeeField_SecurityType_set)

	# 合约代码
    SecurityID = property(_traderapi.CTORATstpInvestorTradingFeeField_SecurityID_get, _traderapi.CTORATstpInvestorTradingFeeField_SecurityID_set)

	# 业务类别
    BizClass = property(_traderapi.CTORATstpInvestorTradingFeeField_BizClass_get, _traderapi.CTORATstpInvestorTradingFeeField_BizClass_set)

	# 佣金类型
    BrokerageType = property(_traderapi.CTORATstpInvestorTradingFeeField_BrokerageType_get, _traderapi.CTORATstpInvestorTradingFeeField_BrokerageType_set)

	# 佣金按金额收取比例
    RatioByAmt = property(_traderapi.CTORATstpInvestorTradingFeeField_RatioByAmt_get, _traderapi.CTORATstpInvestorTradingFeeField_RatioByAmt_set)

	# 佣金按面值收取比例
    RatioByPar = property(_traderapi.CTORATstpInvestorTradingFeeField_RatioByPar_get, _traderapi.CTORATstpInvestorTradingFeeField_RatioByPar_set)

	# 佣金按笔收取金额
    FeePerOrder = property(_traderapi.CTORATstpInvestorTradingFeeField_FeePerOrder_get, _traderapi.CTORATstpInvestorTradingFeeField_FeePerOrder_set)

	# 佣金最低收取金额
    FeeMin = property(_traderapi.CTORATstpInvestorTradingFeeField_FeeMin_get, _traderapi.CTORATstpInvestorTradingFeeField_FeeMin_set)

	# 佣金最高收取金额
    FeeMax = property(_traderapi.CTORATstpInvestorTradingFeeField_FeeMax_get, _traderapi.CTORATstpInvestorTradingFeeField_FeeMax_set)

	# 佣金按数量收取金额
    FeeByVolume = property(_traderapi.CTORATstpInvestorTradingFeeField_FeeByVolume_get, _traderapi.CTORATstpInvestorTradingFeeField_FeeByVolume_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpInvestorTradingFeeField_DepartmentID_get, _traderapi.CTORATstpInvestorTradingFeeField_DepartmentID_set)

	# 报单类型
    OrderType = property(_traderapi.CTORATstpInvestorTradingFeeField_OrderType_get, _traderapi.CTORATstpInvestorTradingFeeField_OrderType_set)

    def __init__(self):
        _traderapi.CTORATstpInvestorTradingFeeField_swiginit(self, _traderapi.new_CTORATstpInvestorTradingFeeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInvestorTradingFeeField

# Register CTORATstpInvestorTradingFeeField in _traderapi:
_traderapi.CTORATstpInvestorTradingFeeField_swigregister(CTORATstpInvestorTradingFeeField)




#########################################查询新股申购额度############################################
class CTORATstpQryIPOQuotaField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryIPOQuotaField_InvestorID_get, _traderapi.CTORATstpQryIPOQuotaField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryIPOQuotaField_ExchangeID_get, _traderapi.CTORATstpQryIPOQuotaField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryIPOQuotaField_MarketID_get, _traderapi.CTORATstpQryIPOQuotaField_MarketID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryIPOQuotaField_ShareholderID_get, _traderapi.CTORATstpQryIPOQuotaField_ShareholderID_set)

    def __init__(self):
        _traderapi.CTORATstpQryIPOQuotaField_swiginit(self, _traderapi.new_CTORATstpQryIPOQuotaField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryIPOQuotaField

# Register CTORATstpQryIPOQuotaField in _traderapi:
_traderapi.CTORATstpQryIPOQuotaField_swigregister(CTORATstpQryIPOQuotaField)




#########################################新股申购额度############################################
class CTORATstpIPOQuotaField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpIPOQuotaField_InvestorID_get, _traderapi.CTORATstpIPOQuotaField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpIPOQuotaField_ExchangeID_get, _traderapi.CTORATstpIPOQuotaField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpIPOQuotaField_MarketID_get, _traderapi.CTORATstpIPOQuotaField_MarketID_set)

	# 客户代码
    ShareholderID = property(_traderapi.CTORATstpIPOQuotaField_ShareholderID_get, _traderapi.CTORATstpIPOQuotaField_ShareholderID_set)

	# 可申购额度
    MaxVolume = property(_traderapi.CTORATstpIPOQuotaField_MaxVolume_get, _traderapi.CTORATstpIPOQuotaField_MaxVolume_set)

	# 科创板可申购额度
    KCMaxVolume = property(_traderapi.CTORATstpIPOQuotaField_KCMaxVolume_get, _traderapi.CTORATstpIPOQuotaField_KCMaxVolume_set)

    def __init__(self):
        _traderapi.CTORATstpIPOQuotaField_swiginit(self, _traderapi.new_CTORATstpIPOQuotaField())
    __swig_destroy__ = _traderapi.delete_CTORATstpIPOQuotaField

# Register CTORATstpIPOQuotaField in _traderapi:
_traderapi.CTORATstpIPOQuotaField_swigregister(CTORATstpIPOQuotaField)




#########################################查询报单明细资金############################################
class CTORATstpQryOrderFundDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryOrderFundDetailField_ExchangeID_get, _traderapi.CTORATstpQryOrderFundDetailField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryOrderFundDetailField_InvestorID_get, _traderapi.CTORATstpQryOrderFundDetailField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryOrderFundDetailField_BusinessUnitID_get, _traderapi.CTORATstpQryOrderFundDetailField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryOrderFundDetailField_SecurityID_get, _traderapi.CTORATstpQryOrderFundDetailField_SecurityID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpQryOrderFundDetailField_OrderSysID_get, _traderapi.CTORATstpQryOrderFundDetailField_OrderSysID_set)

    def __init__(self):
        _traderapi.CTORATstpQryOrderFundDetailField_swiginit(self, _traderapi.new_CTORATstpQryOrderFundDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryOrderFundDetailField

# Register CTORATstpQryOrderFundDetailField in _traderapi:
_traderapi.CTORATstpQryOrderFundDetailField_swigregister(CTORATstpQryOrderFundDetailField)




#########################################报单明细资金############################################
class CTORATstpOrderFundDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpOrderFundDetailField_InvestorID_get, _traderapi.CTORATstpOrderFundDetailField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpOrderFundDetailField_SecurityID_get, _traderapi.CTORATstpOrderFundDetailField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpOrderFundDetailField_ExchangeID_get, _traderapi.CTORATstpOrderFundDetailField_ExchangeID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpOrderFundDetailField_TradingDay_get, _traderapi.CTORATstpOrderFundDetailField_TradingDay_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpOrderFundDetailField_OrderSysID_get, _traderapi.CTORATstpOrderFundDetailField_OrderSysID_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpOrderFundDetailField_PbuID_get, _traderapi.CTORATstpOrderFundDetailField_PbuID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpOrderFundDetailField_OrderLocalID_get, _traderapi.CTORATstpOrderFundDetailField_OrderLocalID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpOrderFundDetailField_BusinessUnitID_get, _traderapi.CTORATstpOrderFundDetailField_BusinessUnitID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpOrderFundDetailField_AccountID_get, _traderapi.CTORATstpOrderFundDetailField_AccountID_set)

	# 报单金额
    OrderAmount = property(_traderapi.CTORATstpOrderFundDetailField_OrderAmount_get, _traderapi.CTORATstpOrderFundDetailField_OrderAmount_set)

	# 成交金额
    Turnover = property(_traderapi.CTORATstpOrderFundDetailField_Turnover_get, _traderapi.CTORATstpOrderFundDetailField_Turnover_set)

	# 印花税(港股为印花税)
    StampTaxFee = property(_traderapi.CTORATstpOrderFundDetailField_StampTaxFee_get, _traderapi.CTORATstpOrderFundDetailField_StampTaxFee_set)

	# 经手费(港股为交易费)
    HandlingFee = property(_traderapi.CTORATstpOrderFundDetailField_HandlingFee_get, _traderapi.CTORATstpOrderFundDetailField_HandlingFee_set)

	# 过户费(港股为证券组合费)
    TransferFee = property(_traderapi.CTORATstpOrderFundDetailField_TransferFee_get, _traderapi.CTORATstpOrderFundDetailField_TransferFee_set)

	# 证管费(港股为交易征费)
    RegulateFee = property(_traderapi.CTORATstpOrderFundDetailField_RegulateFee_get, _traderapi.CTORATstpOrderFundDetailField_RegulateFee_set)

	# 结算费(港股为股份交收费)
    SettlementFee = property(_traderapi.CTORATstpOrderFundDetailField_SettlementFee_get, _traderapi.CTORATstpOrderFundDetailField_SettlementFee_set)

	# 佣金
    BrokerageFee = property(_traderapi.CTORATstpOrderFundDetailField_BrokerageFee_get, _traderapi.CTORATstpOrderFundDetailField_BrokerageFee_set)

	# 总费用
    TotalFee = property(_traderapi.CTORATstpOrderFundDetailField_TotalFee_get, _traderapi.CTORATstpOrderFundDetailField_TotalFee_set)

	# 报单初始冻结金额
    OrderCashFrozen = property(_traderapi.CTORATstpOrderFundDetailField_OrderCashFrozen_get, _traderapi.CTORATstpOrderFundDetailField_OrderCashFrozen_set)

	# 预估冻结现金
    EstimateCashFrozen = property(_traderapi.CTORATstpOrderFundDetailField_EstimateCashFrozen_get, _traderapi.CTORATstpOrderFundDetailField_EstimateCashFrozen_set)

	# 初始冻结总费用
    TotalFeeFrozen = property(_traderapi.CTORATstpOrderFundDetailField_TotalFeeFrozen_get, _traderapi.CTORATstpOrderFundDetailField_TotalFeeFrozen_set)

	# 初始冻结金额合计
    TotalFrozen = property(_traderapi.CTORATstpOrderFundDetailField_TotalFrozen_get, _traderapi.CTORATstpOrderFundDetailField_TotalFrozen_set)

	# 保证金(两融专用)
    Margin = property(_traderapi.CTORATstpOrderFundDetailField_Margin_get, _traderapi.CTORATstpOrderFundDetailField_Margin_set)

	# 偿还金额(两融专用)
    RepayAmount = property(_traderapi.CTORATstpOrderFundDetailField_RepayAmount_get, _traderapi.CTORATstpOrderFundDetailField_RepayAmount_set)

	# 偿还数量(两融专用)
    RepayVolume = property(_traderapi.CTORATstpOrderFundDetailField_RepayVolume_get, _traderapi.CTORATstpOrderFundDetailField_RepayVolume_set)

	# 初始冻结保证金(两融专用)
    MarginFrozen = property(_traderapi.CTORATstpOrderFundDetailField_MarginFrozen_get, _traderapi.CTORATstpOrderFundDetailField_MarginFrozen_set)

	# 初始冻结流动保证金(两融专用)
    CirculateMarginFrozen = property(_traderapi.CTORATstpOrderFundDetailField_CirculateMarginFrozen_get, _traderapi.CTORATstpOrderFundDetailField_CirculateMarginFrozen_set)

    def __init__(self):
        _traderapi.CTORATstpOrderFundDetailField_swiginit(self, _traderapi.new_CTORATstpOrderFundDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpOrderFundDetailField

# Register CTORATstpOrderFundDetailField in _traderapi:
_traderapi.CTORATstpOrderFundDetailField_swigregister(CTORATstpOrderFundDetailField)




#########################################查询资金转移流水############################################
class CTORATstpQryFundTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpQryFundTransferDetailField_DepartmentID_get, _traderapi.CTORATstpQryFundTransferDetailField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpQryFundTransferDetailField_AccountID_get, _traderapi.CTORATstpQryFundTransferDetailField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpQryFundTransferDetailField_CurrencyID_get, _traderapi.CTORATstpQryFundTransferDetailField_CurrencyID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryFundTransferDetailField_InvestorID_get, _traderapi.CTORATstpQryFundTransferDetailField_InvestorID_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpQryFundTransferDetailField_TransferDirection_get, _traderapi.CTORATstpQryFundTransferDetailField_TransferDirection_set)

    def __init__(self):
        _traderapi.CTORATstpQryFundTransferDetailField_swiginit(self, _traderapi.new_CTORATstpQryFundTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryFundTransferDetailField

# Register CTORATstpQryFundTransferDetailField in _traderapi:
_traderapi.CTORATstpQryFundTransferDetailField_swigregister(CTORATstpQryFundTransferDetailField)




#########################################资金转移流水############################################
class CTORATstpFundTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 转账流水号
    FundSerial = property(_traderapi.CTORATstpFundTransferDetailField_FundSerial_get, _traderapi.CTORATstpFundTransferDetailField_FundSerial_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpFundTransferDetailField_ApplySerial_get, _traderapi.CTORATstpFundTransferDetailField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpFundTransferDetailField_FrontID_get, _traderapi.CTORATstpFundTransferDetailField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpFundTransferDetailField_SessionID_get, _traderapi.CTORATstpFundTransferDetailField_SessionID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpFundTransferDetailField_AccountID_get, _traderapi.CTORATstpFundTransferDetailField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpFundTransferDetailField_CurrencyID_get, _traderapi.CTORATstpFundTransferDetailField_CurrencyID_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpFundTransferDetailField_TransferDirection_get, _traderapi.CTORATstpFundTransferDetailField_TransferDirection_set)

	# 出入金金额
    Amount = property(_traderapi.CTORATstpFundTransferDetailField_Amount_get, _traderapi.CTORATstpFundTransferDetailField_Amount_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpFundTransferDetailField_TransferStatus_get, _traderapi.CTORATstpFundTransferDetailField_TransferStatus_set)

	# 操作来源
    OperateSource = property(_traderapi.CTORATstpFundTransferDetailField_OperateSource_get, _traderapi.CTORATstpFundTransferDetailField_OperateSource_set)

	# 操作人员
    OperatorID = property(_traderapi.CTORATstpFundTransferDetailField_OperatorID_get, _traderapi.CTORATstpFundTransferDetailField_OperatorID_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpFundTransferDetailField_OperateDate_get, _traderapi.CTORATstpFundTransferDetailField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpFundTransferDetailField_OperateTime_get, _traderapi.CTORATstpFundTransferDetailField_OperateTime_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpFundTransferDetailField_StatusMsg_get, _traderapi.CTORATstpFundTransferDetailField_StatusMsg_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpFundTransferDetailField_DepartmentID_get, _traderapi.CTORATstpFundTransferDetailField_DepartmentID_set)

	# 银行代码
    BankID = property(_traderapi.CTORATstpFundTransferDetailField_BankID_get, _traderapi.CTORATstpFundTransferDetailField_BankID_set)

	# 签约银行账户
    BankAccountID = property(_traderapi.CTORATstpFundTransferDetailField_BankAccountID_get, _traderapi.CTORATstpFundTransferDetailField_BankAccountID_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpFundTransferDetailField_IPAddress_get, _traderapi.CTORATstpFundTransferDetailField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpFundTransferDetailField_MacAddress_get, _traderapi.CTORATstpFundTransferDetailField_MacAddress_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpFundTransferDetailField_InvestorID_get, _traderapi.CTORATstpFundTransferDetailField_InvestorID_set)

	# 外部流水号
    ExternalSerial = property(_traderapi.CTORATstpFundTransferDetailField_ExternalSerial_get, _traderapi.CTORATstpFundTransferDetailField_ExternalSerial_set)

	# 外部系统节点号
    ExternalNodeID = property(_traderapi.CTORATstpFundTransferDetailField_ExternalNodeID_get, _traderapi.CTORATstpFundTransferDetailField_ExternalNodeID_set)

	# 强平原因(两融专用)
    ForceCloseReason = property(_traderapi.CTORATstpFundTransferDetailField_ForceCloseReason_get, _traderapi.CTORATstpFundTransferDetailField_ForceCloseReason_set)

	# (直接还款用)指定偿还时的负债编号(两融专用)
    CreditDebtID = property(_traderapi.CTORATstpFundTransferDetailField_CreditDebtID_get, _traderapi.CTORATstpFundTransferDetailField_CreditDebtID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpFundTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpFundTransferDetailField_BusinessUnitID_set)

	# 业务编号
    BizRef = property(_traderapi.CTORATstpFundTransferDetailField_BizRef_get, _traderapi.CTORATstpFundTransferDetailField_BizRef_set)

	# 交易所代码
    ExchangeRef = property(_traderapi.CTORATstpFundTransferDetailField_ExchangeRef_get, _traderapi.CTORATstpFundTransferDetailField_ExchangeRef_set)

    def __init__(self):
        _traderapi.CTORATstpFundTransferDetailField_swiginit(self, _traderapi.new_CTORATstpFundTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpFundTransferDetailField

# Register CTORATstpFundTransferDetailField in _traderapi:
_traderapi.CTORATstpFundTransferDetailField_swigregister(CTORATstpFundTransferDetailField)




#########################################查询持仓转移流水############################################
class CTORATstpQryPositionTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPositionTransferDetailField_ExchangeID_get, _traderapi.CTORATstpQryPositionTransferDetailField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPositionTransferDetailField_InvestorID_get, _traderapi.CTORATstpQryPositionTransferDetailField_InvestorID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryPositionTransferDetailField_ShareholderID_get, _traderapi.CTORATstpQryPositionTransferDetailField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPositionTransferDetailField_SecurityID_get, _traderapi.CTORATstpQryPositionTransferDetailField_SecurityID_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpQryPositionTransferDetailField_TransferDirection_get, _traderapi.CTORATstpQryPositionTransferDetailField_TransferDirection_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryPositionTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpQryPositionTransferDetailField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPositionTransferDetailField_swiginit(self, _traderapi.new_CTORATstpQryPositionTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPositionTransferDetailField

# Register CTORATstpQryPositionTransferDetailField in _traderapi:
_traderapi.CTORATstpQryPositionTransferDetailField_swigregister(CTORATstpQryPositionTransferDetailField)




#########################################持仓转移流水############################################
class CTORATstpPositionTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 流水号
    PositionSerial = property(_traderapi.CTORATstpPositionTransferDetailField_PositionSerial_get, _traderapi.CTORATstpPositionTransferDetailField_PositionSerial_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpPositionTransferDetailField_ApplySerial_get, _traderapi.CTORATstpPositionTransferDetailField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpPositionTransferDetailField_FrontID_get, _traderapi.CTORATstpPositionTransferDetailField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpPositionTransferDetailField_SessionID_get, _traderapi.CTORATstpPositionTransferDetailField_SessionID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPositionTransferDetailField_InvestorID_get, _traderapi.CTORATstpPositionTransferDetailField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPositionTransferDetailField_ExchangeID_get, _traderapi.CTORATstpPositionTransferDetailField_ExchangeID_set)

	# 交易账户代码
    ShareholderID = property(_traderapi.CTORATstpPositionTransferDetailField_ShareholderID_get, _traderapi.CTORATstpPositionTransferDetailField_ShareholderID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPositionTransferDetailField_MarketID_get, _traderapi.CTORATstpPositionTransferDetailField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPositionTransferDetailField_SecurityID_get, _traderapi.CTORATstpPositionTransferDetailField_SecurityID_set)

	# 交易日期
    TradingDay = property(_traderapi.CTORATstpPositionTransferDetailField_TradingDay_get, _traderapi.CTORATstpPositionTransferDetailField_TradingDay_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpPositionTransferDetailField_TransferDirection_get, _traderapi.CTORATstpPositionTransferDetailField_TransferDirection_set)

	# 转移持仓类型
    TransferPositionType = property(_traderapi.CTORATstpPositionTransferDetailField_TransferPositionType_get, _traderapi.CTORATstpPositionTransferDetailField_TransferPositionType_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpPositionTransferDetailField_TransferStatus_get, _traderapi.CTORATstpPositionTransferDetailField_TransferStatus_set)

	# 昨日仓位数量
    HistoryVolume = property(_traderapi.CTORATstpPositionTransferDetailField_HistoryVolume_get, _traderapi.CTORATstpPositionTransferDetailField_HistoryVolume_set)

	# 今日买卖仓位数量
    TodayBSVolume = property(_traderapi.CTORATstpPositionTransferDetailField_TodayBSVolume_get, _traderapi.CTORATstpPositionTransferDetailField_TodayBSVolume_set)

	# 今日申赎仓位数量
    TodayPRVolume = property(_traderapi.CTORATstpPositionTransferDetailField_TodayPRVolume_get, _traderapi.CTORATstpPositionTransferDetailField_TodayPRVolume_set)

	# 今日拆分合并仓位数量
    TodaySMVolume = property(_traderapi.CTORATstpPositionTransferDetailField_TodaySMVolume_get, _traderapi.CTORATstpPositionTransferDetailField_TodaySMVolume_set)

	# 操作人员
    OperatorID = property(_traderapi.CTORATstpPositionTransferDetailField_OperatorID_get, _traderapi.CTORATstpPositionTransferDetailField_OperatorID_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpPositionTransferDetailField_OperateDate_get, _traderapi.CTORATstpPositionTransferDetailField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpPositionTransferDetailField_OperateTime_get, _traderapi.CTORATstpPositionTransferDetailField_OperateTime_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPositionTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpPositionTransferDetailField_BusinessUnitID_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpPositionTransferDetailField_StatusMsg_get, _traderapi.CTORATstpPositionTransferDetailField_StatusMsg_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpPositionTransferDetailField_IPAddress_get, _traderapi.CTORATstpPositionTransferDetailField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpPositionTransferDetailField_MacAddress_get, _traderapi.CTORATstpPositionTransferDetailField_MacAddress_set)

	# 外部节点编号
    ExternalNodeID = property(_traderapi.CTORATstpPositionTransferDetailField_ExternalNodeID_get, _traderapi.CTORATstpPositionTransferDetailField_ExternalNodeID_set)

    def __init__(self):
        _traderapi.CTORATstpPositionTransferDetailField_swiginit(self, _traderapi.new_CTORATstpPositionTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPositionTransferDetailField

# Register CTORATstpPositionTransferDetailField in _traderapi:
_traderapi.CTORATstpPositionTransferDetailField_swigregister(CTORATstpPositionTransferDetailField)




#########################################查询外围系统仓位调拨流水############################################
class CTORATstpQryPeripheryPositionTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_ExchangeID_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_InvestorID_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_InvestorID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_ShareholderID_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_SecurityID_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_SecurityID_set)

	# 仓位调拨方向
    TransferDirection = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_TransferDirection_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_TransferDirection_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPeripheryPositionTransferDetailField_swiginit(self, _traderapi.new_CTORATstpQryPeripheryPositionTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPeripheryPositionTransferDetailField

# Register CTORATstpQryPeripheryPositionTransferDetailField in _traderapi:
_traderapi.CTORATstpQryPeripheryPositionTransferDetailField_swigregister(CTORATstpQryPeripheryPositionTransferDetailField)




#########################################外围系统仓位调拨流水############################################
class CTORATstpPeripheryPositionTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 仓位调拨系统流水号
    PositionSerial = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_PositionSerial_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_PositionSerial_set)

	# 仓位调拨请求流水号
    ApplySerial = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_ApplySerial_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_FrontID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_SessionID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_SessionID_set)

	# 仓位调拨方向
    TransferDirection = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferDirection_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferDirection_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_ExchangeID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_MarketID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_MarketID_set)

	# 现货系统投资者代码
    InvestorID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_InvestorID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_InvestorID_set)

	# 现货系统投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_BusinessUnitID_set)

	# 现货系统交易账户代码
    ShareholderID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_ShareholderID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_ShareholderID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_SecurityID_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_SecurityID_set)

	# 今日买卖仓位转入转出数量
    TodayBSPos = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TodayBSPos_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TodayBSPos_set)

	# 今日申赎仓位转入数量
    TodayPRPos = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TodayPRPos_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TodayPRPos_set)

	# 今日拆分合并仓位转入数量
    TodaySMPos = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TodaySMPos_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TodaySMPos_set)

	# 昨日仓位转入数量
    HistoryPos = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_HistoryPos_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_HistoryPos_set)

	# 交易日期
    TradingDay = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TradingDay_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TradingDay_set)

	# 仓位调拨原因
    TransferReason = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferReason_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferReason_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferStatus_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_TransferStatus_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_OperateDate_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_OperateTime_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_OperateTime_set)

	# 冲正日期
    RepealDate = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealDate_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealDate_set)

	# 冲正时间
    RepealTime = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealTime_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealTime_set)

	# 冲正原因
    RepealReason = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealReason_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_RepealReason_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpPeripheryPositionTransferDetailField_StatusMsg_get, _traderapi.CTORATstpPeripheryPositionTransferDetailField_StatusMsg_set)

    def __init__(self):
        _traderapi.CTORATstpPeripheryPositionTransferDetailField_swiginit(self, _traderapi.new_CTORATstpPeripheryPositionTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPeripheryPositionTransferDetailField

# Register CTORATstpPeripheryPositionTransferDetailField in _traderapi:
_traderapi.CTORATstpPeripheryPositionTransferDetailField_swigregister(CTORATstpPeripheryPositionTransferDetailField)




#########################################查询外围系统资金转移流水############################################
class CTORATstpQryPeripheryFundTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPeripheryFundTransferDetailField_InvestorID_get, _traderapi.CTORATstpQryPeripheryFundTransferDetailField_InvestorID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpQryPeripheryFundTransferDetailField_DepartmentID_get, _traderapi.CTORATstpQryPeripheryFundTransferDetailField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpQryPeripheryFundTransferDetailField_AccountID_get, _traderapi.CTORATstpQryPeripheryFundTransferDetailField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpQryPeripheryFundTransferDetailField_CurrencyID_get, _traderapi.CTORATstpQryPeripheryFundTransferDetailField_CurrencyID_set)

	# 资金调拨方向
    TransferDirection = property(_traderapi.CTORATstpQryPeripheryFundTransferDetailField_TransferDirection_get, _traderapi.CTORATstpQryPeripheryFundTransferDetailField_TransferDirection_set)

    def __init__(self):
        _traderapi.CTORATstpQryPeripheryFundTransferDetailField_swiginit(self, _traderapi.new_CTORATstpQryPeripheryFundTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPeripheryFundTransferDetailField

# Register CTORATstpQryPeripheryFundTransferDetailField in _traderapi:
_traderapi.CTORATstpQryPeripheryFundTransferDetailField_swigregister(CTORATstpQryPeripheryFundTransferDetailField)




#########################################外围系统资金转移流水############################################
class CTORATstpPeripheryFundTransferDetailField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 转账流水号
    FundSerial = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_FundSerial_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_FundSerial_set)

	# 申请流水号
    ApplySerial = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_ApplySerial_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_ApplySerial_set)

	# 前置编号
    FrontID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_FrontID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_FrontID_set)

	# 会话编号
    SessionID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_SessionID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_SessionID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_DepartmentID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_DepartmentID_set)

	# 资金账户代码
    AccountID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_AccountID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_AccountID_set)

	# 币种
    CurrencyID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_CurrencyID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_CurrencyID_set)

	# 转移方向
    TransferDirection = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_TransferDirection_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_TransferDirection_set)

	# 出入金金额
    Amount = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_Amount_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_Amount_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_InvestorID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_InvestorID_set)

	# 转移状态
    TransferStatus = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_TransferStatus_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_TransferStatus_set)

	# 资金调拨原因
    TransferReason = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_TransferReason_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_TransferReason_set)

	# 操作日期
    OperateDate = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_OperateDate_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_OperateDate_set)

	# 操作时间
    OperateTime = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_OperateTime_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_OperateTime_set)

	# 冲正日期
    RepealDate = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_RepealDate_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_RepealDate_set)

	# 冲正时间
    RepealTime = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_RepealTime_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_RepealTime_set)

	# 冲正原因
    RepealReason = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_RepealReason_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_RepealReason_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_StatusMsg_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_StatusMsg_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPeripheryFundTransferDetailField_BusinessUnitID_get, _traderapi.CTORATstpPeripheryFundTransferDetailField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpPeripheryFundTransferDetailField_swiginit(self, _traderapi.new_CTORATstpPeripheryFundTransferDetailField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPeripheryFundTransferDetailField

# Register CTORATstpPeripheryFundTransferDetailField in _traderapi:
_traderapi.CTORATstpPeripheryFundTransferDetailField_swigregister(CTORATstpPeripheryFundTransferDetailField)




#########################################查询债券转股信息############################################
class CTORATstpQryBondConversionInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryBondConversionInfoField_ExchangeID_get, _traderapi.CTORATstpQryBondConversionInfoField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryBondConversionInfoField_SecurityID_get, _traderapi.CTORATstpQryBondConversionInfoField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryBondConversionInfoField_swiginit(self, _traderapi.new_CTORATstpQryBondConversionInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryBondConversionInfoField

# Register CTORATstpQryBondConversionInfoField in _traderapi:
_traderapi.CTORATstpQryBondConversionInfoField_swigregister(CTORATstpQryBondConversionInfoField)




#########################################债券转股信息############################################
class CTORATstpBondConversionInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpBondConversionInfoField_ExchangeID_get, _traderapi.CTORATstpBondConversionInfoField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpBondConversionInfoField_MarketID_get, _traderapi.CTORATstpBondConversionInfoField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpBondConversionInfoField_SecurityID_get, _traderapi.CTORATstpBondConversionInfoField_SecurityID_set)

	# 转股申报代码
    ConvertOrderID = property(_traderapi.CTORATstpBondConversionInfoField_ConvertOrderID_get, _traderapi.CTORATstpBondConversionInfoField_ConvertOrderID_set)

	# 转股价格
    ConvertPrice = property(_traderapi.CTORATstpBondConversionInfoField_ConvertPrice_get, _traderapi.CTORATstpBondConversionInfoField_ConvertPrice_set)

	# 每次可以转股最小交易单位
    ConvertVolUnit = property(_traderapi.CTORATstpBondConversionInfoField_ConvertVolUnit_get, _traderapi.CTORATstpBondConversionInfoField_ConvertVolUnit_set)

	# 证券可以转股的最大数量
    ConvertVolMax = property(_traderapi.CTORATstpBondConversionInfoField_ConvertVolMax_get, _traderapi.CTORATstpBondConversionInfoField_ConvertVolMax_set)

	# 证券可以转股的最小数量
    ConvertVolMin = property(_traderapi.CTORATstpBondConversionInfoField_ConvertVolMin_get, _traderapi.CTORATstpBondConversionInfoField_ConvertVolMin_set)

	# 转股开始日期
    BeginDate = property(_traderapi.CTORATstpBondConversionInfoField_BeginDate_get, _traderapi.CTORATstpBondConversionInfoField_BeginDate_set)

	# 转股截至日期
    EndDate = property(_traderapi.CTORATstpBondConversionInfoField_EndDate_get, _traderapi.CTORATstpBondConversionInfoField_EndDate_set)

	# 转股名称
    ConvertName = property(_traderapi.CTORATstpBondConversionInfoField_ConvertName_get, _traderapi.CTORATstpBondConversionInfoField_ConvertName_set)

    def __init__(self):
        _traderapi.CTORATstpBondConversionInfoField_swiginit(self, _traderapi.new_CTORATstpBondConversionInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpBondConversionInfoField

# Register CTORATstpBondConversionInfoField in _traderapi:
_traderapi.CTORATstpBondConversionInfoField_swigregister(CTORATstpBondConversionInfoField)




#########################################查询债券回售信息############################################
class CTORATstpQryBondPutbackInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryBondPutbackInfoField_ExchangeID_get, _traderapi.CTORATstpQryBondPutbackInfoField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryBondPutbackInfoField_SecurityID_get, _traderapi.CTORATstpQryBondPutbackInfoField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryBondPutbackInfoField_swiginit(self, _traderapi.new_CTORATstpQryBondPutbackInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryBondPutbackInfoField

# Register CTORATstpQryBondPutbackInfoField in _traderapi:
_traderapi.CTORATstpQryBondPutbackInfoField_swigregister(CTORATstpQryBondPutbackInfoField)




#########################################债券回售信息############################################
class CTORATstpBondPutbackInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpBondPutbackInfoField_ExchangeID_get, _traderapi.CTORATstpBondPutbackInfoField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpBondPutbackInfoField_MarketID_get, _traderapi.CTORATstpBondPutbackInfoField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpBondPutbackInfoField_SecurityID_get, _traderapi.CTORATstpBondPutbackInfoField_SecurityID_set)

	# 回售申报代码
    PutbackOrderID = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackOrderID_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackOrderID_set)

	# 回售名称
    PutbackName = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackName_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackName_set)

	# 回售价格
    PutbackPrice = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackPrice_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackPrice_set)

	# 每次可以回售最小交易单位
    PutbackVolUnit = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackVolUnit_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackVolUnit_set)

	# 债券可以回售的最大数量
    PutbackVolMax = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackVolMax_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackVolMax_set)

	# 债券可以回售的最小数量
    PutbackVolMin = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackVolMin_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackVolMin_set)

	# 回售开始日期
    PutbackBeginDate = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackBeginDate_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackBeginDate_set)

	# 回售结束日期
    PutbackEndDate = property(_traderapi.CTORATstpBondPutbackInfoField_PutbackEndDate_get, _traderapi.CTORATstpBondPutbackInfoField_PutbackEndDate_set)

	# 回售撤销开始日期
    RelieveBeginDate = property(_traderapi.CTORATstpBondPutbackInfoField_RelieveBeginDate_get, _traderapi.CTORATstpBondPutbackInfoField_RelieveBeginDate_set)

	# 回售撤销结束日期
    RelieveEndDate = property(_traderapi.CTORATstpBondPutbackInfoField_RelieveEndDate_get, _traderapi.CTORATstpBondPutbackInfoField_RelieveEndDate_set)

    def __init__(self):
        _traderapi.CTORATstpBondPutbackInfoField_swiginit(self, _traderapi.new_CTORATstpBondPutbackInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpBondPutbackInfoField

# Register CTORATstpBondPutbackInfoField in _traderapi:
_traderapi.CTORATstpBondPutbackInfoField_swigregister(CTORATstpBondPutbackInfoField)




#########################################查询投资者条件单限制参数############################################
class CTORATstpQryInvestorCondOrderLimitParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryInvestorCondOrderLimitParamField_InvestorID_get, _traderapi.CTORATstpQryInvestorCondOrderLimitParamField_InvestorID_set)

    def __init__(self):
        _traderapi.CTORATstpQryInvestorCondOrderLimitParamField_swiginit(self, _traderapi.new_CTORATstpQryInvestorCondOrderLimitParamField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryInvestorCondOrderLimitParamField

# Register CTORATstpQryInvestorCondOrderLimitParamField in _traderapi:
_traderapi.CTORATstpQryInvestorCondOrderLimitParamField_swigregister(CTORATstpQryInvestorCondOrderLimitParamField)




#########################################投资者条件单限制参数############################################
class CTORATstpInvestorCondOrderLimitParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInvestorCondOrderLimitParamField_InvestorID_get, _traderapi.CTORATstpInvestorCondOrderLimitParamField_InvestorID_set)

	# 最大条件单数
    MaxCondOrderLimitCnt = property(_traderapi.CTORATstpInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_get, _traderapi.CTORATstpInvestorCondOrderLimitParamField_MaxCondOrderLimitCnt_set)

	# 当前条件单数
    CurrCondOrderCnt = property(_traderapi.CTORATstpInvestorCondOrderLimitParamField_CurrCondOrderCnt_get, _traderapi.CTORATstpInvestorCondOrderLimitParamField_CurrCondOrderCnt_set)

    def __init__(self):
        _traderapi.CTORATstpInvestorCondOrderLimitParamField_swiginit(self, _traderapi.new_CTORATstpInvestorCondOrderLimitParamField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInvestorCondOrderLimitParamField

# Register CTORATstpInvestorCondOrderLimitParamField in _traderapi:
_traderapi.CTORATstpInvestorCondOrderLimitParamField_swigregister(CTORATstpInvestorCondOrderLimitParamField)




#########################################查询条件单############################################
class CTORATstpQryConditionOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryConditionOrderField_ExchangeID_get, _traderapi.CTORATstpQryConditionOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryConditionOrderField_InvestorID_get, _traderapi.CTORATstpQryConditionOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryConditionOrderField_BusinessUnitID_get, _traderapi.CTORATstpQryConditionOrderField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryConditionOrderField_SecurityID_get, _traderapi.CTORATstpQryConditionOrderField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryConditionOrderField_ShareholderID_get, _traderapi.CTORATstpQryConditionOrderField_ShareholderID_set)

	# 报单编号
    CondOrderID = property(_traderapi.CTORATstpQryConditionOrderField_CondOrderID_get, _traderapi.CTORATstpQryConditionOrderField_CondOrderID_set)

	# Insert Time
    InsertTimeStart = property(_traderapi.CTORATstpQryConditionOrderField_InsertTimeStart_get, _traderapi.CTORATstpQryConditionOrderField_InsertTimeStart_set)

	# Insert Time
    InsertTimeEnd = property(_traderapi.CTORATstpQryConditionOrderField_InsertTimeEnd_get, _traderapi.CTORATstpQryConditionOrderField_InsertTimeEnd_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryConditionOrderField_SInfo_get, _traderapi.CTORATstpQryConditionOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryConditionOrderField_IInfo_get, _traderapi.CTORATstpQryConditionOrderField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpQryConditionOrderField_swiginit(self, _traderapi.new_CTORATstpQryConditionOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryConditionOrderField

# Register CTORATstpQryConditionOrderField in _traderapi:
_traderapi.CTORATstpQryConditionOrderField_swigregister(CTORATstpQryConditionOrderField)




#########################################查询条件单撤单############################################
class CTORATstpQryCondOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryCondOrderActionField_ExchangeID_get, _traderapi.CTORATstpQryCondOrderActionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryCondOrderActionField_InvestorID_get, _traderapi.CTORATstpQryCondOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryCondOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpQryCondOrderActionField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryCondOrderActionField_ShareholderID_get, _traderapi.CTORATstpQryCondOrderActionField_ShareholderID_set)

	# 被撤条件单编号
    CondOrderID = property(_traderapi.CTORATstpQryCondOrderActionField_CondOrderID_get, _traderapi.CTORATstpQryCondOrderActionField_CondOrderID_set)

	# 条件单撤单编号
    CancelCondOrderID = property(_traderapi.CTORATstpQryCondOrderActionField_CancelCondOrderID_get, _traderapi.CTORATstpQryCondOrderActionField_CancelCondOrderID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryCondOrderActionField_SInfo_get, _traderapi.CTORATstpQryCondOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryCondOrderActionField_IInfo_get, _traderapi.CTORATstpQryCondOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpQryCondOrderActionField_swiginit(self, _traderapi.new_CTORATstpQryCondOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryCondOrderActionField

# Register CTORATstpQryCondOrderActionField in _traderapi:
_traderapi.CTORATstpQryCondOrderActionField_swigregister(CTORATstpQryCondOrderActionField)




#########################################条件单撤单############################################
class CTORATstpCondOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpCondOrderActionField_ExchangeID_get, _traderapi.CTORATstpCondOrderActionField_ExchangeID_set)

	# 被撤条件单前置编号
    FrontID = property(_traderapi.CTORATstpCondOrderActionField_FrontID_get, _traderapi.CTORATstpCondOrderActionField_FrontID_set)

	# 被撤条件单会话编号
    SessionID = property(_traderapi.CTORATstpCondOrderActionField_SessionID_get, _traderapi.CTORATstpCondOrderActionField_SessionID_set)

	# 被撤条件单引用
    CondOrderRef = property(_traderapi.CTORATstpCondOrderActionField_CondOrderRef_get, _traderapi.CTORATstpCondOrderActionField_CondOrderRef_set)

	# 被撤条件单编号
    CondOrderID = property(_traderapi.CTORATstpCondOrderActionField_CondOrderID_get, _traderapi.CTORATstpCondOrderActionField_CondOrderID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpCondOrderActionField_ActionFlag_get, _traderapi.CTORATstpCondOrderActionField_ActionFlag_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpCondOrderActionField_Operway_get, _traderapi.CTORATstpCondOrderActionField_Operway_set)

	# 条件单操作引用
    CondOrderActionRef = property(_traderapi.CTORATstpCondOrderActionField_CondOrderActionRef_get, _traderapi.CTORATstpCondOrderActionField_CondOrderActionRef_set)

	# 条件单撤单编号
    CancelCondOrderID = property(_traderapi.CTORATstpCondOrderActionField_CancelCondOrderID_get, _traderapi.CTORATstpCondOrderActionField_CancelCondOrderID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpCondOrderActionField_SInfo_get, _traderapi.CTORATstpCondOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpCondOrderActionField_IInfo_get, _traderapi.CTORATstpCondOrderActionField_IInfo_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpCondOrderActionField_RequestID_get, _traderapi.CTORATstpCondOrderActionField_RequestID_set)

	# 撤单前置编号
    ActionFrontID = property(_traderapi.CTORATstpCondOrderActionField_ActionFrontID_get, _traderapi.CTORATstpCondOrderActionField_ActionFrontID_set)

	# 撤单会话编号
    ActionSessionID = property(_traderapi.CTORATstpCondOrderActionField_ActionSessionID_get, _traderapi.CTORATstpCondOrderActionField_ActionSessionID_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpCondOrderActionField_DepartmentID_get, _traderapi.CTORATstpCondOrderActionField_DepartmentID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpCondOrderActionField_InvestorID_get, _traderapi.CTORATstpCondOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpCondOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpCondOrderActionField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpCondOrderActionField_ShareholderID_get, _traderapi.CTORATstpCondOrderActionField_ShareholderID_set)

	# 操作用户
    ActionUser = property(_traderapi.CTORATstpCondOrderActionField_ActionUser_get, _traderapi.CTORATstpCondOrderActionField_ActionUser_set)

	# 操作日期
    ActionDate = property(_traderapi.CTORATstpCondOrderActionField_ActionDate_get, _traderapi.CTORATstpCondOrderActionField_ActionDate_set)

	# 操作时间
    ActionTime = property(_traderapi.CTORATstpCondOrderActionField_ActionTime_get, _traderapi.CTORATstpCondOrderActionField_ActionTime_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpCondOrderActionField_IPAddress_get, _traderapi.CTORATstpCondOrderActionField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpCondOrderActionField_MacAddress_get, _traderapi.CTORATstpCondOrderActionField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpCondOrderActionField_swiginit(self, _traderapi.new_CTORATstpCondOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpCondOrderActionField

# Register CTORATstpCondOrderActionField in _traderapi:
_traderapi.CTORATstpCondOrderActionField_swigregister(CTORATstpCondOrderActionField)




#########################################查询交易通知############################################
class CTORATstpQryTradingNoticeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryTradingNoticeField_InvestorID_get, _traderapi.CTORATstpQryTradingNoticeField_InvestorID_set)

	# Insert Date
    InsertDateStart = property(_traderapi.CTORATstpQryTradingNoticeField_InsertDateStart_get, _traderapi.CTORATstpQryTradingNoticeField_InsertDateStart_set)

	# Insert Date
    InsertDateEnd = property(_traderapi.CTORATstpQryTradingNoticeField_InsertDateEnd_get, _traderapi.CTORATstpQryTradingNoticeField_InsertDateEnd_set)

	# Insert Time
    InsertTimeStart = property(_traderapi.CTORATstpQryTradingNoticeField_InsertTimeStart_get, _traderapi.CTORATstpQryTradingNoticeField_InsertTimeStart_set)

	# Insert Time
    InsertTimeEnd = property(_traderapi.CTORATstpQryTradingNoticeField_InsertTimeEnd_get, _traderapi.CTORATstpQryTradingNoticeField_InsertTimeEnd_set)

    def __init__(self):
        _traderapi.CTORATstpQryTradingNoticeField_swiginit(self, _traderapi.new_CTORATstpQryTradingNoticeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryTradingNoticeField

# Register CTORATstpQryTradingNoticeField in _traderapi:
_traderapi.CTORATstpQryTradingNoticeField_swigregister(CTORATstpQryTradingNoticeField)




#########################################查询新股申购配号结果############################################
class CTORATstpQryIPONumberResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryIPONumberResultField_InvestorID_get, _traderapi.CTORATstpQryIPONumberResultField_InvestorID_set)

	# 申购代码
    SecurityID = property(_traderapi.CTORATstpQryIPONumberResultField_SecurityID_get, _traderapi.CTORATstpQryIPONumberResultField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryIPONumberResultField_ExchangeID_get, _traderapi.CTORATstpQryIPONumberResultField_ExchangeID_set)

	# 股东代码
    ShareholderID = property(_traderapi.CTORATstpQryIPONumberResultField_ShareholderID_get, _traderapi.CTORATstpQryIPONumberResultField_ShareholderID_set)

    def __init__(self):
        _traderapi.CTORATstpQryIPONumberResultField_swiginit(self, _traderapi.new_CTORATstpQryIPONumberResultField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryIPONumberResultField

# Register CTORATstpQryIPONumberResultField in _traderapi:
_traderapi.CTORATstpQryIPONumberResultField_swigregister(CTORATstpQryIPONumberResultField)




#########################################新股申购配号结果############################################
class CTORATstpIPONumberResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpIPONumberResultField_SecurityID_get, _traderapi.CTORATstpIPONumberResultField_SecurityID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpIPONumberResultField_MarketID_get, _traderapi.CTORATstpIPONumberResultField_MarketID_set)

	# 股东代码
    ShareholderID = property(_traderapi.CTORATstpIPONumberResultField_ShareholderID_get, _traderapi.CTORATstpIPONumberResultField_ShareholderID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpIPONumberResultField_ExchangeID_get, _traderapi.CTORATstpIPONumberResultField_ExchangeID_set)

	# 日期
    Day = property(_traderapi.CTORATstpIPONumberResultField_Day_get, _traderapi.CTORATstpIPONumberResultField_Day_set)

	# 申购证券名称
    SecurityName = property(_traderapi.CTORATstpIPONumberResultField_SecurityName_get, _traderapi.CTORATstpIPONumberResultField_SecurityName_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpIPONumberResultField_SecurityType_get, _traderapi.CTORATstpIPONumberResultField_SecurityType_set)

	# 起始配号
    BeginNumberID = property(_traderapi.CTORATstpIPONumberResultField_BeginNumberID_get, _traderapi.CTORATstpIPONumberResultField_BeginNumberID_set)

	# 配号数量
    Volume = property(_traderapi.CTORATstpIPONumberResultField_Volume_get, _traderapi.CTORATstpIPONumberResultField_Volume_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpIPONumberResultField_InvestorID_get, _traderapi.CTORATstpIPONumberResultField_InvestorID_set)

    def __init__(self):
        _traderapi.CTORATstpIPONumberResultField_swiginit(self, _traderapi.new_CTORATstpIPONumberResultField())
    __swig_destroy__ = _traderapi.delete_CTORATstpIPONumberResultField

# Register CTORATstpIPONumberResultField in _traderapi:
_traderapi.CTORATstpIPONumberResultField_swigregister(CTORATstpIPONumberResultField)




#########################################查询新股申购中签结果############################################
class CTORATstpQryIPOMatchNumberResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryIPOMatchNumberResultField_InvestorID_get, _traderapi.CTORATstpQryIPOMatchNumberResultField_InvestorID_set)

	# 申购代码
    SecurityID = property(_traderapi.CTORATstpQryIPOMatchNumberResultField_SecurityID_get, _traderapi.CTORATstpQryIPOMatchNumberResultField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryIPOMatchNumberResultField_ExchangeID_get, _traderapi.CTORATstpQryIPOMatchNumberResultField_ExchangeID_set)

	# 股东代码
    ShareholderID = property(_traderapi.CTORATstpQryIPOMatchNumberResultField_ShareholderID_get, _traderapi.CTORATstpQryIPOMatchNumberResultField_ShareholderID_set)

	# 中签配号
    MatchNumberID = property(_traderapi.CTORATstpQryIPOMatchNumberResultField_MatchNumberID_get, _traderapi.CTORATstpQryIPOMatchNumberResultField_MatchNumberID_set)

    def __init__(self):
        _traderapi.CTORATstpQryIPOMatchNumberResultField_swiginit(self, _traderapi.new_CTORATstpQryIPOMatchNumberResultField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryIPOMatchNumberResultField

# Register CTORATstpQryIPOMatchNumberResultField in _traderapi:
_traderapi.CTORATstpQryIPOMatchNumberResultField_swigregister(CTORATstpQryIPOMatchNumberResultField)




#########################################新股申购中签结果############################################
class CTORATstpIPOMatchNumberResultField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpIPOMatchNumberResultField_SecurityID_get, _traderapi.CTORATstpIPOMatchNumberResultField_SecurityID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpIPOMatchNumberResultField_MarketID_get, _traderapi.CTORATstpIPOMatchNumberResultField_MarketID_set)

	# 股东代码
    ShareholderID = property(_traderapi.CTORATstpIPOMatchNumberResultField_ShareholderID_get, _traderapi.CTORATstpIPOMatchNumberResultField_ShareholderID_set)

	# 中签配号
    MatchNumberID = property(_traderapi.CTORATstpIPOMatchNumberResultField_MatchNumberID_get, _traderapi.CTORATstpIPOMatchNumberResultField_MatchNumberID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpIPOMatchNumberResultField_ExchangeID_get, _traderapi.CTORATstpIPOMatchNumberResultField_ExchangeID_set)

	# 日期
    Day = property(_traderapi.CTORATstpIPOMatchNumberResultField_Day_get, _traderapi.CTORATstpIPOMatchNumberResultField_Day_set)

	# 申购证券名称
    SecurityName = property(_traderapi.CTORATstpIPOMatchNumberResultField_SecurityName_get, _traderapi.CTORATstpIPOMatchNumberResultField_SecurityName_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpIPOMatchNumberResultField_SecurityType_get, _traderapi.CTORATstpIPOMatchNumberResultField_SecurityType_set)

	# 此中签号拥有的证券数量
    Volume = property(_traderapi.CTORATstpIPOMatchNumberResultField_Volume_get, _traderapi.CTORATstpIPOMatchNumberResultField_Volume_set)

	# 申购价格
    Price = property(_traderapi.CTORATstpIPOMatchNumberResultField_Price_get, _traderapi.CTORATstpIPOMatchNumberResultField_Price_set)

	# 申购金额
    Amout = property(_traderapi.CTORATstpIPOMatchNumberResultField_Amout_get, _traderapi.CTORATstpIPOMatchNumberResultField_Amout_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpIPOMatchNumberResultField_InvestorID_get, _traderapi.CTORATstpIPOMatchNumberResultField_InvestorID_set)

    def __init__(self):
        _traderapi.CTORATstpIPOMatchNumberResultField_swiginit(self, _traderapi.new_CTORATstpIPOMatchNumberResultField())
    __swig_destroy__ = _traderapi.delete_CTORATstpIPOMatchNumberResultField

# Register CTORATstpIPOMatchNumberResultField in _traderapi:
_traderapi.CTORATstpIPOMatchNumberResultField_swigregister(CTORATstpIPOMatchNumberResultField)




#########################################查询交易协议############################################
class CTORATstpQryShareholderSpecPrivilegeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_InvestorID_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_InvestorID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_ExchangeID_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_ExchangeID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_ShareholderID_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_ShareholderID_set)

	# 特殊权限类别
    SpecPrivilegeType = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_SpecPrivilegeType_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_SpecPrivilegeType_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_Direction_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_Direction_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryShareholderSpecPrivilegeField_MarketID_get, _traderapi.CTORATstpQryShareholderSpecPrivilegeField_MarketID_set)

    def __init__(self):
        _traderapi.CTORATstpQryShareholderSpecPrivilegeField_swiginit(self, _traderapi.new_CTORATstpQryShareholderSpecPrivilegeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryShareholderSpecPrivilegeField

# Register CTORATstpQryShareholderSpecPrivilegeField in _traderapi:
_traderapi.CTORATstpQryShareholderSpecPrivilegeField_swigregister(CTORATstpQryShareholderSpecPrivilegeField)




#########################################交易协议############################################
class CTORATstpShareholderSpecPrivilegeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_ExchangeID_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_ExchangeID_set)

	# 交易账户代码
    ShareholderID = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_ShareholderID_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_ShareholderID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_MarketID_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_MarketID_set)

	# 特殊权限类别
    SpecPrivilegeType = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_SpecPrivilegeType_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_SpecPrivilegeType_set)

	# 报单类别
    Direction = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_Direction_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_Direction_set)

	# 是否禁止
    bForbidden = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_bForbidden_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_bForbidden_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpShareholderSpecPrivilegeField_InvestorID_get, _traderapi.CTORATstpShareholderSpecPrivilegeField_InvestorID_set)

    def __init__(self):
        _traderapi.CTORATstpShareholderSpecPrivilegeField_swiginit(self, _traderapi.new_CTORATstpShareholderSpecPrivilegeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpShareholderSpecPrivilegeField

# Register CTORATstpShareholderSpecPrivilegeField in _traderapi:
_traderapi.CTORATstpShareholderSpecPrivilegeField_swigregister(CTORATstpShareholderSpecPrivilegeField)




#########################################查询市场############################################
class CTORATstpQryMarketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryMarketField_ExchangeID_get, _traderapi.CTORATstpQryMarketField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryMarketField_MarketID_get, _traderapi.CTORATstpQryMarketField_MarketID_set)

    def __init__(self):
        _traderapi.CTORATstpQryMarketField_swiginit(self, _traderapi.new_CTORATstpQryMarketField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryMarketField

# Register CTORATstpQryMarketField in _traderapi:
_traderapi.CTORATstpQryMarketField_swigregister(CTORATstpQryMarketField)




#########################################市场############################################
class CTORATstpMarketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 市场代码
    MarketID = property(_traderapi.CTORATstpMarketField_MarketID_get, _traderapi.CTORATstpMarketField_MarketID_set)

	# 市场名称
    MarketName = property(_traderapi.CTORATstpMarketField_MarketName_get, _traderapi.CTORATstpMarketField_MarketName_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpMarketField_ExchangeID_get, _traderapi.CTORATstpMarketField_ExchangeID_set)

	# 市场状态
    MarketStatus = property(_traderapi.CTORATstpMarketField_MarketStatus_get, _traderapi.CTORATstpMarketField_MarketStatus_set)

    def __init__(self):
        _traderapi.CTORATstpMarketField_swiginit(self, _traderapi.new_CTORATstpMarketField())
    __swig_destroy__ = _traderapi.delete_CTORATstpMarketField

# Register CTORATstpMarketField in _traderapi:
_traderapi.CTORATstpMarketField_swigregister(CTORATstpMarketField)




#########################################查询ETF清单信息############################################
class CTORATstpQryETFFileField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryETFFileField_ExchangeID_get, _traderapi.CTORATstpQryETFFileField_ExchangeID_set)

	# ETF二级市场交易代码
    ETFSecurityID = property(_traderapi.CTORATstpQryETFFileField_ETFSecurityID_get, _traderapi.CTORATstpQryETFFileField_ETFSecurityID_set)

	# ETF一级市场申赎代码
    ETFCreRedSecurityID = property(_traderapi.CTORATstpQryETFFileField_ETFCreRedSecurityID_get, _traderapi.CTORATstpQryETFFileField_ETFCreRedSecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryETFFileField_swiginit(self, _traderapi.new_CTORATstpQryETFFileField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryETFFileField

# Register CTORATstpQryETFFileField in _traderapi:
_traderapi.CTORATstpQryETFFileField_swigregister(CTORATstpQryETFFileField)




#########################################ETF清单信息############################################
class CTORATstpETFFileField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易日
    TradingDay = property(_traderapi.CTORATstpETFFileField_TradingDay_get, _traderapi.CTORATstpETFFileField_TradingDay_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpETFFileField_ExchangeID_get, _traderapi.CTORATstpETFFileField_ExchangeID_set)

	# ETF交易代码
    ETFSecurityID = property(_traderapi.CTORATstpETFFileField_ETFSecurityID_get, _traderapi.CTORATstpETFFileField_ETFSecurityID_set)

	# ETF申赎代码
    ETFCreRedSecurityID = property(_traderapi.CTORATstpETFFileField_ETFCreRedSecurityID_get, _traderapi.CTORATstpETFFileField_ETFCreRedSecurityID_set)

	# 最小申购赎回单位份数
    CreationRedemptionUnit = property(_traderapi.CTORATstpETFFileField_CreationRedemptionUnit_get, _traderapi.CTORATstpETFFileField_CreationRedemptionUnit_set)

	# 最大现金替代比例
    Maxcashratio = property(_traderapi.CTORATstpETFFileField_Maxcashratio_get, _traderapi.CTORATstpETFFileField_Maxcashratio_set)

	# 预估现金差额
    EstimateCashComponent = property(_traderapi.CTORATstpETFFileField_EstimateCashComponent_get, _traderapi.CTORATstpETFFileField_EstimateCashComponent_set)

	# 前一交易日现金差额
    CashComponent = property(_traderapi.CTORATstpETFFileField_CashComponent_get, _traderapi.CTORATstpETFFileField_CashComponent_set)

	# 前一交易日基金单位净值
    NAV = property(_traderapi.CTORATstpETFFileField_NAV_get, _traderapi.CTORATstpETFFileField_NAV_set)

	# 前一交易日申赎基准单位净值
    NAVperCU = property(_traderapi.CTORATstpETFFileField_NAVperCU_get, _traderapi.CTORATstpETFFileField_NAVperCU_set)

	# 当日申购赎回基准单位的红利金额
    DividendPerCU = property(_traderapi.CTORATstpETFFileField_DividendPerCU_get, _traderapi.CTORATstpETFFileField_DividendPerCU_set)

	# ETF申赎类型
    ETFCreRedType = property(_traderapi.CTORATstpETFFileField_ETFCreRedType_get, _traderapi.CTORATstpETFFileField_ETFCreRedType_set)

	# ETF证券名称
    ETFSecurityName = property(_traderapi.CTORATstpETFFileField_ETFSecurityName_get, _traderapi.CTORATstpETFFileField_ETFSecurityName_set)

    def __init__(self):
        _traderapi.CTORATstpETFFileField_swiginit(self, _traderapi.new_CTORATstpETFFileField())
    __swig_destroy__ = _traderapi.delete_CTORATstpETFFileField

# Register CTORATstpETFFileField in _traderapi:
_traderapi.CTORATstpETFFileField_swigregister(CTORATstpETFFileField)




#########################################查询ETF成份证券信息############################################
class CTORATstpQryETFBasketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryETFBasketField_ExchangeID_get, _traderapi.CTORATstpQryETFBasketField_ExchangeID_set)

	# ETF二级市场交易代码
    ETFSecurityID = property(_traderapi.CTORATstpQryETFBasketField_ETFSecurityID_get, _traderapi.CTORATstpQryETFBasketField_ETFSecurityID_set)

	# ETF成份证券代码
    SecurityID = property(_traderapi.CTORATstpQryETFBasketField_SecurityID_get, _traderapi.CTORATstpQryETFBasketField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryETFBasketField_swiginit(self, _traderapi.new_CTORATstpQryETFBasketField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryETFBasketField

# Register CTORATstpQryETFBasketField in _traderapi:
_traderapi.CTORATstpQryETFBasketField_swigregister(CTORATstpQryETFBasketField)




#########################################ETF成份证券信息############################################
class CTORATstpETFBasketField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易日
    TradingDay = property(_traderapi.CTORATstpETFBasketField_TradingDay_get, _traderapi.CTORATstpETFBasketField_TradingDay_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpETFBasketField_ExchangeID_get, _traderapi.CTORATstpETFBasketField_ExchangeID_set)

	# ETF交易代码
    ETFSecurityID = property(_traderapi.CTORATstpETFBasketField_ETFSecurityID_get, _traderapi.CTORATstpETFBasketField_ETFSecurityID_set)

	# ETF成份证券代码
    SecurityID = property(_traderapi.CTORATstpETFBasketField_SecurityID_get, _traderapi.CTORATstpETFBasketField_SecurityID_set)

	# 成分证券名称
    SecurityName = property(_traderapi.CTORATstpETFBasketField_SecurityName_get, _traderapi.CTORATstpETFBasketField_SecurityName_set)

	# 成分证券数量
    Volume = property(_traderapi.CTORATstpETFBasketField_Volume_get, _traderapi.CTORATstpETFBasketField_Volume_set)

	# 现金替代标志
    ETFCurrenceReplaceStatus = property(_traderapi.CTORATstpETFBasketField_ETFCurrenceReplaceStatus_get, _traderapi.CTORATstpETFBasketField_ETFCurrenceReplaceStatus_set)

	# 溢价比例
    Premium = property(_traderapi.CTORATstpETFBasketField_Premium_get, _traderapi.CTORATstpETFBasketField_Premium_set)

	# 申购替代金额
    CreationReplaceAmount = property(_traderapi.CTORATstpETFBasketField_CreationReplaceAmount_get, _traderapi.CTORATstpETFBasketField_CreationReplaceAmount_set)

	# 赎回替代金额
    RedemptionReplaceAmount = property(_traderapi.CTORATstpETFBasketField_RedemptionReplaceAmount_get, _traderapi.CTORATstpETFBasketField_RedemptionReplaceAmount_set)

	# 挂牌市场
    MarketID = property(_traderapi.CTORATstpETFBasketField_MarketID_get, _traderapi.CTORATstpETFBasketField_MarketID_set)

	# ETF申赎类型
    ETFCreRedType = property(_traderapi.CTORATstpETFBasketField_ETFCreRedType_get, _traderapi.CTORATstpETFBasketField_ETFCreRedType_set)

    def __init__(self):
        _traderapi.CTORATstpETFBasketField_swiginit(self, _traderapi.new_CTORATstpETFBasketField())
    __swig_destroy__ = _traderapi.delete_CTORATstpETFBasketField

# Register CTORATstpETFBasketField in _traderapi:
_traderapi.CTORATstpETFBasketField_swigregister(CTORATstpETFBasketField)




#########################################查询投资者限仓信息############################################
class CTORATstpQryInvestorPositionLimitField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryInvestorPositionLimitField_ExchangeID_get, _traderapi.CTORATstpQryInvestorPositionLimitField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryInvestorPositionLimitField_InvestorID_get, _traderapi.CTORATstpQryInvestorPositionLimitField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryInvestorPositionLimitField_SecurityID_get, _traderapi.CTORATstpQryInvestorPositionLimitField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryInvestorPositionLimitField_swiginit(self, _traderapi.new_CTORATstpQryInvestorPositionLimitField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryInvestorPositionLimitField

# Register CTORATstpQryInvestorPositionLimitField in _traderapi:
_traderapi.CTORATstpQryInvestorPositionLimitField_swigregister(CTORATstpQryInvestorPositionLimitField)




#########################################投资者限仓信息############################################
class CTORATstpInvestorPositionLimitField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpInvestorPositionLimitField_ExchangeID_get, _traderapi.CTORATstpInvestorPositionLimitField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpInvestorPositionLimitField_InvestorID_get, _traderapi.CTORATstpInvestorPositionLimitField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpInvestorPositionLimitField_SecurityID_get, _traderapi.CTORATstpInvestorPositionLimitField_SecurityID_set)

	# 当日买入额度
    BuyLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_BuyLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_BuyLimit_set)

	# 已使用当日买入额度
    BuyFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_BuyFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_BuyFrozen_set)

	# 当日卖出额度
    SellLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_SellLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_SellLimit_set)

	# 已使用当日卖出额度
    SellFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_SellFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_SellFrozen_set)

	# 当日申购额度
    PurchaseLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_PurchaseLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_PurchaseLimit_set)

	# 已使用当日申购额度
    PurchaseFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_PurchaseFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_PurchaseFrozen_set)

	# 当日赎回额度
    RedeemLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_RedeemLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_RedeemLimit_set)

	# 已使用当日赎回额度
    RedeemFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_RedeemFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_RedeemFrozen_set)

	# 当日质押入库额度
    PledgeInLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_PledgeInLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_PledgeInLimit_set)

	# 已使用当日质押入库额度
    PledgeInFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_PledgeInFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_PledgeInFrozen_set)

	# 当日质押出库额度
    PledgeOutLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_PledgeOutLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_PledgeOutLimit_set)

	# 已使用当日质押出库额度
    PledgeOutFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_PledgeOutFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_PledgeOutFrozen_set)

	# 当日债转股额度
    ConvertLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_ConvertLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_ConvertLimit_set)

	# 已使用当日债转股额度
    ConvertFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_ConvertFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_ConvertFrozen_set)

	# 当日债券回售额度
    PutbackLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_PutbackLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_PutbackLimit_set)

	# 已使用当日债券回售额度
    PutbackFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_PutbackFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_PutbackFrozen_set)

	# 当日配股配债额度
    RationalLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_RationalLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_RationalLimit_set)

	# 已使用当日配股配债额度
    RationalFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_RationalFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_RationalFrozen_set)

	# 总持仓额度
    TotalPositionLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_TotalPositionLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_TotalPositionLimit_set)

	# 已使用总持仓额度
    TotalPositionFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_TotalPositionFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_TotalPositionFrozen_set)

	# 当日拆分额度
    SplitLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_SplitLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_SplitLimit_set)

	# 已使用当日拆分额度
    SplitFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_SplitFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_SplitFrozen_set)

	# 当日合并额度
    MergeLimit = property(_traderapi.CTORATstpInvestorPositionLimitField_MergeLimit_get, _traderapi.CTORATstpInvestorPositionLimitField_MergeLimit_set)

	# 已使用当日合并额度
    MergeFrozen = property(_traderapi.CTORATstpInvestorPositionLimitField_MergeFrozen_get, _traderapi.CTORATstpInvestorPositionLimitField_MergeFrozen_set)

	# 通用统一个人识别码
    UUPIC = property(_traderapi.CTORATstpInvestorPositionLimitField_UUPIC_get, _traderapi.CTORATstpInvestorPositionLimitField_UUPIC_set)

    def __init__(self):
        _traderapi.CTORATstpInvestorPositionLimitField_swiginit(self, _traderapi.new_CTORATstpInvestorPositionLimitField())
    __swig_destroy__ = _traderapi.delete_CTORATstpInvestorPositionLimitField

# Register CTORATstpInvestorPositionLimitField in _traderapi:
_traderapi.CTORATstpInvestorPositionLimitField_swigregister(CTORATstpInvestorPositionLimitField)




#########################################查询深港通国际市场互联状态信息############################################
class CTORATstpQrySZSEImcParamsField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQrySZSEImcParamsField_MarketID_get, _traderapi.CTORATstpQrySZSEImcParamsField_MarketID_set)

    def __init__(self):
        _traderapi.CTORATstpQrySZSEImcParamsField_swiginit(self, _traderapi.new_CTORATstpQrySZSEImcParamsField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQrySZSEImcParamsField

# Register CTORATstpQrySZSEImcParamsField in _traderapi:
_traderapi.CTORATstpQrySZSEImcParamsField_swigregister(CTORATstpQrySZSEImcParamsField)




#########################################深港通国际市场互联状态信息############################################
class CTORATstpSZSEImcParamsField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 市场代码
    MarketID = property(_traderapi.CTORATstpSZSEImcParamsField_MarketID_get, _traderapi.CTORATstpSZSEImcParamsField_MarketID_set)

	# 是否开放
    OpenFlag = property(_traderapi.CTORATstpSZSEImcParamsField_OpenFlag_get, _traderapi.CTORATstpSZSEImcParamsField_OpenFlag_set)

	# 初始额度
    ThresholdAmount = property(_traderapi.CTORATstpSZSEImcParamsField_ThresholdAmount_get, _traderapi.CTORATstpSZSEImcParamsField_ThresholdAmount_set)

	# 日中剩余额度
    PosAmt = property(_traderapi.CTORATstpSZSEImcParamsField_PosAmt_get, _traderapi.CTORATstpSZSEImcParamsField_PosAmt_set)

	# 额度是否可用
    AmountStatus = property(_traderapi.CTORATstpSZSEImcParamsField_AmountStatus_get, _traderapi.CTORATstpSZSEImcParamsField_AmountStatus_set)

    def __init__(self):
        _traderapi.CTORATstpSZSEImcParamsField_swiginit(self, _traderapi.new_CTORATstpSZSEImcParamsField())
    __swig_destroy__ = _traderapi.delete_CTORATstpSZSEImcParamsField

# Register CTORATstpSZSEImcParamsField in _traderapi:
_traderapi.CTORATstpSZSEImcParamsField_swigregister(CTORATstpSZSEImcParamsField)




#########################################查询深港通国际市场互联汇率信息############################################
class CTORATstpQrySZSEImcExchangeRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 源货币币种
    FromCurrency = property(_traderapi.CTORATstpQrySZSEImcExchangeRateField_FromCurrency_get, _traderapi.CTORATstpQrySZSEImcExchangeRateField_FromCurrency_set)

	# 目标货币币种
    ToCurrency = property(_traderapi.CTORATstpQrySZSEImcExchangeRateField_ToCurrency_get, _traderapi.CTORATstpQrySZSEImcExchangeRateField_ToCurrency_set)

    def __init__(self):
        _traderapi.CTORATstpQrySZSEImcExchangeRateField_swiginit(self, _traderapi.new_CTORATstpQrySZSEImcExchangeRateField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQrySZSEImcExchangeRateField

# Register CTORATstpQrySZSEImcExchangeRateField in _traderapi:
_traderapi.CTORATstpQrySZSEImcExchangeRateField_swigregister(CTORATstpQrySZSEImcExchangeRateField)




#########################################深港通国际市场互联汇率信息############################################
class CTORATstpSZSEImcExchangeRateField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 源货币币种
    FromCurrency = property(_traderapi.CTORATstpSZSEImcExchangeRateField_FromCurrency_get, _traderapi.CTORATstpSZSEImcExchangeRateField_FromCurrency_set)

	# 目标货币币种
    ToCurrency = property(_traderapi.CTORATstpSZSEImcExchangeRateField_ToCurrency_get, _traderapi.CTORATstpSZSEImcExchangeRateField_ToCurrency_set)

	# 参考汇率买入价
    BidRate = property(_traderapi.CTORATstpSZSEImcExchangeRateField_BidRate_get, _traderapi.CTORATstpSZSEImcExchangeRateField_BidRate_set)

	# 参考汇率卖出价
    OfferRate = property(_traderapi.CTORATstpSZSEImcExchangeRateField_OfferRate_get, _traderapi.CTORATstpSZSEImcExchangeRateField_OfferRate_set)

	# 参考汇率中间价
    MidPointRate = property(_traderapi.CTORATstpSZSEImcExchangeRateField_MidPointRate_get, _traderapi.CTORATstpSZSEImcExchangeRateField_MidPointRate_set)

    def __init__(self):
        _traderapi.CTORATstpSZSEImcExchangeRateField_swiginit(self, _traderapi.new_CTORATstpSZSEImcExchangeRateField())
    __swig_destroy__ = _traderapi.delete_CTORATstpSZSEImcExchangeRateField

# Register CTORATstpSZSEImcExchangeRateField in _traderapi:
_traderapi.CTORATstpSZSEImcExchangeRateField_swigregister(CTORATstpSZSEImcExchangeRateField)




#########################################查询深港通最小价差信息############################################
class CTORATstpQrySZSEHKPriceTickInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 价差品种
    PriceTickID = property(_traderapi.CTORATstpQrySZSEHKPriceTickInfoField_PriceTickID_get, _traderapi.CTORATstpQrySZSEHKPriceTickInfoField_PriceTickID_set)

    def __init__(self):
        _traderapi.CTORATstpQrySZSEHKPriceTickInfoField_swiginit(self, _traderapi.new_CTORATstpQrySZSEHKPriceTickInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQrySZSEHKPriceTickInfoField

# Register CTORATstpQrySZSEHKPriceTickInfoField in _traderapi:
_traderapi.CTORATstpQrySZSEHKPriceTickInfoField_swigregister(CTORATstpQrySZSEHKPriceTickInfoField)




#########################################深港通最小价差信息############################################
class CTORATstpSZSEHKPriceTickInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 价差品种
    PriceTickID = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickID_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickID_set)

	# 价差组号
    PriceTickGroupID = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickGroupID_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickGroupID_set)

	# 价差类别
    PriceTickType = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickType_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTickType_set)

	# 价差组起始价格
    BeginPrice = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_BeginPrice_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_BeginPrice_set)

	# 价差组结束价格
    EndPrice = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_EndPrice_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_EndPrice_set)

	# 价差值
    PriceTick = property(_traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTick_get, _traderapi.CTORATstpSZSEHKPriceTickInfoField_PriceTick_set)

    def __init__(self):
        _traderapi.CTORATstpSZSEHKPriceTickInfoField_swiginit(self, _traderapi.new_CTORATstpSZSEHKPriceTickInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpSZSEHKPriceTickInfoField

# Register CTORATstpSZSEHKPriceTickInfoField in _traderapi:
_traderapi.CTORATstpSZSEHKPriceTickInfoField_swigregister(CTORATstpSZSEHKPriceTickInfoField)




#########################################查询LOF基金信息############################################
class CTORATstpQryLofFundInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryLofFundInfoField_ExchangeID_get, _traderapi.CTORATstpQryLofFundInfoField_ExchangeID_set)

	# 基金代码
    FundID = property(_traderapi.CTORATstpQryLofFundInfoField_FundID_get, _traderapi.CTORATstpQryLofFundInfoField_FundID_set)

	# 主基金代码
    MainFundID = property(_traderapi.CTORATstpQryLofFundInfoField_MainFundID_get, _traderapi.CTORATstpQryLofFundInfoField_MainFundID_set)

    def __init__(self):
        _traderapi.CTORATstpQryLofFundInfoField_swiginit(self, _traderapi.new_CTORATstpQryLofFundInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryLofFundInfoField

# Register CTORATstpQryLofFundInfoField in _traderapi:
_traderapi.CTORATstpQryLofFundInfoField_swigregister(CTORATstpQryLofFundInfoField)




#########################################LOF基金信息############################################
class CTORATstpLofFundInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpLofFundInfoField_ExchangeID_get, _traderapi.CTORATstpLofFundInfoField_ExchangeID_set)

	# 基金代码
    FundID = property(_traderapi.CTORATstpLofFundInfoField_FundID_get, _traderapi.CTORATstpLofFundInfoField_FundID_set)

	# 主基金代码
    MainFundID = property(_traderapi.CTORATstpLofFundInfoField_MainFundID_get, _traderapi.CTORATstpLofFundInfoField_MainFundID_set)

	# 基金类型
    FundType = property(_traderapi.CTORATstpLofFundInfoField_FundType_get, _traderapi.CTORATstpLofFundInfoField_FundType_set)

	# 拆分数量单位
    SplitUnit = property(_traderapi.CTORATstpLofFundInfoField_SplitUnit_get, _traderapi.CTORATstpLofFundInfoField_SplitUnit_set)

	# 最小拆分数量
    SplitMinVol = property(_traderapi.CTORATstpLofFundInfoField_SplitMinVol_get, _traderapi.CTORATstpLofFundInfoField_SplitMinVol_set)

	# 合并数量单位
    MergeUnit = property(_traderapi.CTORATstpLofFundInfoField_MergeUnit_get, _traderapi.CTORATstpLofFundInfoField_MergeUnit_set)

	# 最小合并数量
    MergeMinVol = property(_traderapi.CTORATstpLofFundInfoField_MergeMinVol_get, _traderapi.CTORATstpLofFundInfoField_MergeMinVol_set)

	# 基金转换系数
    FundRatio = property(_traderapi.CTORATstpLofFundInfoField_FundRatio_get, _traderapi.CTORATstpLofFundInfoField_FundRatio_set)

    def __init__(self):
        _traderapi.CTORATstpLofFundInfoField_swiginit(self, _traderapi.new_CTORATstpLofFundInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpLofFundInfoField

# Register CTORATstpLofFundInfoField in _traderapi:
_traderapi.CTORATstpLofFundInfoField_swigregister(CTORATstpLofFundInfoField)




#########################################查询投资者质押持仓############################################
class CTORATstpQryPledgePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPledgePositionField_InvestorID_get, _traderapi.CTORATstpQryPledgePositionField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPledgePositionField_SecurityID_get, _traderapi.CTORATstpQryPledgePositionField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPledgePositionField_ExchangeID_get, _traderapi.CTORATstpQryPledgePositionField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryPledgePositionField_MarketID_get, _traderapi.CTORATstpQryPledgePositionField_MarketID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryPledgePositionField_ShareholderID_get, _traderapi.CTORATstpQryPledgePositionField_ShareholderID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryPledgePositionField_BusinessUnitID_get, _traderapi.CTORATstpQryPledgePositionField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPledgePositionField_swiginit(self, _traderapi.new_CTORATstpQryPledgePositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPledgePositionField

# Register CTORATstpQryPledgePositionField in _traderapi:
_traderapi.CTORATstpQryPledgePositionField_swigregister(CTORATstpQryPledgePositionField)




#########################################投资者质押持仓############################################
class CTORATstpPledgePositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPledgePositionField_SecurityID_get, _traderapi.CTORATstpPledgePositionField_SecurityID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPledgePositionField_InvestorID_get, _traderapi.CTORATstpPledgePositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPledgePositionField_BusinessUnitID_get, _traderapi.CTORATstpPledgePositionField_BusinessUnitID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPledgePositionField_ExchangeID_get, _traderapi.CTORATstpPledgePositionField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPledgePositionField_MarketID_get, _traderapi.CTORATstpPledgePositionField_MarketID_set)

	# 客户代码
    ShareholderID = property(_traderapi.CTORATstpPledgePositionField_ShareholderID_get, _traderapi.CTORATstpPledgePositionField_ShareholderID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpPledgePositionField_TradingDay_get, _traderapi.CTORATstpPledgePositionField_TradingDay_set)

	# 昨日质押持仓
    HisPledgePos = property(_traderapi.CTORATstpPledgePositionField_HisPledgePos_get, _traderapi.CTORATstpPledgePositionField_HisPledgePos_set)

	# 昨日质押持仓冻结
    HisPledgePosFrozen = property(_traderapi.CTORATstpPledgePositionField_HisPledgePosFrozen_get, _traderapi.CTORATstpPledgePositionField_HisPledgePosFrozen_set)

	# 今日入库的质押持仓
    TodayPledgePos = property(_traderapi.CTORATstpPledgePositionField_TodayPledgePos_get, _traderapi.CTORATstpPledgePositionField_TodayPledgePos_set)

	# 今日入库的质押持仓冻结
    TodayPledgePosFrozen = property(_traderapi.CTORATstpPledgePositionField_TodayPledgePosFrozen_get, _traderapi.CTORATstpPledgePositionField_TodayPledgePosFrozen_set)

	# 昨日质押入库的现券总量
    PreTotalPledgePos = property(_traderapi.CTORATstpPledgePositionField_PreTotalPledgePos_get, _traderapi.CTORATstpPledgePositionField_PreTotalPledgePos_set)

	# 昨日质押入库的现券可用数量
    PreAvailablePledgePos = property(_traderapi.CTORATstpPledgePositionField_PreAvailablePledgePos_get, _traderapi.CTORATstpPledgePositionField_PreAvailablePledgePos_set)

    def __init__(self):
        _traderapi.CTORATstpPledgePositionField_swiginit(self, _traderapi.new_CTORATstpPledgePositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPledgePositionField

# Register CTORATstpPledgePositionField in _traderapi:
_traderapi.CTORATstpPledgePositionField_swigregister(CTORATstpPledgePositionField)




#########################################查询证券质押信息############################################
class CTORATstpQryPledgeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPledgeInfoField_ExchangeID_get, _traderapi.CTORATstpQryPledgeInfoField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPledgeInfoField_SecurityID_get, _traderapi.CTORATstpQryPledgeInfoField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPledgeInfoField_swiginit(self, _traderapi.new_CTORATstpQryPledgeInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPledgeInfoField

# Register CTORATstpQryPledgeInfoField in _traderapi:
_traderapi.CTORATstpQryPledgeInfoField_swigregister(CTORATstpQryPledgeInfoField)




#########################################证券质押信息############################################
class CTORATstpPledgeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPledgeInfoField_ExchangeID_get, _traderapi.CTORATstpPledgeInfoField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPledgeInfoField_MarketID_get, _traderapi.CTORATstpPledgeInfoField_MarketID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPledgeInfoField_SecurityID_get, _traderapi.CTORATstpPledgeInfoField_SecurityID_set)

	# 质押申报代码
    PledgeOrderID = property(_traderapi.CTORATstpPledgeInfoField_PledgeOrderID_get, _traderapi.CTORATstpPledgeInfoField_PledgeOrderID_set)

	# 质押名称
    PledgeName = property(_traderapi.CTORATstpPledgeInfoField_PledgeName_get, _traderapi.CTORATstpPledgeInfoField_PledgeName_set)

	# 标准券代码
    StandardBondID = property(_traderapi.CTORATstpPledgeInfoField_StandardBondID_get, _traderapi.CTORATstpPledgeInfoField_StandardBondID_set)

	# 标准券折算率/折算值
    ConversionRate = property(_traderapi.CTORATstpPledgeInfoField_ConversionRate_get, _traderapi.CTORATstpPledgeInfoField_ConversionRate_set)

	# 每次可以入库的最小交易单位
    PledgeInTradingUnit = property(_traderapi.CTORATstpPledgeInfoField_PledgeInTradingUnit_get, _traderapi.CTORATstpPledgeInfoField_PledgeInTradingUnit_set)

	# 每次可以出库的最小交易单位
    PledgeOutTradingUnit = property(_traderapi.CTORATstpPledgeInfoField_PledgeOutTradingUnit_get, _traderapi.CTORATstpPledgeInfoField_PledgeOutTradingUnit_set)

	# 证券可以入库的最大数量
    PledgeInVolMax = property(_traderapi.CTORATstpPledgeInfoField_PledgeInVolMax_get, _traderapi.CTORATstpPledgeInfoField_PledgeInVolMax_set)

	# 证券可以入库的最小数量
    PledgeInVolMin = property(_traderapi.CTORATstpPledgeInfoField_PledgeInVolMin_get, _traderapi.CTORATstpPledgeInfoField_PledgeInVolMin_set)

	# 证券可以出库的最大数量
    PledgeOutVolMax = property(_traderapi.CTORATstpPledgeInfoField_PledgeOutVolMax_get, _traderapi.CTORATstpPledgeInfoField_PledgeOutVolMax_set)

	# 证券可以出库的最小数量
    PledgeOutVolMin = property(_traderapi.CTORATstpPledgeInfoField_PledgeOutVolMin_get, _traderapi.CTORATstpPledgeInfoField_PledgeOutVolMin_set)

    def __init__(self):
        _traderapi.CTORATstpPledgeInfoField_swiginit(self, _traderapi.new_CTORATstpPledgeInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPledgeInfoField

# Register CTORATstpPledgeInfoField in _traderapi:
_traderapi.CTORATstpPledgeInfoField_swigregister(CTORATstpPledgeInfoField)




#########################################查询系统节点信息############################################
class CTORATstpQrySystemNodeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 节点编号
    NodeID = property(_traderapi.CTORATstpQrySystemNodeInfoField_NodeID_get, _traderapi.CTORATstpQrySystemNodeInfoField_NodeID_set)

    def __init__(self):
        _traderapi.CTORATstpQrySystemNodeInfoField_swiginit(self, _traderapi.new_CTORATstpQrySystemNodeInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQrySystemNodeInfoField

# Register CTORATstpQrySystemNodeInfoField in _traderapi:
_traderapi.CTORATstpQrySystemNodeInfoField_swigregister(CTORATstpQrySystemNodeInfoField)




#########################################系统节点信息############################################
class CTORATstpSystemNodeInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 节点编号
    NodeID = property(_traderapi.CTORATstpSystemNodeInfoField_NodeID_get, _traderapi.CTORATstpSystemNodeInfoField_NodeID_set)

	# 节点信息
    NodeInfo = property(_traderapi.CTORATstpSystemNodeInfoField_NodeInfo_get, _traderapi.CTORATstpSystemNodeInfoField_NodeInfo_set)

	# 是否当前节点
    bCurrent = property(_traderapi.CTORATstpSystemNodeInfoField_bCurrent_get, _traderapi.CTORATstpSystemNodeInfoField_bCurrent_set)

    def __init__(self):
        _traderapi.CTORATstpSystemNodeInfoField_swiginit(self, _traderapi.new_CTORATstpSystemNodeInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpSystemNodeInfoField

# Register CTORATstpSystemNodeInfoField in _traderapi:
_traderapi.CTORATstpSystemNodeInfoField_swigregister(CTORATstpSystemNodeInfoField)




#########################################查询投资者标准券额度############################################
class CTORATstpQryStandardBondPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryStandardBondPositionField_InvestorID_get, _traderapi.CTORATstpQryStandardBondPositionField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryStandardBondPositionField_SecurityID_get, _traderapi.CTORATstpQryStandardBondPositionField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryStandardBondPositionField_ExchangeID_get, _traderapi.CTORATstpQryStandardBondPositionField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryStandardBondPositionField_MarketID_get, _traderapi.CTORATstpQryStandardBondPositionField_MarketID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryStandardBondPositionField_ShareholderID_get, _traderapi.CTORATstpQryStandardBondPositionField_ShareholderID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryStandardBondPositionField_BusinessUnitID_get, _traderapi.CTORATstpQryStandardBondPositionField_BusinessUnitID_set)

    def __init__(self):
        _traderapi.CTORATstpQryStandardBondPositionField_swiginit(self, _traderapi.new_CTORATstpQryStandardBondPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryStandardBondPositionField

# Register CTORATstpQryStandardBondPositionField in _traderapi:
_traderapi.CTORATstpQryStandardBondPositionField_swigregister(CTORATstpQryStandardBondPositionField)




#########################################投资者标准券额度############################################
class CTORATstpStandardBondPositionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpStandardBondPositionField_SecurityID_get, _traderapi.CTORATstpStandardBondPositionField_SecurityID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpStandardBondPositionField_InvestorID_get, _traderapi.CTORATstpStandardBondPositionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpStandardBondPositionField_BusinessUnitID_get, _traderapi.CTORATstpStandardBondPositionField_BusinessUnitID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpStandardBondPositionField_ExchangeID_get, _traderapi.CTORATstpStandardBondPositionField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpStandardBondPositionField_MarketID_get, _traderapi.CTORATstpStandardBondPositionField_MarketID_set)

	# 客户代码
    ShareholderID = property(_traderapi.CTORATstpStandardBondPositionField_ShareholderID_get, _traderapi.CTORATstpStandardBondPositionField_ShareholderID_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpStandardBondPositionField_TradingDay_get, _traderapi.CTORATstpStandardBondPositionField_TradingDay_set)

	# 标准券可用额度
    AvailablePosition = property(_traderapi.CTORATstpStandardBondPositionField_AvailablePosition_get, _traderapi.CTORATstpStandardBondPositionField_AvailablePosition_set)

	# 标准券可用额度冻结
    AvailablePosFrozen = property(_traderapi.CTORATstpStandardBondPositionField_AvailablePosFrozen_get, _traderapi.CTORATstpStandardBondPositionField_AvailablePosFrozen_set)

	# 标准券额度总量
    TotalPosition = property(_traderapi.CTORATstpStandardBondPositionField_TotalPosition_get, _traderapi.CTORATstpStandardBondPositionField_TotalPosition_set)

    def __init__(self):
        _traderapi.CTORATstpStandardBondPositionField_swiginit(self, _traderapi.new_CTORATstpStandardBondPositionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpStandardBondPositionField

# Register CTORATstpStandardBondPositionField in _traderapi:
_traderapi.CTORATstpStandardBondPositionField_swigregister(CTORATstpStandardBondPositionField)




#########################################查询未到期债券质押回购委托############################################
class CTORATstpQryPrematurityRepoOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_InvestorID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_InvestorID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_SecurityID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_SecurityID_set)

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_ExchangeID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_MarketID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_MarketID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_ShareholderID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_ShareholderID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_BusinessUnitID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_BusinessUnitID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_OrderLocalID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_OrderLocalID_set)

	# 证券品种代码
    ProductID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_ProductID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_SecurityType_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_SecurityType_set)

	# 买卖方向
    Direction = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_Direction_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_Direction_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpQryPrematurityRepoOrderField_TradeID_get, _traderapi.CTORATstpQryPrematurityRepoOrderField_TradeID_set)

    def __init__(self):
        _traderapi.CTORATstpQryPrematurityRepoOrderField_swiginit(self, _traderapi.new_CTORATstpQryPrematurityRepoOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryPrematurityRepoOrderField

# Register CTORATstpQryPrematurityRepoOrderField in _traderapi:
_traderapi.CTORATstpQryPrematurityRepoOrderField_swigregister(CTORATstpQryPrematurityRepoOrderField)




#########################################未到期债券质押回购委托############################################
class CTORATstpPrematurityRepoOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpPrematurityRepoOrderField_ExchangeID_get, _traderapi.CTORATstpPrematurityRepoOrderField_ExchangeID_set)

	# 市场代码
    MarketID = property(_traderapi.CTORATstpPrematurityRepoOrderField_MarketID_get, _traderapi.CTORATstpPrematurityRepoOrderField_MarketID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpPrematurityRepoOrderField_InvestorID_get, _traderapi.CTORATstpPrematurityRepoOrderField_InvestorID_set)

	# 交易账户代码
    ShareholderID = property(_traderapi.CTORATstpPrematurityRepoOrderField_ShareholderID_get, _traderapi.CTORATstpPrematurityRepoOrderField_ShareholderID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpPrematurityRepoOrderField_BusinessUnitID_get, _traderapi.CTORATstpPrematurityRepoOrderField_BusinessUnitID_set)

	# 成交日期
    TradeDay = property(_traderapi.CTORATstpPrematurityRepoOrderField_TradeDay_get, _traderapi.CTORATstpPrematurityRepoOrderField_TradeDay_set)

	# 到期日期
    ExpireDay = property(_traderapi.CTORATstpPrematurityRepoOrderField_ExpireDay_get, _traderapi.CTORATstpPrematurityRepoOrderField_ExpireDay_set)

	# 报单编号
    OrderLocalID = property(_traderapi.CTORATstpPrematurityRepoOrderField_OrderLocalID_get, _traderapi.CTORATstpPrematurityRepoOrderField_OrderLocalID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpPrematurityRepoOrderField_SecurityID_get, _traderapi.CTORATstpPrematurityRepoOrderField_SecurityID_set)

	# 证券名称
    SecurityName = property(_traderapi.CTORATstpPrematurityRepoOrderField_SecurityName_get, _traderapi.CTORATstpPrematurityRepoOrderField_SecurityName_set)

	# 证券品种代码
    ProductID = property(_traderapi.CTORATstpPrematurityRepoOrderField_ProductID_get, _traderapi.CTORATstpPrematurityRepoOrderField_ProductID_set)

	# 证券类别代码
    SecurityType = property(_traderapi.CTORATstpPrematurityRepoOrderField_SecurityType_get, _traderapi.CTORATstpPrematurityRepoOrderField_SecurityType_set)

	# 报单类别
    Direction = property(_traderapi.CTORATstpPrematurityRepoOrderField_Direction_get, _traderapi.CTORATstpPrematurityRepoOrderField_Direction_set)

	# 成交数量
    VolumeTraded = property(_traderapi.CTORATstpPrematurityRepoOrderField_VolumeTraded_get, _traderapi.CTORATstpPrematurityRepoOrderField_VolumeTraded_set)

	# 成交价格
    Price = property(_traderapi.CTORATstpPrematurityRepoOrderField_Price_get, _traderapi.CTORATstpPrematurityRepoOrderField_Price_set)

	# 成交金额
    Turnover = property(_traderapi.CTORATstpPrematurityRepoOrderField_Turnover_get, _traderapi.CTORATstpPrematurityRepoOrderField_Turnover_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpPrematurityRepoOrderField_TradeID_get, _traderapi.CTORATstpPrematurityRepoOrderField_TradeID_set)

	# 购回应收金额
    RepoTotalMoney = property(_traderapi.CTORATstpPrematurityRepoOrderField_RepoTotalMoney_get, _traderapi.CTORATstpPrematurityRepoOrderField_RepoTotalMoney_set)

	# 利息金额
    InterestAmount = property(_traderapi.CTORATstpPrematurityRepoOrderField_InterestAmount_get, _traderapi.CTORATstpPrematurityRepoOrderField_InterestAmount_set)

    def __init__(self):
        _traderapi.CTORATstpPrematurityRepoOrderField_swiginit(self, _traderapi.new_CTORATstpPrematurityRepoOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpPrematurityRepoOrderField

# Register CTORATstpPrematurityRepoOrderField in _traderapi:
_traderapi.CTORATstpPrematurityRepoOrderField_swigregister(CTORATstpPrematurityRepoOrderField)




#########################################查询协议交易报单############################################
class CTORATstpQryNegoOrderField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryNegoOrderField_ExchangeID_get, _traderapi.CTORATstpQryNegoOrderField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryNegoOrderField_InvestorID_get, _traderapi.CTORATstpQryNegoOrderField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryNegoOrderField_BusinessUnitID_get, _traderapi.CTORATstpQryNegoOrderField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryNegoOrderField_SecurityID_get, _traderapi.CTORATstpQryNegoOrderField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryNegoOrderField_ShareholderID_get, _traderapi.CTORATstpQryNegoOrderField_ShareholderID_set)

	# 系统报单编号
    OrderSysID = property(_traderapi.CTORATstpQryNegoOrderField_OrderSysID_get, _traderapi.CTORATstpQryNegoOrderField_OrderSysID_set)

	# Insert Time
    InsertTimeStart = property(_traderapi.CTORATstpQryNegoOrderField_InsertTimeStart_get, _traderapi.CTORATstpQryNegoOrderField_InsertTimeStart_set)

	# Insert Time
    InsertTimeEnd = property(_traderapi.CTORATstpQryNegoOrderField_InsertTimeEnd_get, _traderapi.CTORATstpQryNegoOrderField_InsertTimeEnd_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryNegoOrderField_SInfo_get, _traderapi.CTORATstpQryNegoOrderField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryNegoOrderField_IInfo_get, _traderapi.CTORATstpQryNegoOrderField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpQryNegoOrderField_swiginit(self, _traderapi.new_CTORATstpQryNegoOrderField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryNegoOrderField

# Register CTORATstpQryNegoOrderField in _traderapi:
_traderapi.CTORATstpQryNegoOrderField_swigregister(CTORATstpQryNegoOrderField)




#########################################查询协议交易撤单############################################
class CTORATstpQryNegoOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryNegoOrderActionField_ExchangeID_get, _traderapi.CTORATstpQryNegoOrderActionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryNegoOrderActionField_InvestorID_get, _traderapi.CTORATstpQryNegoOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryNegoOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpQryNegoOrderActionField_BusinessUnitID_set)

	# 股东账户账户代码
    ShareholderID = property(_traderapi.CTORATstpQryNegoOrderActionField_ShareholderID_get, _traderapi.CTORATstpQryNegoOrderActionField_ShareholderID_set)

	# 本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpQryNegoOrderActionField_OrderLocalID_get, _traderapi.CTORATstpQryNegoOrderActionField_OrderLocalID_set)

	# 本地撤单编号
    CancelOrderLocalID = property(_traderapi.CTORATstpQryNegoOrderActionField_CancelOrderLocalID_get, _traderapi.CTORATstpQryNegoOrderActionField_CancelOrderLocalID_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpQryNegoOrderActionField_SInfo_get, _traderapi.CTORATstpQryNegoOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpQryNegoOrderActionField_IInfo_get, _traderapi.CTORATstpQryNegoOrderActionField_IInfo_set)

    def __init__(self):
        _traderapi.CTORATstpQryNegoOrderActionField_swiginit(self, _traderapi.new_CTORATstpQryNegoOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryNegoOrderActionField

# Register CTORATstpQryNegoOrderActionField in _traderapi:
_traderapi.CTORATstpQryNegoOrderActionField_swigregister(CTORATstpQryNegoOrderActionField)




#########################################协议交易撤单############################################
class CTORATstpNegoOrderActionField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpNegoOrderActionField_ExchangeID_get, _traderapi.CTORATstpNegoOrderActionField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpNegoOrderActionField_InvestorID_get, _traderapi.CTORATstpNegoOrderActionField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpNegoOrderActionField_BusinessUnitID_get, _traderapi.CTORATstpNegoOrderActionField_BusinessUnitID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpNegoOrderActionField_ShareholderID_get, _traderapi.CTORATstpNegoOrderActionField_ShareholderID_set)

	# 操作标志
    ActionFlag = property(_traderapi.CTORATstpNegoOrderActionField_ActionFlag_get, _traderapi.CTORATstpNegoOrderActionField_ActionFlag_set)

	# 本地撤单编号
    CancelOrderLocalID = property(_traderapi.CTORATstpNegoOrderActionField_CancelOrderLocalID_get, _traderapi.CTORATstpNegoOrderActionField_CancelOrderLocalID_set)

	# 系统撤单编号
    CancelOrderSysID = property(_traderapi.CTORATstpNegoOrderActionField_CancelOrderSysID_get, _traderapi.CTORATstpNegoOrderActionField_CancelOrderSysID_set)

	# 被撤报单系统报单编号
    OrderSysID = property(_traderapi.CTORATstpNegoOrderActionField_OrderSysID_get, _traderapi.CTORATstpNegoOrderActionField_OrderSysID_set)

	# 被撤报单本地报单编号
    OrderLocalID = property(_traderapi.CTORATstpNegoOrderActionField_OrderLocalID_get, _traderapi.CTORATstpNegoOrderActionField_OrderLocalID_set)

	# 委托方式
    Operway = property(_traderapi.CTORATstpNegoOrderActionField_Operway_get, _traderapi.CTORATstpNegoOrderActionField_Operway_set)

	# 字符串附加信息
    SInfo = property(_traderapi.CTORATstpNegoOrderActionField_SInfo_get, _traderapi.CTORATstpNegoOrderActionField_SInfo_set)

	# 整形附加信息
    IInfo = property(_traderapi.CTORATstpNegoOrderActionField_IInfo_get, _traderapi.CTORATstpNegoOrderActionField_IInfo_set)

	# 经纪公司部门代码
    DepartmentID = property(_traderapi.CTORATstpNegoOrderActionField_DepartmentID_get, _traderapi.CTORATstpNegoOrderActionField_DepartmentID_set)

	# 操作用户
    ActionUser = property(_traderapi.CTORATstpNegoOrderActionField_ActionUser_get, _traderapi.CTORATstpNegoOrderActionField_ActionUser_set)

	# 交易日
    TradingDay = property(_traderapi.CTORATstpNegoOrderActionField_TradingDay_get, _traderapi.CTORATstpNegoOrderActionField_TradingDay_set)

	# 操作日期
    ActionDate = property(_traderapi.CTORATstpNegoOrderActionField_ActionDate_get, _traderapi.CTORATstpNegoOrderActionField_ActionDate_set)

	# 操作时间
    ActionTime = property(_traderapi.CTORATstpNegoOrderActionField_ActionTime_get, _traderapi.CTORATstpNegoOrderActionField_ActionTime_set)

	# 撤单状态
    CancelOrderStatus = property(_traderapi.CTORATstpNegoOrderActionField_CancelOrderStatus_get, _traderapi.CTORATstpNegoOrderActionField_CancelOrderStatus_set)

	# 状态信息
    StatusMsg = property(_traderapi.CTORATstpNegoOrderActionField_StatusMsg_get, _traderapi.CTORATstpNegoOrderActionField_StatusMsg_set)

	# 请求编号
    RequestID = property(_traderapi.CTORATstpNegoOrderActionField_RequestID_get, _traderapi.CTORATstpNegoOrderActionField_RequestID_set)

	# 前置编号
    ActionFrontID = property(_traderapi.CTORATstpNegoOrderActionField_ActionFrontID_get, _traderapi.CTORATstpNegoOrderActionField_ActionFrontID_set)

	# 会话编号
    ActionSessionID = property(_traderapi.CTORATstpNegoOrderActionField_ActionSessionID_get, _traderapi.CTORATstpNegoOrderActionField_ActionSessionID_set)

	# 交易单元代码
    PbuID = property(_traderapi.CTORATstpNegoOrderActionField_PbuID_get, _traderapi.CTORATstpNegoOrderActionField_PbuID_set)

	# IP地址
    IPAddress = property(_traderapi.CTORATstpNegoOrderActionField_IPAddress_get, _traderapi.CTORATstpNegoOrderActionField_IPAddress_set)

	# Mac地址
    MacAddress = property(_traderapi.CTORATstpNegoOrderActionField_MacAddress_get, _traderapi.CTORATstpNegoOrderActionField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpNegoOrderActionField_swiginit(self, _traderapi.new_CTORATstpNegoOrderActionField())
    __swig_destroy__ = _traderapi.delete_CTORATstpNegoOrderActionField

# Register CTORATstpNegoOrderActionField in _traderapi:
_traderapi.CTORATstpNegoOrderActionField_swigregister(CTORATstpNegoOrderActionField)




#########################################查询协议交易成交############################################
class CTORATstpQryNegoTradeField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryNegoTradeField_ExchangeID_get, _traderapi.CTORATstpQryNegoTradeField_ExchangeID_set)

	# 投资者代码
    InvestorID = property(_traderapi.CTORATstpQryNegoTradeField_InvestorID_get, _traderapi.CTORATstpQryNegoTradeField_InvestorID_set)

	# 投资单元代码
    BusinessUnitID = property(_traderapi.CTORATstpQryNegoTradeField_BusinessUnitID_get, _traderapi.CTORATstpQryNegoTradeField_BusinessUnitID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryNegoTradeField_SecurityID_get, _traderapi.CTORATstpQryNegoTradeField_SecurityID_set)

	# 股东账户代码
    ShareholderID = property(_traderapi.CTORATstpQryNegoTradeField_ShareholderID_get, _traderapi.CTORATstpQryNegoTradeField_ShareholderID_set)

	# 成交编号
    TradeID = property(_traderapi.CTORATstpQryNegoTradeField_TradeID_get, _traderapi.CTORATstpQryNegoTradeField_TradeID_set)

	# Insert Time
    TradeTimeStart = property(_traderapi.CTORATstpQryNegoTradeField_TradeTimeStart_get, _traderapi.CTORATstpQryNegoTradeField_TradeTimeStart_set)

	# Insert Time
    TradeTimeEnd = property(_traderapi.CTORATstpQryNegoTradeField_TradeTimeEnd_get, _traderapi.CTORATstpQryNegoTradeField_TradeTimeEnd_set)

    def __init__(self):
        _traderapi.CTORATstpQryNegoTradeField_swiginit(self, _traderapi.new_CTORATstpQryNegoTradeField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryNegoTradeField

# Register CTORATstpQryNegoTradeField in _traderapi:
_traderapi.CTORATstpQryNegoTradeField_swigregister(CTORATstpQryNegoTradeField)




#########################################查询协议交易参数############################################
class CTORATstpQryNegotiationParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpQryNegotiationParamField_ExchangeID_get, _traderapi.CTORATstpQryNegotiationParamField_ExchangeID_set)

	# 证券代码
    SecurityID = property(_traderapi.CTORATstpQryNegotiationParamField_SecurityID_get, _traderapi.CTORATstpQryNegotiationParamField_SecurityID_set)

    def __init__(self):
        _traderapi.CTORATstpQryNegotiationParamField_swiginit(self, _traderapi.new_CTORATstpQryNegotiationParamField())
    __swig_destroy__ = _traderapi.delete_CTORATstpQryNegotiationParamField

# Register CTORATstpQryNegotiationParamField in _traderapi:
_traderapi.CTORATstpQryNegotiationParamField_swigregister(CTORATstpQryNegotiationParamField)




#########################################协议交易参数############################################
class CTORATstpNegotiationParamField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 交易所代码
    ExchangeID = property(_traderapi.CTORATstpNegotiationParamField_ExchangeID_get, _traderapi.CTORATstpNegotiationParamField_ExchangeID_set)

	# 合约代码
    SecurityID = property(_traderapi.CTORATstpNegotiationParamField_SecurityID_get, _traderapi.CTORATstpNegotiationParamField_SecurityID_set)

	# 买入交易单位
    BuyTradingUnit = property(_traderapi.CTORATstpNegotiationParamField_BuyTradingUnit_get, _traderapi.CTORATstpNegotiationParamField_BuyTradingUnit_set)

	# 卖出交易单位
    SellTradingUnit = property(_traderapi.CTORATstpNegotiationParamField_SellTradingUnit_get, _traderapi.CTORATstpNegotiationParamField_SellTradingUnit_set)

	# 数量门槛
    MinOrderVolume = property(_traderapi.CTORATstpNegotiationParamField_MinOrderVolume_get, _traderapi.CTORATstpNegotiationParamField_MinOrderVolume_set)

	# 金额门槛
    MinOrderAmt = property(_traderapi.CTORATstpNegotiationParamField_MinOrderAmt_get, _traderapi.CTORATstpNegotiationParamField_MinOrderAmt_set)

	# 最小变动价位
    PriceTick = property(_traderapi.CTORATstpNegotiationParamField_PriceTick_get, _traderapi.CTORATstpNegotiationParamField_PriceTick_set)

	# 涨停板价
    UpperLimitPrice = property(_traderapi.CTORATstpNegotiationParamField_UpperLimitPrice_get, _traderapi.CTORATstpNegotiationParamField_UpperLimitPrice_set)

	# 跌停板价
    LowerLimitPrice = property(_traderapi.CTORATstpNegotiationParamField_LowerLimitPrice_get, _traderapi.CTORATstpNegotiationParamField_LowerLimitPrice_set)

	# 是否有做市商
    bMarketMaker = property(_traderapi.CTORATstpNegotiationParamField_bMarketMaker_get, _traderapi.CTORATstpNegotiationParamField_bMarketMaker_set)

    def __init__(self):
        _traderapi.CTORATstpNegotiationParamField_swiginit(self, _traderapi.new_CTORATstpNegotiationParamField())
    __swig_destroy__ = _traderapi.delete_CTORATstpNegotiationParamField

# Register CTORATstpNegotiationParamField in _traderapi:
_traderapi.CTORATstpNegotiationParamField_swigregister(CTORATstpNegotiationParamField)




#########################################fens用户信息############################################
class CTORATstpFensUserInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 版本信息
    FensVer = property(_traderapi.CTORATstpFensUserInfoField_FensVer_get, _traderapi.CTORATstpFensUserInfoField_FensVer_set)

	# 环境编号
    FensEnvID = property(_traderapi.CTORATstpFensUserInfoField_FensEnvID_get, _traderapi.CTORATstpFensUserInfoField_FensEnvID_set)

	# 节点编号
    FensNodeID = property(_traderapi.CTORATstpFensUserInfoField_FensNodeID_get, _traderapi.CTORATstpFensUserInfoField_FensNodeID_set)

	# Fens用户代码
    FensUserID = property(_traderapi.CTORATstpFensUserInfoField_FensUserID_get, _traderapi.CTORATstpFensUserInfoField_FensUserID_set)

	# 用户代码
    UserID = property(_traderapi.CTORATstpFensUserInfoField_UserID_get, _traderapi.CTORATstpFensUserInfoField_UserID_set)

	# 终端信息
    ClientInfo = property(_traderapi.CTORATstpFensUserInfoField_ClientInfo_get, _traderapi.CTORATstpFensUserInfoField_ClientInfo_set)

    def __init__(self):
        _traderapi.CTORATstpFensUserInfoField_swiginit(self, _traderapi.new_CTORATstpFensUserInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpFensUserInfoField

# Register CTORATstpFensUserInfoField in _traderapi:
_traderapi.CTORATstpFensUserInfoField_swigregister(CTORATstpFensUserInfoField)




#########################################连接信息############################################
class CTORATstpConnectionInfoField(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	# 用户请求编号
    UserRequestID = property(_traderapi.CTORATstpConnectionInfoField_UserRequestID_get, _traderapi.CTORATstpConnectionInfoField_UserRequestID_set)

	# 内网IP地址
    InnerIPAddress = property(_traderapi.CTORATstpConnectionInfoField_InnerIPAddress_get, _traderapi.CTORATstpConnectionInfoField_InnerIPAddress_set)

	# 内网端口号
    InnerPort = property(_traderapi.CTORATstpConnectionInfoField_InnerPort_get, _traderapi.CTORATstpConnectionInfoField_InnerPort_set)

	# 外网IP地址
    OuterIPAddress = property(_traderapi.CTORATstpConnectionInfoField_OuterIPAddress_get, _traderapi.CTORATstpConnectionInfoField_OuterIPAddress_set)

	# 外网端口号
    OuterPort = property(_traderapi.CTORATstpConnectionInfoField_OuterPort_get, _traderapi.CTORATstpConnectionInfoField_OuterPort_set)

	# MAC地址
    MacAddress = property(_traderapi.CTORATstpConnectionInfoField_MacAddress_get, _traderapi.CTORATstpConnectionInfoField_MacAddress_set)

    def __init__(self):
        _traderapi.CTORATstpConnectionInfoField_swiginit(self, _traderapi.new_CTORATstpConnectionInfoField())
    __swig_destroy__ = _traderapi.delete_CTORATstpConnectionInfoField

# Register CTORATstpConnectionInfoField in _traderapi:
_traderapi.CTORATstpConnectionInfoField_swigregister(CTORATstpConnectionInfoField)

class CTORATstpTraderSpi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

	#当客户端与交易后台建立起通信连接时(还未登录前),该方法被调用
    def OnFrontConnected(self) -> "void":
        return _traderapi.CTORATstpTraderSpi_OnFrontConnected(self)

	#当客户端与交易后台通信连接断开时,该方法被调用,当发生这个情况后,API会自动重新连接,客户端可不做处理。nReason为断开原因,-3 连接已断开,-4 网络读失败,-5 网络写失败,-6 订阅流错误,-7 流序号错误,-8 错误的心跳报文,-9 错误的报文,-15网络读失败,-16网络写失败
    def OnFrontDisconnected(self, nReason: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnFrontDisconnected(self, nReason)

	#错误应答
    def OnRspError(self, pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspError(self, pRspInfoField, nRequestID, bIsLast)

	#获取连接信息应答,参数pConnectionInfoField是一个CTORATstpConnectionInfoField类对象
    def OnRspGetConnectionInfo(self, pConnectionInfoField: "CTORATstpConnectionInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspGetConnectionInfo(self, pConnectionInfoField, pRspInfoField, nRequestID)

	#登录响应,参数pRspUserLoginField是一个CTORATstpRspUserLoginField类对象
    def OnRspUserLogin(self, pRspUserLoginField: "CTORATstpRspUserLoginField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspUserLogin(self, pRspUserLoginField, pRspInfoField, nRequestID)

	#登出响应,参数pUserLogoutField是一个CTORATstpUserLogoutField类对象
    def OnRspUserLogout(self, pUserLogoutField: "CTORATstpUserLogoutField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspUserLogout(self, pUserLogoutField, pRspInfoField, nRequestID)

	#修改密码响应,参数pUserPasswordUpdateField是一个CTORATstpUserPasswordUpdateField类对象
    def OnRspUserPasswordUpdate(self, pUserPasswordUpdateField: "CTORATstpUserPasswordUpdateField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspUserPasswordUpdate(self, pUserPasswordUpdateField, pRspInfoField, nRequestID)

	#录入设备序列响应,参数pRspInputDeviceSerialField是一个CTORATstpRspInputDeviceSerialField类对象
    def OnRspInputDeviceSerial(self, pRspInputDeviceSerialField: "CTORATstpRspInputDeviceSerialField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInputDeviceSerial(self, pRspInputDeviceSerialField, pRspInfoField, nRequestID)

	#报单录入响应,参数pInputOrderField是一个CTORATstpInputOrderField类对象
    def OnRspOrderInsert(self, pInputOrderField: "CTORATstpInputOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspOrderInsert(self, pInputOrderField, pRspInfoField, nRequestID)

	#报单回报,参数pOrderField是一个CTORATstpOrderField类对象
    def OnRtnOrder(self, pOrderField: "CTORATstpOrderField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnOrder(self, pOrderField)

	#报单错误回报,参数pInputOrderField是一个CTORATstpInputOrderField类对象
    def OnErrRtnOrderInsert(self, pInputOrderField: "CTORATstpInputOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnOrderInsert(self, pInputOrderField, pRspInfoField, nRequestID)

	#成交回报,参数pTradeField是一个CTORATstpTradeField类对象
    def OnRtnTrade(self, pTradeField: "CTORATstpTradeField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnTrade(self, pTradeField)

	#撤单响应,参数pInputOrderActionField是一个CTORATstpInputOrderActionField类对象
    def OnRspOrderAction(self, pInputOrderActionField: "CTORATstpInputOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspOrderAction(self, pInputOrderActionField, pRspInfoField, nRequestID)

	#撤单错误回报,参数pInputOrderActionField是一个CTORATstpInputOrderActionField类对象
    def OnErrRtnOrderAction(self, pInputOrderActionField: "CTORATstpInputOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnOrderAction(self, pInputOrderActionField, pRspInfoField, nRequestID)

	#条件单录入响应,参数pInputCondOrderField是一个CTORATstpInputCondOrderField类对象
    def OnRspCondOrderInsert(self, pInputCondOrderField: "CTORATstpInputCondOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspCondOrderInsert(self, pInputCondOrderField, pRspInfoField, nRequestID)

	#条件单回报,参数pConditionOrderField是一个CTORATstpConditionOrderField类对象
    def OnRtnCondOrder(self, pConditionOrderField: "CTORATstpConditionOrderField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnCondOrder(self, pConditionOrderField)

	#条件单录入错误回报,参数pInputCondOrderField是一个CTORATstpInputCondOrderField类对象
    def OnErrRtnCondOrderInsert(self, pInputCondOrderField: "CTORATstpInputCondOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnCondOrderInsert(self, pInputCondOrderField, pRspInfoField, nRequestID)

	#条件单撤单响应,参数pInputCondOrderActionField是一个CTORATstpInputCondOrderActionField类对象
    def OnRspCondOrderAction(self, pInputCondOrderActionField: "CTORATstpInputCondOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspCondOrderAction(self, pInputCondOrderActionField, pRspInfoField, nRequestID)

	#条件单撤单错误回报,参数pInputCondOrderActionField是一个CTORATstpInputCondOrderActionField类对象
    def OnErrRtnCondOrderAction(self, pInputCondOrderActionField: "CTORATstpInputCondOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnCondOrderAction(self, pInputCondOrderActionField, pRspInfoField, nRequestID)

	#协议交易报单录入响应,参数pInputNegoOrderField是一个CTORATstpInputNegoOrderField类对象
    def OnRspNegoOrderInsert(self, pInputNegoOrderField: "CTORATstpInputNegoOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspNegoOrderInsert(self, pInputNegoOrderField, pRspInfoField, nRequestID)

	#协议交易报单回报,参数pNegoOrderField是一个CTORATstpNegoOrderField类对象
    def OnRtnNegoOrder(self, pNegoOrderField: "CTORATstpNegoOrderField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnNegoOrder(self, pNegoOrderField)

	#协议交易报单错误回报,参数pInputNegoOrderField是一个CTORATstpInputNegoOrderField类对象
    def OnErrRtnNegoOrderInsert(self, pInputNegoOrderField: "CTORATstpInputNegoOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnNegoOrderInsert(self, pInputNegoOrderField, pRspInfoField, nRequestID)

	#协议交易成交回报,参数pNegoTradeField是一个CTORATstpNegoTradeField类对象
    def OnRtnNegoTrade(self, pNegoTradeField: "CTORATstpNegoTradeField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnNegoTrade(self, pNegoTradeField)

	#协议交易报单操作录入响应,参数pInputNegoOrderActionField是一个CTORATstpInputNegoOrderActionField类对象
    def OnRspNegoOrderAction(self, pInputNegoOrderActionField: "CTORATstpInputNegoOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspNegoOrderAction(self, pInputNegoOrderActionField, pRspInfoField, nRequestID)

	#协议交易报单操作错误回报,参数pInputNegoOrderActionField是一个CTORATstpInputNegoOrderActionField类对象
    def OnErrRtnNegoOrderAction(self, pInputNegoOrderActionField: "CTORATstpInputNegoOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnNegoOrderAction(self, pInputNegoOrderActionField, pRspInfoField, nRequestID)

	#报单录入响应（扩展）,参数pInputOrderExField是一个CTORATstpInputOrderExField类对象
    def OnRspOrderInsertEx(self, pInputOrderExField: "CTORATstpInputOrderExField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspOrderInsertEx(self, pInputOrderExField, pRspInfoField, nRequestID)

	#报单操作响应（扩展）,参数pInputOrderActionExField是一个CTORATstpInputOrderActionExField类对象
    def OnRspOrderActionEx(self, pInputOrderActionExField: "CTORATstpInputOrderActionExField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspOrderActionEx(self, pInputOrderActionExField, pRspInfoField, nRequestID)

	#市场状态回报,参数pMarketStatusField是一个CTORATstpMarketStatusField类对象
    def OnRtnMarketStatus(self, pMarketStatusField: "CTORATstpMarketStatusField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnMarketStatus(self, pMarketStatusField)

	#资金转移响应,参数pInputTransferFundField是一个CTORATstpInputTransferFundField类对象
    def OnRspTransferFund(self, pInputTransferFundField: "CTORATstpInputTransferFundField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspTransferFund(self, pInputTransferFundField, pRspInfoField, nRequestID)

	#资金转移错误回报,参数pInputTransferFundField是一个CTORATstpInputTransferFundField类对象
    def OnErrRtnTransferFund(self, pInputTransferFundField: "CTORATstpInputTransferFundField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnTransferFund(self, pInputTransferFundField, pRspInfoField, nRequestID)

	#资金转移回报,参数pTransferFundField是一个CTORATstpTransferFundField类对象
    def OnRtnTransferFund(self, pTransferFundField: "CTORATstpTransferFundField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnTransferFund(self, pTransferFundField)

	#仓位转移响应,参数pInputTransferPositionField是一个CTORATstpInputTransferPositionField类对象
    def OnRspTransferPosition(self, pInputTransferPositionField: "CTORATstpInputTransferPositionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspTransferPosition(self, pInputTransferPositionField, pRspInfoField, nRequestID)

	#仓位转移错误回报,参数pInputTransferPositionField是一个CTORATstpInputTransferPositionField类对象
    def OnErrRtnTransferPosition(self, pInputTransferPositionField: "CTORATstpInputTransferPositionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnErrRtnTransferPosition(self, pInputTransferPositionField, pRspInfoField, nRequestID)

	#仓位转移回报,参数pTransferPositionField是一个CTORATstpTransferPositionField类对象
    def OnRtnTransferPosition(self, pTransferPositionField: "CTORATstpTransferPositionField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnTransferPosition(self, pTransferPositionField)

	#外围系统仓位转移回报,参数pPeripheryTransferPositionField是一个CTORATstpPeripheryTransferPositionField类对象
    def OnRtnPeripheryTransferPosition(self, pPeripheryTransferPositionField: "CTORATstpPeripheryTransferPositionField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnPeripheryTransferPosition(self, pPeripheryTransferPositionField)

	#外围系统资金转移回报,参数pPeripheryTransferFundField是一个CTORATstpPeripheryTransferFundField类对象
    def OnRtnPeripheryTransferFund(self, pPeripheryTransferFundField: "CTORATstpPeripheryTransferFundField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnPeripheryTransferFund(self, pPeripheryTransferFundField)

	#查询集中交易系统资金响应,参数pRspInquiryJZFundField是一个CTORATstpRspInquiryJZFundField类对象
    def OnRspInquiryJZFund(self, pRspInquiryJZFundField: "CTORATstpRspInquiryJZFundField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInquiryJZFund(self, pRspInquiryJZFundField, pRspInfoField, nRequestID)

	#查询银行账户余额响应,参数pRspInquiryBankAccountFundField是一个CTORATstpRspInquiryBankAccountFundField类对象
    def OnRspInquiryBankAccountFund(self, pRspInquiryBankAccountFundField: "CTORATstpRspInquiryBankAccountFundField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInquiryBankAccountFund(self, pRspInquiryBankAccountFundField, pRspInfoField, nRequestID)

	#交易通知回报,参数pTradingNoticeField是一个CTORATstpTradingNoticeField类对象
    def OnRtnTradingNotice(self, pTradingNoticeField: "CTORATstpTradingNoticeField") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRtnTradingNotice(self, pTradingNoticeField)

	#查询最大报单量响应,参数pRspInquiryMaxOrderVolumeField是一个CTORATstpRspInquiryMaxOrderVolumeField类对象
    def OnRspInquiryMaxOrderVolume(self, pRspInquiryMaxOrderVolumeField: "CTORATstpRspInquiryMaxOrderVolumeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInquiryMaxOrderVolume(self, pRspInquiryMaxOrderVolumeField, pRspInfoField, nRequestID)

	#交易成交集中度查询响应,参数pInquiryTradeConcentrationField是一个CTORATstpInquiryTradeConcentrationField类对象
    def OnRspInquiryTradeConcentration(self, pInquiryTradeConcentrationField: "CTORATstpInquiryTradeConcentrationField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInquiryTradeConcentration(self, pInquiryTradeConcentrationField, pRspInfoField, nRequestID)

	#请求修改开仓成本响应,参数pReqModifyOpenPosCostField是一个CTORATstpReqModifyOpenPosCostField类对象
    def OnRspModifyOpenPosCost(self, pReqModifyOpenPosCostField: "CTORATstpReqModifyOpenPosCostField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspModifyOpenPosCost(self, pReqModifyOpenPosCostField, pRspInfoField, nRequestID)

	#录入节点资金分配信息响应,参数pInputNodeFundAssignmentField是一个CTORATstpInputNodeFundAssignmentField类对象
    def OnRspInputNodeFundAssignment(self, pInputNodeFundAssignmentField: "CTORATstpInputNodeFundAssignmentField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInputNodeFundAssignment(self, pInputNodeFundAssignmentField, pRspInfoField, nRequestID)

	#查询节点资金分配比例响应,参数pRspInquiryNodeFundAssignmentField是一个CTORATstpRspInquiryNodeFundAssignmentField类对象
    def OnRspInquiryNodeFundAssignment(self, pRspInquiryNodeFundAssignmentField: "CTORATstpRspInquiryNodeFundAssignmentField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspInquiryNodeFundAssignment(self, pRspInquiryNodeFundAssignmentField, pRspInfoField, nRequestID)

	#查询交易所响应,参数pExchangeField是一个CTORATstpExchangeField类对象
    def OnRspQryExchange(self, pExchangeField: "CTORATstpExchangeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryExchange(self, pExchangeField, pRspInfoField, nRequestID, bIsLast)

	#查询证券信息响应,参数pSecurityField是一个CTORATstpSecurityField类对象
    def OnRspQrySecurity(self, pSecurityField: "CTORATstpSecurityField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQrySecurity(self, pSecurityField, pRspInfoField, nRequestID, bIsLast)

	#查询新股信息响应,参数pIPOInfoField是一个CTORATstpIPOInfoField类对象
    def OnRspQryIPOInfo(self, pIPOInfoField: "CTORATstpIPOInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryIPOInfo(self, pIPOInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询用户响应,参数pUserField是一个CTORATstpUserField类对象
    def OnRspQryUser(self, pUserField: "CTORATstpUserField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryUser(self, pUserField, pRspInfoField, nRequestID, bIsLast)

	#查询投资者响应,参数pInvestorField是一个CTORATstpInvestorField类对象
    def OnRspQryInvestor(self, pInvestorField: "CTORATstpInvestorField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryInvestor(self, pInvestorField, pRspInfoField, nRequestID, bIsLast)

	#查询股东账户响应,参数pShareholderAccountField是一个CTORATstpShareholderAccountField类对象
    def OnRspQryShareholderAccount(self, pShareholderAccountField: "CTORATstpShareholderAccountField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryShareholderAccount(self, pShareholderAccountField, pRspInfoField, nRequestID, bIsLast)

	#查询配股配债信息响应,参数pRationalInfoField是一个CTORATstpRationalInfoField类对象
    def OnRspQryRationalInfo(self, pRationalInfoField: "CTORATstpRationalInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryRationalInfo(self, pRationalInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询报单响应,参数pOrderField是一个CTORATstpOrderField类对象
    def OnRspQryOrder(self, pOrderField: "CTORATstpOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryOrder(self, pOrderField, pRspInfoField, nRequestID, bIsLast)

	#查询撤单请求,参数pOrderActionField是一个CTORATstpOrderActionField类对象
    def OnRspQryOrderAction(self, pOrderActionField: "CTORATstpOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryOrderAction(self, pOrderActionField, pRspInfoField, nRequestID, bIsLast)

	#查询成交响应,参数pTradeField是一个CTORATstpTradeField类对象
    def OnRspQryTrade(self, pTradeField: "CTORATstpTradeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryTrade(self, pTradeField, pRspInfoField, nRequestID, bIsLast)

	#查询资金账户响应,参数pTradingAccountField是一个CTORATstpTradingAccountField类对象
    def OnRspQryTradingAccount(self, pTradingAccountField: "CTORATstpTradingAccountField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryTradingAccount(self, pTradingAccountField, pRspInfoField, nRequestID, bIsLast)

	#查询投资者持仓响应,参数pPositionField是一个CTORATstpPositionField类对象
    def OnRspQryPosition(self, pPositionField: "CTORATstpPositionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPosition(self, pPositionField, pRspInfoField, nRequestID, bIsLast)

	#查询基础交易费率响应,参数pTradingFeeField是一个CTORATstpTradingFeeField类对象
    def OnRspQryTradingFee(self, pTradingFeeField: "CTORATstpTradingFeeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryTradingFee(self, pTradingFeeField, pRspInfoField, nRequestID, bIsLast)

	#查询佣金费率响应,参数pInvestorTradingFeeField是一个CTORATstpInvestorTradingFeeField类对象
    def OnRspQryInvestorTradingFee(self, pInvestorTradingFeeField: "CTORATstpInvestorTradingFeeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryInvestorTradingFee(self, pInvestorTradingFeeField, pRspInfoField, nRequestID, bIsLast)

	#查询新股申购额度响应,参数pIPOQuotaField是一个CTORATstpIPOQuotaField类对象
    def OnRspQryIPOQuota(self, pIPOQuotaField: "CTORATstpIPOQuotaField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryIPOQuota(self, pIPOQuotaField, pRspInfoField, nRequestID, bIsLast)

	#查询报单明细资金响应,参数pOrderFundDetailField是一个CTORATstpOrderFundDetailField类对象
    def OnRspQryOrderFundDetail(self, pOrderFundDetailField: "CTORATstpOrderFundDetailField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryOrderFundDetail(self, pOrderFundDetailField, pRspInfoField, nRequestID, bIsLast)

	#查询资金转移流水响应,参数pFundTransferDetailField是一个CTORATstpFundTransferDetailField类对象
    def OnRspQryFundTransferDetail(self, pFundTransferDetailField: "CTORATstpFundTransferDetailField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryFundTransferDetail(self, pFundTransferDetailField, pRspInfoField, nRequestID, bIsLast)

	#查询持仓转移流水响应,参数pPositionTransferDetailField是一个CTORATstpPositionTransferDetailField类对象
    def OnRspQryPositionTransferDetail(self, pPositionTransferDetailField: "CTORATstpPositionTransferDetailField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPositionTransferDetail(self, pPositionTransferDetailField, pRspInfoField, nRequestID, bIsLast)

	#查询外围系统仓位调拨流水响应,参数pPeripheryPositionTransferDetailField是一个CTORATstpPeripheryPositionTransferDetailField类对象
    def OnRspQryPeripheryPositionTransferDetail(self, pPeripheryPositionTransferDetailField: "CTORATstpPeripheryPositionTransferDetailField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPeripheryPositionTransferDetail(self, pPeripheryPositionTransferDetailField, pRspInfoField, nRequestID, bIsLast)

	#查询外围系统资金调拨流水响应,参数pPeripheryFundTransferDetailField是一个CTORATstpPeripheryFundTransferDetailField类对象
    def OnRspQryPeripheryFundTransferDetail(self, pPeripheryFundTransferDetailField: "CTORATstpPeripheryFundTransferDetailField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPeripheryFundTransferDetail(self, pPeripheryFundTransferDetailField, pRspInfoField, nRequestID, bIsLast)

	#查询债券转股信息响应,参数pBondConversionInfoField是一个CTORATstpBondConversionInfoField类对象
    def OnRspQryBondConversionInfo(self, pBondConversionInfoField: "CTORATstpBondConversionInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryBondConversionInfo(self, pBondConversionInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询债券回售信息响应,参数pBondPutbackInfoField是一个CTORATstpBondPutbackInfoField类对象
    def OnRspQryBondPutbackInfo(self, pBondPutbackInfoField: "CTORATstpBondPutbackInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryBondPutbackInfo(self, pBondPutbackInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询投资者条件单限制参数响应,参数pInvestorCondOrderLimitParamField是一个CTORATstpInvestorCondOrderLimitParamField类对象
    def OnRspQryInvestorCondOrderLimitParam(self, pInvestorCondOrderLimitParamField: "CTORATstpInvestorCondOrderLimitParamField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryInvestorCondOrderLimitParam(self, pInvestorCondOrderLimitParamField, pRspInfoField, nRequestID, bIsLast)

	#查询条件单响应,参数pConditionOrderField是一个CTORATstpConditionOrderField类对象
    def OnRspQryConditionOrder(self, pConditionOrderField: "CTORATstpConditionOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryConditionOrder(self, pConditionOrderField, pRspInfoField, nRequestID, bIsLast)

	#查询条件单撤单响应,参数pCondOrderActionField是一个CTORATstpCondOrderActionField类对象
    def OnRspQryCondOrderAction(self, pCondOrderActionField: "CTORATstpCondOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryCondOrderAction(self, pCondOrderActionField, pRspInfoField, nRequestID, bIsLast)

	#查询交易通知响应,参数pTradingNoticeField是一个CTORATstpTradingNoticeField类对象
    def OnRspQryTradingNotice(self, pTradingNoticeField: "CTORATstpTradingNoticeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryTradingNotice(self, pTradingNoticeField, pRspInfoField, nRequestID, bIsLast)

	#查询新股申购配号结果响应,参数pIPONumberResultField是一个CTORATstpIPONumberResultField类对象
    def OnRspQryIPONumberResult(self, pIPONumberResultField: "CTORATstpIPONumberResultField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryIPONumberResult(self, pIPONumberResultField, pRspInfoField, nRequestID, bIsLast)

	#查询新股申购中签结果响应,参数pIPOMatchNumberResultField是一个CTORATstpIPOMatchNumberResultField类对象
    def OnRspQryIPOMatchNumberResult(self, pIPOMatchNumberResultField: "CTORATstpIPOMatchNumberResultField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryIPOMatchNumberResult(self, pIPOMatchNumberResultField, pRspInfoField, nRequestID, bIsLast)

	#查询交易协议响应,参数pShareholderSpecPrivilegeField是一个CTORATstpShareholderSpecPrivilegeField类对象
    def OnRspQryShareholderSpecPrivilege(self, pShareholderSpecPrivilegeField: "CTORATstpShareholderSpecPrivilegeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryShareholderSpecPrivilege(self, pShareholderSpecPrivilegeField, pRspInfoField, nRequestID, bIsLast)

	#查询市场响应,参数pMarketField是一个CTORATstpMarketField类对象
    def OnRspQryMarket(self, pMarketField: "CTORATstpMarketField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryMarket(self, pMarketField, pRspInfoField, nRequestID, bIsLast)

	#查询ETF清单信息响应,参数pETFFileField是一个CTORATstpETFFileField类对象
    def OnRspQryETFFile(self, pETFFileField: "CTORATstpETFFileField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryETFFile(self, pETFFileField, pRspInfoField, nRequestID, bIsLast)

	#查询ETF成份证券信息响应,参数pETFBasketField是一个CTORATstpETFBasketField类对象
    def OnRspQryETFBasket(self, pETFBasketField: "CTORATstpETFBasketField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryETFBasket(self, pETFBasketField, pRspInfoField, nRequestID, bIsLast)

	#查询投资者限仓信息响应,参数pInvestorPositionLimitField是一个CTORATstpInvestorPositionLimitField类对象
    def OnRspQryInvestorPositionLimit(self, pInvestorPositionLimitField: "CTORATstpInvestorPositionLimitField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryInvestorPositionLimit(self, pInvestorPositionLimitField, pRspInfoField, nRequestID, bIsLast)

	#查询深港通国际市场互联状态信息响应,参数pSZSEImcParamsField是一个CTORATstpSZSEImcParamsField类对象
    def OnRspQrySZSEImcParams(self, pSZSEImcParamsField: "CTORATstpSZSEImcParamsField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQrySZSEImcParams(self, pSZSEImcParamsField, pRspInfoField, nRequestID, bIsLast)

	#查询深港通国际市场互联汇率信息响应,参数pSZSEImcExchangeRateField是一个CTORATstpSZSEImcExchangeRateField类对象
    def OnRspQrySZSEImcExchangeRate(self, pSZSEImcExchangeRateField: "CTORATstpSZSEImcExchangeRateField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQrySZSEImcExchangeRate(self, pSZSEImcExchangeRateField, pRspInfoField, nRequestID, bIsLast)

	#查询深港通最小价差信息响应,参数pSZSEHKPriceTickInfoField是一个CTORATstpSZSEHKPriceTickInfoField类对象
    def OnRspQrySZSEHKPriceTickInfo(self, pSZSEHKPriceTickInfoField: "CTORATstpSZSEHKPriceTickInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQrySZSEHKPriceTickInfo(self, pSZSEHKPriceTickInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询LOF基金信息响应,参数pLofFundInfoField是一个CTORATstpLofFundInfoField类对象
    def OnRspQryLofFundInfo(self, pLofFundInfoField: "CTORATstpLofFundInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryLofFundInfo(self, pLofFundInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询投资者质押持仓响应,参数pPledgePositionField是一个CTORATstpPledgePositionField类对象
    def OnRspQryPledgePosition(self, pPledgePositionField: "CTORATstpPledgePositionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPledgePosition(self, pPledgePositionField, pRspInfoField, nRequestID, bIsLast)

	#查询证券质押信息响应,参数pPledgeInfoField是一个CTORATstpPledgeInfoField类对象
    def OnRspQryPledgeInfo(self, pPledgeInfoField: "CTORATstpPledgeInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPledgeInfo(self, pPledgeInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询系统节点信息响应,参数pSystemNodeInfoField是一个CTORATstpSystemNodeInfoField类对象
    def OnRspQrySystemNodeInfo(self, pSystemNodeInfoField: "CTORATstpSystemNodeInfoField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQrySystemNodeInfo(self, pSystemNodeInfoField, pRspInfoField, nRequestID, bIsLast)

	#查询标准券额度响应,参数pStandardBondPositionField是一个CTORATstpStandardBondPositionField类对象
    def OnRspQryStandardBondPosition(self, pStandardBondPositionField: "CTORATstpStandardBondPositionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryStandardBondPosition(self, pStandardBondPositionField, pRspInfoField, nRequestID, bIsLast)

	#查询未到期债券质押回购委托响应,参数pPrematurityRepoOrderField是一个CTORATstpPrematurityRepoOrderField类对象
    def OnRspQryPrematurityRepoOrder(self, pPrematurityRepoOrderField: "CTORATstpPrematurityRepoOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryPrematurityRepoOrder(self, pPrematurityRepoOrderField, pRspInfoField, nRequestID, bIsLast)

	#查询协议交易报单响应,参数pNegoOrderField是一个CTORATstpNegoOrderField类对象
    def OnRspQryNegoOrder(self, pNegoOrderField: "CTORATstpNegoOrderField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryNegoOrder(self, pNegoOrderField, pRspInfoField, nRequestID, bIsLast)

	#查询协议交易撤单响应,参数pNegoOrderActionField是一个CTORATstpNegoOrderActionField类对象
    def OnRspQryNegoOrderAction(self, pNegoOrderActionField: "CTORATstpNegoOrderActionField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryNegoOrderAction(self, pNegoOrderActionField, pRspInfoField, nRequestID, bIsLast)

	#查询协议交易成交响应,参数pNegoTradeField是一个CTORATstpNegoTradeField类对象
    def OnRspQryNegoTrade(self, pNegoTradeField: "CTORATstpNegoTradeField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryNegoTrade(self, pNegoTradeField, pRspInfoField, nRequestID, bIsLast)

	#查询协议交易参数响应,参数pNegotiationParamField是一个CTORATstpNegotiationParamField类对象
    def OnRspQryNegotiationParam(self, pNegotiationParamField: "CTORATstpNegotiationParamField", pRspInfoField: "CTORATstpRspInfoField", nRequestID: "int", bIsLast: "bool") -> "void":
        return _traderapi.CTORATstpTraderSpi_OnRspQryNegotiationParam(self, pNegotiationParamField, pRspInfoField, nRequestID, bIsLast)

    def __init__(self):
        if self.__class__ == CTORATstpTraderSpi:
            _self = None
        else:
            _self = self
        _traderapi.CTORATstpTraderSpi_swiginit(self, _traderapi.new_CTORATstpTraderSpi(_self, ))
    __swig_destroy__ = _traderapi.delete_CTORATstpTraderSpi
    def __disown__(self):
        self.this.disown()
        _traderapi.disown_CTORATstpTraderSpi(self)
        return weakref.proxy(self)

# Register CTORATstpTraderSpi in _traderapi:
_traderapi.CTORATstpTraderSpi_swigregister(CTORATstpTraderSpi)

class CTORATstpTraderApi(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    @staticmethod
	#创建接口对象,参数1为流文件存放目录,参数2为网络数据是否加密传输
    def CreateTstpTraderApi(*args) -> "TORASTOCKAPI::CTORATstpTraderApi *":
        return _traderapi.CTORATstpTraderApi_CreateTstpTraderApi(*args)

    @staticmethod
	#获取接口版本号
    def GetApiVersion() -> "char const *":
        return _traderapi.CTORATstpTraderApi_GetApiVersion()

	#删除接口对象,不再使用本接口对象时,调用该函数删除接口对象
    def Release(self) -> "void":
        return _traderapi.CTORATstpTraderApi_Release(self)

	#初始化接口对象,初始化运行环境,只有调用后,接口才开始工作
    def Init(self) -> "void":
        return _traderapi.CTORATstpTraderApi_Init(self)

	#等待接口线程结束运行
    def Join(self) -> "int":
        return _traderapi.CTORATstpTraderApi_Join(self)

	#注册前置机网络地址,pszFrontAddress为前置机网络地址,格式tcp://127.0.0.1:17001
    def RegisterFront(self, pszFrontAddress: "char *") -> "void":
        return _traderapi.CTORATstpTraderApi_RegisterFront(self, pszFrontAddress)

	#注册名字服务器网络地址,pszNsAddress为名字服务器网络地址,格式tcp://127.0.0.1:12001
    def RegisterNameServer(self, pszNsAddress: "char *") -> "void":
        return _traderapi.CTORATstpTraderApi_RegisterNameServer(self, pszNsAddress)

	#@param pFensUserInfoField：用户信息。,参数pFensUserInfoField是一个CTORATstpFensUserInfoField类对象
    def RegisterFensUserInfo(self, pFensUserInfoField: "CTORATstpFensUserInfoField") -> "void":
        return _traderapi.CTORATstpTraderApi_RegisterFensUserInfo(self, pFensUserInfoField)

	#注册回调接口,pSpi为派生自回调接口类的实例
    def RegisterSpi(self, pSpi: "CTORATstpTraderSpi") -> "void":
        return _traderapi.CTORATstpTraderApi_RegisterSpi(self, pSpi)

	#订阅私有流,nResumeType为私有流重传方式,TORA_TERT_RESTART表示从本交易日开始重传,TORA_TERT_RESUME表示从上次收到的续传,TORA_TERT_QUICK表示只传送登录后私有流的内容
    def SubscribePrivateTopic(self, nResumeType: "TORASTOCKAPI::TORA_TE_RESUME_TYPE") -> "void":
        return _traderapi.CTORATstpTraderApi_SubscribePrivateTopic(self, nResumeType)

	#订阅公共流,nResumeType为公有流重传方式,TORA_TERT_RESTART表示从本交易日开始重传,TORA_TERT_RESUME表示从上次收到的续传,TORA_TERT_QUICK表示只传送登录后公共流的内容
    def SubscribePublicTopic(self, nResumeType: "TORASTOCKAPI::TORA_TE_RESUME_TYPE") -> "void":
        return _traderapi.CTORATstpTraderApi_SubscribePublicTopic(self, nResumeType)

	#获取连接信息
    def ReqGetConnectionInfo(self, nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqGetConnectionInfo(self, nRequestID)

	#登录请求,参数pReqUserLoginField是一个CTORATstpReqUserLoginField类对象
    def ReqUserLogin(self, pReqUserLoginField: "CTORATstpReqUserLoginField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqUserLogin(self, pReqUserLoginField, nRequestID)

	#登出请求,参数pUserLogoutField是一个CTORATstpUserLogoutField类对象
    def ReqUserLogout(self, pUserLogoutField: "CTORATstpUserLogoutField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqUserLogout(self, pUserLogoutField, nRequestID)

	#修改密码请求,参数pUserPasswordUpdateField是一个CTORATstpUserPasswordUpdateField类对象
    def ReqUserPasswordUpdate(self, pUserPasswordUpdateField: "CTORATstpUserPasswordUpdateField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqUserPasswordUpdate(self, pUserPasswordUpdateField, nRequestID)

	#录入设备序列请求,参数pReqInputDeviceSerialField是一个CTORATstpReqInputDeviceSerialField类对象
    def ReqInputDeviceSerial(self, pReqInputDeviceSerialField: "CTORATstpReqInputDeviceSerialField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInputDeviceSerial(self, pReqInputDeviceSerialField, nRequestID)

	#报单录入请求,参数pInputOrderField是一个CTORATstpInputOrderField类对象
    def ReqOrderInsert(self, pInputOrderField: "CTORATstpInputOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqOrderInsert(self, pInputOrderField, nRequestID)

	#撤单请求,参数pInputOrderActionField是一个CTORATstpInputOrderActionField类对象
    def ReqOrderAction(self, pInputOrderActionField: "CTORATstpInputOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqOrderAction(self, pInputOrderActionField, nRequestID)

	#条件单录入请求,参数pInputCondOrderField是一个CTORATstpInputCondOrderField类对象
    def ReqCondOrderInsert(self, pInputCondOrderField: "CTORATstpInputCondOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqCondOrderInsert(self, pInputCondOrderField, nRequestID)

	#条件单撤单请求,参数pInputCondOrderActionField是一个CTORATstpInputCondOrderActionField类对象
    def ReqCondOrderAction(self, pInputCondOrderActionField: "CTORATstpInputCondOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqCondOrderAction(self, pInputCondOrderActionField, nRequestID)

	#协议交易报单录入请求,参数pInputNegoOrderField是一个CTORATstpInputNegoOrderField类对象
    def ReqNegoOrderInsert(self, pInputNegoOrderField: "CTORATstpInputNegoOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqNegoOrderInsert(self, pInputNegoOrderField, nRequestID)

	#协议交易报单操作录入请求,参数pInputNegoOrderActionField是一个CTORATstpInputNegoOrderActionField类对象
    def ReqNegoOrderAction(self, pInputNegoOrderActionField: "CTORATstpInputNegoOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqNegoOrderAction(self, pInputNegoOrderActionField, nRequestID)

	#报单录入请求（扩展）,参数pInputOrderExField是一个CTORATstpInputOrderExField类对象
    def ReqOrderInsertEx(self, pInputOrderExField: "CTORATstpInputOrderExField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqOrderInsertEx(self, pInputOrderExField, nRequestID)

	#报单操作请求（扩展）,参数pInputOrderActionExField是一个CTORATstpInputOrderActionExField类对象
    def ReqOrderActionEx(self, pInputOrderActionExField: "CTORATstpInputOrderActionExField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqOrderActionEx(self, pInputOrderActionExField, nRequestID)

	#资金转移请求,参数pInputTransferFundField是一个CTORATstpInputTransferFundField类对象
    def ReqTransferFund(self, pInputTransferFundField: "CTORATstpInputTransferFundField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqTransferFund(self, pInputTransferFundField, nRequestID)

	#仓位转移请求,参数pInputTransferPositionField是一个CTORATstpInputTransferPositionField类对象
    def ReqTransferPosition(self, pInputTransferPositionField: "CTORATstpInputTransferPositionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqTransferPosition(self, pInputTransferPositionField, nRequestID)

	#查询集中交易系统资金请求,参数pReqInquiryJZFundField是一个CTORATstpReqInquiryJZFundField类对象
    def ReqInquiryJZFund(self, pReqInquiryJZFundField: "CTORATstpReqInquiryJZFundField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInquiryJZFund(self, pReqInquiryJZFundField, nRequestID)

	#查询银行账户余额请求,参数pReqInquiryBankAccountFundField是一个CTORATstpReqInquiryBankAccountFundField类对象
    def ReqInquiryBankAccountFund(self, pReqInquiryBankAccountFundField: "CTORATstpReqInquiryBankAccountFundField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInquiryBankAccountFund(self, pReqInquiryBankAccountFundField, nRequestID)

	#查询最大报单量请求,参数pReqInquiryMaxOrderVolumeField是一个CTORATstpReqInquiryMaxOrderVolumeField类对象
    def ReqInquiryMaxOrderVolume(self, pReqInquiryMaxOrderVolumeField: "CTORATstpReqInquiryMaxOrderVolumeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInquiryMaxOrderVolume(self, pReqInquiryMaxOrderVolumeField, nRequestID)

	#查询交易成交集中度请求,参数pInquiryTradeConcentrationField是一个CTORATstpInquiryTradeConcentrationField类对象
    def ReqInquiryTradeConcentration(self, pInquiryTradeConcentrationField: "CTORATstpInquiryTradeConcentrationField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInquiryTradeConcentration(self, pInquiryTradeConcentrationField, nRequestID)

	#请求修改开仓成本请求,参数pReqModifyOpenPosCostField是一个CTORATstpReqModifyOpenPosCostField类对象
    def ReqModifyOpenPosCost(self, pReqModifyOpenPosCostField: "CTORATstpReqModifyOpenPosCostField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqModifyOpenPosCost(self, pReqModifyOpenPosCostField, nRequestID)

	#录入节点资金分配信息请求,参数pInputNodeFundAssignmentField是一个CTORATstpInputNodeFundAssignmentField类对象
    def ReqInputNodeFundAssignment(self, pInputNodeFundAssignmentField: "CTORATstpInputNodeFundAssignmentField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInputNodeFundAssignment(self, pInputNodeFundAssignmentField, nRequestID)

	#查询节点资金分配比例请求,参数pReqInquiryNodeFundAssignmentField是一个CTORATstpReqInquiryNodeFundAssignmentField类对象
    def ReqInquiryNodeFundAssignment(self, pReqInquiryNodeFundAssignmentField: "CTORATstpReqInquiryNodeFundAssignmentField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqInquiryNodeFundAssignment(self, pReqInquiryNodeFundAssignmentField, nRequestID)

	#查询交易所请求,参数pQryExchangeField是一个CTORATstpQryExchangeField类对象
    def ReqQryExchange(self, pQryExchangeField: "CTORATstpQryExchangeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryExchange(self, pQryExchangeField, nRequestID)

	#查询证券信息请求,参数pQrySecurityField是一个CTORATstpQrySecurityField类对象
    def ReqQrySecurity(self, pQrySecurityField: "CTORATstpQrySecurityField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQrySecurity(self, pQrySecurityField, nRequestID)

	#查询新股信息请求,参数pQryIPOInfoField是一个CTORATstpQryIPOInfoField类对象
    def ReqQryIPOInfo(self, pQryIPOInfoField: "CTORATstpQryIPOInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryIPOInfo(self, pQryIPOInfoField, nRequestID)

	#查询用户请求,参数pQryUserField是一个CTORATstpQryUserField类对象
    def ReqQryUser(self, pQryUserField: "CTORATstpQryUserField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryUser(self, pQryUserField, nRequestID)

	#查询投资者请求,参数pQryInvestorField是一个CTORATstpQryInvestorField类对象
    def ReqQryInvestor(self, pQryInvestorField: "CTORATstpQryInvestorField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryInvestor(self, pQryInvestorField, nRequestID)

	#查询股东账户请求,参数pQryShareholderAccountField是一个CTORATstpQryShareholderAccountField类对象
    def ReqQryShareholderAccount(self, pQryShareholderAccountField: "CTORATstpQryShareholderAccountField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryShareholderAccount(self, pQryShareholderAccountField, nRequestID)

	#查询配股配债信息请求,参数pQryRationalInfoField是一个CTORATstpQryRationalInfoField类对象
    def ReqQryRationalInfo(self, pQryRationalInfoField: "CTORATstpQryRationalInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryRationalInfo(self, pQryRationalInfoField, nRequestID)

	#查询报单请求,参数pQryOrderField是一个CTORATstpQryOrderField类对象
    def ReqQryOrder(self, pQryOrderField: "CTORATstpQryOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryOrder(self, pQryOrderField, nRequestID)

	#查询撤单请求,参数pQryOrderActionField是一个CTORATstpQryOrderActionField类对象
    def ReqQryOrderAction(self, pQryOrderActionField: "CTORATstpQryOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryOrderAction(self, pQryOrderActionField, nRequestID)

	#查询成交请求,参数pQryTradeField是一个CTORATstpQryTradeField类对象
    def ReqQryTrade(self, pQryTradeField: "CTORATstpQryTradeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryTrade(self, pQryTradeField, nRequestID)

	#查询资金账户请求,参数pQryTradingAccountField是一个CTORATstpQryTradingAccountField类对象
    def ReqQryTradingAccount(self, pQryTradingAccountField: "CTORATstpQryTradingAccountField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryTradingAccount(self, pQryTradingAccountField, nRequestID)

	#查询投资者持仓请求,参数pQryPositionField是一个CTORATstpQryPositionField类对象
    def ReqQryPosition(self, pQryPositionField: "CTORATstpQryPositionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPosition(self, pQryPositionField, nRequestID)

	#查询基础交易费率请求,参数pQryTradingFeeField是一个CTORATstpQryTradingFeeField类对象
    def ReqQryTradingFee(self, pQryTradingFeeField: "CTORATstpQryTradingFeeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryTradingFee(self, pQryTradingFeeField, nRequestID)

	#查询佣金费率请求,参数pQryInvestorTradingFeeField是一个CTORATstpQryInvestorTradingFeeField类对象
    def ReqQryInvestorTradingFee(self, pQryInvestorTradingFeeField: "CTORATstpQryInvestorTradingFeeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryInvestorTradingFee(self, pQryInvestorTradingFeeField, nRequestID)

	#查询新股申购额度请求,参数pQryIPOQuotaField是一个CTORATstpQryIPOQuotaField类对象
    def ReqQryIPOQuota(self, pQryIPOQuotaField: "CTORATstpQryIPOQuotaField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryIPOQuota(self, pQryIPOQuotaField, nRequestID)

	#查询报单明细资金请求,参数pQryOrderFundDetailField是一个CTORATstpQryOrderFundDetailField类对象
    def ReqQryOrderFundDetail(self, pQryOrderFundDetailField: "CTORATstpQryOrderFundDetailField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryOrderFundDetail(self, pQryOrderFundDetailField, nRequestID)

	#查询资金转移流水请求,参数pQryFundTransferDetailField是一个CTORATstpQryFundTransferDetailField类对象
    def ReqQryFundTransferDetail(self, pQryFundTransferDetailField: "CTORATstpQryFundTransferDetailField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryFundTransferDetail(self, pQryFundTransferDetailField, nRequestID)

	#查询持仓转移流水请求,参数pQryPositionTransferDetailField是一个CTORATstpQryPositionTransferDetailField类对象
    def ReqQryPositionTransferDetail(self, pQryPositionTransferDetailField: "CTORATstpQryPositionTransferDetailField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPositionTransferDetail(self, pQryPositionTransferDetailField, nRequestID)

	#查询外围系统仓位调拨流水请求,参数pQryPeripheryPositionTransferDetailField是一个CTORATstpQryPeripheryPositionTransferDetailField类对象
    def ReqQryPeripheryPositionTransferDetail(self, pQryPeripheryPositionTransferDetailField: "CTORATstpQryPeripheryPositionTransferDetailField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPeripheryPositionTransferDetail(self, pQryPeripheryPositionTransferDetailField, nRequestID)

	#查询外围系统资金调拨流水请求,参数pQryPeripheryFundTransferDetailField是一个CTORATstpQryPeripheryFundTransferDetailField类对象
    def ReqQryPeripheryFundTransferDetail(self, pQryPeripheryFundTransferDetailField: "CTORATstpQryPeripheryFundTransferDetailField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPeripheryFundTransferDetail(self, pQryPeripheryFundTransferDetailField, nRequestID)

	#查询债券转股信息请求,参数pQryBondConversionInfoField是一个CTORATstpQryBondConversionInfoField类对象
    def ReqQryBondConversionInfo(self, pQryBondConversionInfoField: "CTORATstpQryBondConversionInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryBondConversionInfo(self, pQryBondConversionInfoField, nRequestID)

	#查询债券回售信息请求,参数pQryBondPutbackInfoField是一个CTORATstpQryBondPutbackInfoField类对象
    def ReqQryBondPutbackInfo(self, pQryBondPutbackInfoField: "CTORATstpQryBondPutbackInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryBondPutbackInfo(self, pQryBondPutbackInfoField, nRequestID)

	#查询投资者条件单限制参数请求,参数pQryInvestorCondOrderLimitParamField是一个CTORATstpQryInvestorCondOrderLimitParamField类对象
    def ReqQryInvestorCondOrderLimitParam(self, pQryInvestorCondOrderLimitParamField: "CTORATstpQryInvestorCondOrderLimitParamField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryInvestorCondOrderLimitParam(self, pQryInvestorCondOrderLimitParamField, nRequestID)

	#查询条件单请求,参数pQryConditionOrderField是一个CTORATstpQryConditionOrderField类对象
    def ReqQryConditionOrder(self, pQryConditionOrderField: "CTORATstpQryConditionOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryConditionOrder(self, pQryConditionOrderField, nRequestID)

	#查询条件单撤单请求,参数pQryCondOrderActionField是一个CTORATstpQryCondOrderActionField类对象
    def ReqQryCondOrderAction(self, pQryCondOrderActionField: "CTORATstpQryCondOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryCondOrderAction(self, pQryCondOrderActionField, nRequestID)

	#查询交易通知请求,参数pQryTradingNoticeField是一个CTORATstpQryTradingNoticeField类对象
    def ReqQryTradingNotice(self, pQryTradingNoticeField: "CTORATstpQryTradingNoticeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryTradingNotice(self, pQryTradingNoticeField, nRequestID)

	#查询新股申购配号结果请求,参数pQryIPONumberResultField是一个CTORATstpQryIPONumberResultField类对象
    def ReqQryIPONumberResult(self, pQryIPONumberResultField: "CTORATstpQryIPONumberResultField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryIPONumberResult(self, pQryIPONumberResultField, nRequestID)

	#查询新股申购中签结果请求,参数pQryIPOMatchNumberResultField是一个CTORATstpQryIPOMatchNumberResultField类对象
    def ReqQryIPOMatchNumberResult(self, pQryIPOMatchNumberResultField: "CTORATstpQryIPOMatchNumberResultField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryIPOMatchNumberResult(self, pQryIPOMatchNumberResultField, nRequestID)

	#查询交易协议请求,参数pQryShareholderSpecPrivilegeField是一个CTORATstpQryShareholderSpecPrivilegeField类对象
    def ReqQryShareholderSpecPrivilege(self, pQryShareholderSpecPrivilegeField: "CTORATstpQryShareholderSpecPrivilegeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryShareholderSpecPrivilege(self, pQryShareholderSpecPrivilegeField, nRequestID)

	#查询市场请求,参数pQryMarketField是一个CTORATstpQryMarketField类对象
    def ReqQryMarket(self, pQryMarketField: "CTORATstpQryMarketField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryMarket(self, pQryMarketField, nRequestID)

	#查询ETF清单信息请求,参数pQryETFFileField是一个CTORATstpQryETFFileField类对象
    def ReqQryETFFile(self, pQryETFFileField: "CTORATstpQryETFFileField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryETFFile(self, pQryETFFileField, nRequestID)

	#查询ETF成份证券信息请求,参数pQryETFBasketField是一个CTORATstpQryETFBasketField类对象
    def ReqQryETFBasket(self, pQryETFBasketField: "CTORATstpQryETFBasketField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryETFBasket(self, pQryETFBasketField, nRequestID)

	#查询投资者限仓信息请求,参数pQryInvestorPositionLimitField是一个CTORATstpQryInvestorPositionLimitField类对象
    def ReqQryInvestorPositionLimit(self, pQryInvestorPositionLimitField: "CTORATstpQryInvestorPositionLimitField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryInvestorPositionLimit(self, pQryInvestorPositionLimitField, nRequestID)

	#查询深港通国际市场互联状态信息请求,参数pQrySZSEImcParamsField是一个CTORATstpQrySZSEImcParamsField类对象
    def ReqQrySZSEImcParams(self, pQrySZSEImcParamsField: "CTORATstpQrySZSEImcParamsField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQrySZSEImcParams(self, pQrySZSEImcParamsField, nRequestID)

	#查询深港通国际市场互联汇率信息请求,参数pQrySZSEImcExchangeRateField是一个CTORATstpQrySZSEImcExchangeRateField类对象
    def ReqQrySZSEImcExchangeRate(self, pQrySZSEImcExchangeRateField: "CTORATstpQrySZSEImcExchangeRateField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQrySZSEImcExchangeRate(self, pQrySZSEImcExchangeRateField, nRequestID)

	#查询深港通最小价差信息请求,参数pQrySZSEHKPriceTickInfoField是一个CTORATstpQrySZSEHKPriceTickInfoField类对象
    def ReqQrySZSEHKPriceTickInfo(self, pQrySZSEHKPriceTickInfoField: "CTORATstpQrySZSEHKPriceTickInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQrySZSEHKPriceTickInfo(self, pQrySZSEHKPriceTickInfoField, nRequestID)

	#查询LOF基金信息请求,参数pQryLofFundInfoField是一个CTORATstpQryLofFundInfoField类对象
    def ReqQryLofFundInfo(self, pQryLofFundInfoField: "CTORATstpQryLofFundInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryLofFundInfo(self, pQryLofFundInfoField, nRequestID)

	#查询投资者质押持仓请求,参数pQryPledgePositionField是一个CTORATstpQryPledgePositionField类对象
    def ReqQryPledgePosition(self, pQryPledgePositionField: "CTORATstpQryPledgePositionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPledgePosition(self, pQryPledgePositionField, nRequestID)

	#查询证券质押信息请求,参数pQryPledgeInfoField是一个CTORATstpQryPledgeInfoField类对象
    def ReqQryPledgeInfo(self, pQryPledgeInfoField: "CTORATstpQryPledgeInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPledgeInfo(self, pQryPledgeInfoField, nRequestID)

	#查询系统节点信息请求,参数pQrySystemNodeInfoField是一个CTORATstpQrySystemNodeInfoField类对象
    def ReqQrySystemNodeInfo(self, pQrySystemNodeInfoField: "CTORATstpQrySystemNodeInfoField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQrySystemNodeInfo(self, pQrySystemNodeInfoField, nRequestID)

	#查询标准券额度请求,参数pQryStandardBondPositionField是一个CTORATstpQryStandardBondPositionField类对象
    def ReqQryStandardBondPosition(self, pQryStandardBondPositionField: "CTORATstpQryStandardBondPositionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryStandardBondPosition(self, pQryStandardBondPositionField, nRequestID)

	#查询未到期债券质押回购委托请求,参数pQryPrematurityRepoOrderField是一个CTORATstpQryPrematurityRepoOrderField类对象
    def ReqQryPrematurityRepoOrder(self, pQryPrematurityRepoOrderField: "CTORATstpQryPrematurityRepoOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryPrematurityRepoOrder(self, pQryPrematurityRepoOrderField, nRequestID)

	#查询协议交易报单请求,参数pQryNegoOrderField是一个CTORATstpQryNegoOrderField类对象
    def ReqQryNegoOrder(self, pQryNegoOrderField: "CTORATstpQryNegoOrderField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryNegoOrder(self, pQryNegoOrderField, nRequestID)

	#查询协议交易撤单请求,参数pQryNegoOrderActionField是一个CTORATstpQryNegoOrderActionField类对象
    def ReqQryNegoOrderAction(self, pQryNegoOrderActionField: "CTORATstpQryNegoOrderActionField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryNegoOrderAction(self, pQryNegoOrderActionField, nRequestID)

	#查询协议交易成交请求,参数pQryNegoTradeField是一个CTORATstpQryNegoTradeField类对象
    def ReqQryNegoTrade(self, pQryNegoTradeField: "CTORATstpQryNegoTradeField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryNegoTrade(self, pQryNegoTradeField, nRequestID)

	#查询协议交易参数请求,参数pQryNegotiationParamField是一个CTORATstpQryNegotiationParamField类对象
    def ReqQryNegotiationParam(self, pQryNegotiationParamField: "CTORATstpQryNegotiationParamField", nRequestID: "int") -> "int":
        return _traderapi.CTORATstpTraderApi_ReqQryNegotiationParam(self, pQryNegotiationParamField, nRequestID)

# Register CTORATstpTraderApi in _traderapi:
_traderapi.CTORATstpTraderApi_swigregister(CTORATstpTraderApi)

	#创建接口对象,参数1为流文件存放目录,参数2为网络数据是否加密传输
def CTORATstpTraderApi_CreateTstpTraderApi(*args) -> "TORASTOCKAPI::CTORATstpTraderApi *":
    return _traderapi.CTORATstpTraderApi_CreateTstpTraderApi(*args)

	#获取接口版本号
def CTORATstpTraderApi_GetApiVersion() -> "char const *":
    return _traderapi.CTORATstpTraderApi_GetApiVersion()



